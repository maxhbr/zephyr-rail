/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/mhuber/MINE/REPOS/zephyr-rail/app/builds/b_u585i_iot02a/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /soc
 *   5   /soc/interrupt-controller@e000e100
 *   6   /clocks
 *   7   /clocks/clk-msis
 *   8   /clocks/pll
 *   9   /soc/rcc@46020c00
 *   10  /soc/pin-controller@42020000
 *   11  /soc/pin-controller@42020000/adc1_in15_pb0
 *   12  /soc/adc@42028000
 *   13  /dietemp
 *   14  /soc/pin-controller@42020000/i2c1_scl_pb8
 *   15  /soc/pin-controller@42020000/i2c1_sda_pb9
 *   16  /soc/i2c@40005400
 *   17  /soc/i2c@40005400/ft5336@38
 *   18  /lvgl_pointer
 *   19  /memory@20000000
 *   20  /stepper
 *   21  /vbat_1
 *   22  /soc/pin-controller@42020000/adc4_in19_pb1
 *   23  /soc/adc@46021000
 *   24  /vbat_4
 *   25  /vref_1
 *   26  /vref_4
 *   27  /clocks/clk-hse
 *   28  /clocks/clk-hsi
 *   29  /clocks/clk-hsi48
 *   30  /clocks/clk-lse
 *   31  /clocks/clk-lsi
 *   32  /clocks/clk-msik
 *   33  /clocks/pll2
 *   34  /clocks/pll3
 *   35  /cpus
 *   36  /cpus/power-states
 *   37  /cpus/power-states/state0
 *   38  /cpus/power-states/state1
 *   39  /cpus/power-states/state2
 *   40  /cpus/cpu@0
 *   41  /cpus/cpu@0/mpu@e000ed90
 *   42  /gpio_keys
 *   43  /soc/pin-controller@42020000/gpio@42020800
 *   44  /gpio_keys/button
 *   45  /leds
 *   46  /soc/pin-controller@42020000/gpio@42021c00
 *   47  /leds/led_1
 *   48  /leds/led_3
 *   49  /soc/aes@420c0000
 *   50  /soc/can@4000a400
 *   51  /soc/pin-controller@42020000/dac1_out1_pa4
 *   52  /soc/dac@46021800
 *   53  /soc/dma@40020000
 *   54  /soc/i2c@40008400
 *   55  /soc/i2c@46002800
 *   56  /soc/interrupt-controller@46022000
 *   57  /soc/memory@40036400
 *   58  /soc/octospi@420d1400
 *   59  /otgfs_phy
 *   60  /soc/pin-controller@42020000/usb_otg_fs_dm_pa11
 *   61  /soc/pin-controller@42020000/usb_otg_fs_dp_pa12
 *   62  /soc/otgfs@42040000
 *   63  /soc/rng@420c0800
 *   64  /soc/rtc@46007800
 *   65  /soc/rcc@46020c00/reset-controller
 *   66  /soc/sdmmc@420c8000
 *   67  /soc/sdmmc@420c8c00
 *   68  /soc/serial@40004400
 *   69  /soc/pin-controller@42020000/usart3_rx_pd9
 *   70  /soc/pin-controller@42020000/usart3_tx_pd8
 *   71  /soc/serial@40004800
 *   72  /soc/serial@40004c00
 *   73  /soc/serial@40005000
 *   74  /soc/pin-controller@42020000/usart1_rx_pa10
 *   75  /soc/pin-controller@42020000/usart1_tx_pa9
 *   76  /soc/serial@40013800
 *   77  /soc/serial@46002400
 *   78  /soc/spi@40003800
 *   79  /soc/spi@46002000
 *   80  /soc/timer@e000e010
 *   81  /soc/timers@40009400
 *   82  /soc/timers@46004400
 *   83  /soc/timers@46004800
 *   84  /soc/timers@46004c00
 *   85  /soc/ucpd@4000dc00
 *   86  /soc/watchdog@40002c00
 *   87  /soc/watchdog@40003000
 *   88  /soc/flash-controller@40022000
 *   89  /soc/flash-controller@40022000/flash@8000000
 *   90  /soc/flash-controller@40022000/flash@8000000/partitions
 *   91  /soc/flash-controller@40022000/flash@8000000/partitions/partition@0
 *   92  /soc/flash-controller@40022000/flash@8000000/partitions/partition@10000
 *   93  /soc/flash-controller@40022000/flash@8000000/partitions/partition@78000
 *   94  /soc/flash-controller@40022000/flash@8000000/partitions/partition@e0000
 *   95  /soc/flash-controller@40022000/flash@8000000/partitions/partition@f0000
 *   96  /soc/pin-controller@42020000/i2c2_scl_ph4
 *   97  /soc/pin-controller@42020000/i2c2_sda_ph5
 *   98  /soc/i2c@40005800
 *   99  /soc/i2c@40005800/hts221@5f
 *   100 /soc/memory-controller@420d0400
 *   101 /soc/memory-controller@420d0400/sram
 *   102 /soc/pin-controller@42020000/octospim_p2_clk_pf4
 *   103 /soc/pin-controller@42020000/octospim_p2_dqs_pf12
 *   104 /soc/pin-controller@42020000/octospim_p2_io0_pf0
 *   105 /soc/pin-controller@42020000/octospim_p2_io1_pf1
 *   106 /soc/pin-controller@42020000/octospim_p2_io2_pf2
 *   107 /soc/pin-controller@42020000/octospim_p2_io3_pf3
 *   108 /soc/pin-controller@42020000/octospim_p2_io4_ph9
 *   109 /soc/pin-controller@42020000/octospim_p2_io5_ph10
 *   110 /soc/pin-controller@42020000/octospim_p2_io6_ph11
 *   111 /soc/pin-controller@42020000/octospim_p2_io7_ph12
 *   112 /soc/pin-controller@42020000/octospim_p2_ncs_pi5
 *   113 /soc/octospi@420d2400
 *   114 /soc/octospi@420d2400/ospi-nor-flash@0
 *   115 /soc/octospi@420d2400/ospi-nor-flash@0/partitions
 *   116 /soc/octospi@420d2400/ospi-nor-flash@0/partitions/partition@0
 *   117 /soc/pin-controller@42020000/gpio@42020400
 *   118 /soc/pin-controller@42020000/gpio@42020c00
 *   119 /soc/pin-controller@42020000/gpio@42021400
 *   120 /soc/pin-controller@42020000/gpio@42021800
 *   121 /soc/pin-controller@42020000/gpio@42022000
 *   122 /soc/pin-controller@42020000/gpio@42021000
 *   123 /soc/pin-controller@42020000/spi1_miso_pe14
 *   124 /soc/pin-controller@42020000/spi1_mosi_pe15
 *   125 /soc/pin-controller@42020000/spi1_nss_pe12
 *   126 /soc/pin-controller@42020000/spi1_sck_pe13
 *   127 /soc/spi@40013000
 *   128 /soc/pin-controller@42020000/gpio@42020000
 *   129 /soc/spi@40013000/ili9340@0
 *   130 /soc/spi@40013000/sdhc@1
 *   131 /soc/spi@40013000/sdhc@1/mmc
 *   132 /soc/timers@40000000
 *   133 /soc/timers@40000000/pwm
 *   134 /soc/timers@40000400
 *   135 /soc/pin-controller@42020000/tim3_ch2_pe4
 *   136 /soc/timers@40000400/pwm
 *   137 /soc/timers@40000800
 *   138 /soc/timers@40000800/counter
 *   139 /soc/pin-controller@42020000/tim4_ch1_pb6
 *   140 /soc/timers@40000800/pwm
 *   141 /soc/timers@40000c00
 *   142 /soc/timers@40000c00/counter
 *   143 /soc/timers@40000c00/pwm
 *   144 /soc/timers@40001000
 *   145 /soc/timers@40001000/pwm
 *   146 /soc/timers@40001400
 *   147 /soc/timers@40001400/pwm
 *   148 /soc/timers@40012c00
 *   149 /soc/timers@40012c00/pwm
 *   150 /soc/timers@40013400
 *   151 /soc/timers@40013400/pwm
 *   152 /soc/timers@40014000
 *   153 /soc/timers@40014000/counter
 *   154 /soc/timers@40014000/pwm
 *   155 /soc/timers@40014400
 *   156 /soc/timers@40014400/counter
 *   157 /soc/timers@40014400/pwm
 *   158 /soc/timers@40014800
 *   159 /soc/timers@40014800/counter
 *   160 /soc/timers@40014800/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helper macros for child nodes of this node. */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_dietemp) fn(DT_N_S_vref_1) fn(DT_N_S_vref_4) fn(DT_N_S_vbat_1) fn(DT_N_S_vbat_4) fn(DT_N_S_otgfs_phy) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) fn(DT_N_S_lvgl_pointer) fn(DT_N_S_stepper)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_lvgl_pointer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_stepper)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref_1, __VA_ARGS__) fn(DT_N_S_vref_4, __VA_ARGS__) fn(DT_N_S_vbat_1, __VA_ARGS__) fn(DT_N_S_vbat_4, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_lvgl_pointer, __VA_ARGS__) fn(DT_N_S_stepper, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_lvgl_pointer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_stepper, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_dietemp) fn(DT_N_S_vref_1) fn(DT_N_S_vbat_4) fn(DT_N_S_otgfs_phy) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) fn(DT_N_S_lvgl_pointer) fn(DT_N_S_stepper)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_lvgl_pointer) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_stepper)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref_1, __VA_ARGS__) fn(DT_N_S_vbat_4, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_lvgl_pointer, __VA_ARGS__) fn(DT_N_S_stepper, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_lvgl_pointer, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_stepper, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /soc */ \
	6, /* /clocks */ \
	13, /* /dietemp */ \
	18, /* /lvgl_pointer */ \
	19, /* /memory@20000000 */ \
	20, /* /stepper */ \
	21, /* /vbat_1 */ \
	24, /* /vbat_4 */ \
	25, /* /vref_1 */ \
	26, /* /vref_4 */ \
	35, /* /cpus */ \
	42, /* /gpio_keys */ \
	45, /* /leds */ \
	59, /* /otgfs_phy */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_st_b_u585i_iot02a DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_st_b_u585i_iot02a 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "b-u585i-iot02a"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"st,b-u585i-iot02a"}
#define DT_N_P_compatible_IDX_0 "st,b-u585i-iot02a"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED st,b-u585i-iot02a
#define DT_N_P_compatible_IDX_0_STRING_TOKEN st_b_u585i_iot02a
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_B_U585I_IOT02A
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = arduino-header-r3):
 *   $ZEPHYR_BASE/dts/bindings/gpio/arduino-header-r3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3
#define DT_N_S_connector_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_arduino_header_r3 DT_N_S_connector
#define DT_N_NODELABEL_arduino_header DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_COMPAT_MATCHES_arduino_header_r3 1
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"arduino-header-r3"}
#define DT_N_S_connector_P_compatible_IDX_0 "arduino-header-r3"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UNQUOTED arduino-header-r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN arduino_header_r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN ARDUINO_HEADER_R3
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_rcc_46020c00) fn(DT_N_S_soc_S_interrupt_controller_46022000) fn(DT_N_S_soc_S_pin_controller_42020000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_memory_40036400) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_serial_40005000) fn(DT_N_S_soc_S_serial_46002400) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_46002000) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_46002800) fn(DT_N_S_soc_S_i2c_40008400) fn(DT_N_S_soc_S_timers_46004400) fn(DT_N_S_soc_S_timers_40009400) fn(DT_N_S_soc_S_timers_46004800) fn(DT_N_S_soc_S_timers_46004c00) fn(DT_N_S_soc_S_rtc_46007800) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000c00) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc_S_timers_40013400) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_octospi_420d1400) fn(DT_N_S_soc_S_octospi_420d2400) fn(DT_N_S_soc_S_aes_420c0000) fn(DT_N_S_soc_S_rng_420c0800) fn(DT_N_S_soc_S_sdmmc_420c8000) fn(DT_N_S_soc_S_sdmmc_420c8c00) fn(DT_N_S_soc_S_dac_46021800) fn(DT_N_S_soc_S_adc_42028000) fn(DT_N_S_soc_S_adc_46021000) fn(DT_N_S_soc_S_can_4000a400) fn(DT_N_S_soc_S_ucpd_4000dc00) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_memory_controller_420d0400) fn(DT_N_S_soc_S_otgfs_42040000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_46020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_46022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_40036400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_46002400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_46002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_46002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40008400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_46004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40009400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_46004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_46004c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_46007800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40013400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_octospi_420d1400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_octospi_420d2400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_aes_420c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_420c0800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_420c8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_420c8c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_46021800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_46021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_4000a400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ucpd_4000dc00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_controller_420d0400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_otgfs_42040000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_46020c00, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_46022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40036400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_46002400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_46002000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_46002800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40008400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_46004400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40009400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_46004800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_46004c00, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_46007800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d1400, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d2400, __VA_ARGS__) fn(DT_N_S_soc_S_aes_420c0000, __VA_ARGS__) fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_420c8000, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_420c8c00, __VA_ARGS__) fn(DT_N_S_soc_S_dac_46021800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_46021000, __VA_ARGS__) fn(DT_N_S_soc_S_can_4000a400, __VA_ARGS__) fn(DT_N_S_soc_S_ucpd_4000dc00, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_controller_420d0400, __VA_ARGS__) fn(DT_N_S_soc_S_otgfs_42040000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_46020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_46022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_40036400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_46002400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_46002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_46002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40008400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_46004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40009400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_46004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_46004c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_46007800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40013400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_octospi_420d1400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_octospi_420d2400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_aes_420c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_420c8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_420c8c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_46021800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_46021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_4000a400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ucpd_4000dc00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_controller_420d0400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_otgfs_42040000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_rcc_46020c00) fn(DT_N_S_soc_S_interrupt_controller_46022000) fn(DT_N_S_soc_S_pin_controller_42020000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_timers_46004400) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_octospi_420d2400) fn(DT_N_S_soc_S_aes_420c0000) fn(DT_N_S_soc_S_rng_420c0800) fn(DT_N_S_soc_S_dac_46021800) fn(DT_N_S_soc_S_adc_42028000) fn(DT_N_S_soc_S_adc_46021000) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_otgfs_42040000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_46020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_46022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_46004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_octospi_420d2400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_aes_420c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_420c0800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_46021800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_46021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_otgfs_42040000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_46020c00, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_46022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_46004400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d2400, __VA_ARGS__) fn(DT_N_S_soc_S_aes_420c0000, __VA_ARGS__) fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) fn(DT_N_S_soc_S_dac_46021800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_46021000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_otgfs_42040000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_46020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_46022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_46004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_octospi_420d2400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_aes_420c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_46021800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_46021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_otgfs_42040000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 4
#define DT_N_S_soc_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	10, /* /soc/pin-controller@42020000 */ \
	12, /* /soc/adc@42028000 */ \
	16, /* /soc/i2c@40005400 */ \
	23, /* /soc/adc@46021000 */ \
	49, /* /soc/aes@420c0000 */ \
	50, /* /soc/can@4000a400 */ \
	52, /* /soc/dac@46021800 */ \
	53, /* /soc/dma@40020000 */ \
	54, /* /soc/i2c@40008400 */ \
	55, /* /soc/i2c@46002800 */ \
	56, /* /soc/interrupt-controller@46022000 */ \
	57, /* /soc/memory@40036400 */ \
	58, /* /soc/octospi@420d1400 */ \
	62, /* /soc/otgfs@42040000 */ \
	63, /* /soc/rng@420c0800 */ \
	64, /* /soc/rtc@46007800 */ \
	66, /* /soc/sdmmc@420c8000 */ \
	67, /* /soc/sdmmc@420c8c00 */ \
	68, /* /soc/serial@40004400 */ \
	71, /* /soc/serial@40004800 */ \
	72, /* /soc/serial@40004c00 */ \
	73, /* /soc/serial@40005000 */ \
	76, /* /soc/serial@40013800 */ \
	77, /* /soc/serial@46002400 */ \
	78, /* /soc/spi@40003800 */ \
	79, /* /soc/spi@46002000 */ \
	80, /* /soc/timer@e000e010 */ \
	81, /* /soc/timers@40009400 */ \
	82, /* /soc/timers@46004400 */ \
	83, /* /soc/timers@46004800 */ \
	84, /* /soc/timers@46004c00 */ \
	85, /* /soc/ucpd@4000dc00 */ \
	86, /* /soc/watchdog@40002c00 */ \
	87, /* /soc/watchdog@40003000 */ \
	88, /* /soc/flash-controller@40022000 */ \
	98, /* /soc/i2c@40005800 */ \
	100, /* /soc/memory-controller@420d0400 */ \
	113, /* /soc/octospi@420d2400 */ \
	127, /* /soc/spi@40013000 */ \
	132, /* /soc/timers@40000000 */ \
	134, /* /soc/timers@40000400 */ \
	137, /* /soc/timers@40000800 */ \
	141, /* /soc/timers@40000c00 */ \
	144, /* /soc/timers@40001000 */ \
	146, /* /soc/timers@40001400 */ \
	148, /* /soc/timers@40012c00 */ \
	150, /* /soc/timers@40013400 */ \
	152, /* /soc/timers@40014000 */ \
	155, /* /soc/timers@40014400 */ \
	158, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_st_stm32u585 DT_N_S_soc
#define DT_N_INST_0_st_stm32u5   DT_N_S_soc
#define DT_N_INST_0_simple_bus   DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32u585 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "stm32u585"
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32u5 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_1 "stm32u5"
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"st,stm32u585", "st,stm32u5", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "st,stm32u585"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u585
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN st_stm32u585
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U585
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "st,stm32u5"
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UNQUOTED st,stm32u5
#define DT_N_S_soc_P_compatible_IDX_1_STRING_TOKEN st_stm32u5
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32U5
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 3
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v8m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v8m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 5
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	12, /* /soc/adc@42028000 */ \
	16, /* /soc/i2c@40005400 */ \
	23, /* /soc/adc@46021000 */ \
	49, /* /soc/aes@420c0000 */ \
	50, /* /soc/can@4000a400 */ \
	53, /* /soc/dma@40020000 */ \
	54, /* /soc/i2c@40008400 */ \
	55, /* /soc/i2c@46002800 */ \
	56, /* /soc/interrupt-controller@46022000 */ \
	58, /* /soc/octospi@420d1400 */ \
	62, /* /soc/otgfs@42040000 */ \
	63, /* /soc/rng@420c0800 */ \
	64, /* /soc/rtc@46007800 */ \
	66, /* /soc/sdmmc@420c8000 */ \
	67, /* /soc/sdmmc@420c8c00 */ \
	68, /* /soc/serial@40004400 */ \
	71, /* /soc/serial@40004800 */ \
	72, /* /soc/serial@40004c00 */ \
	73, /* /soc/serial@40005000 */ \
	76, /* /soc/serial@40013800 */ \
	77, /* /soc/serial@46002400 */ \
	78, /* /soc/spi@40003800 */ \
	79, /* /soc/spi@46002000 */ \
	81, /* /soc/timers@40009400 */ \
	82, /* /soc/timers@46004400 */ \
	83, /* /soc/timers@46004800 */ \
	84, /* /soc/timers@46004c00 */ \
	85, /* /soc/ucpd@4000dc00 */ \
	86, /* /soc/watchdog@40002c00 */ \
	88, /* /soc/flash-controller@40022000 */ \
	98, /* /soc/i2c@40005800 */ \
	113, /* /soc/octospi@420d2400 */ \
	127, /* /soc/spi@40013000 */ \
	132, /* /soc/timers@40000000 */ \
	134, /* /soc/timers@40000400 */ \
	137, /* /soc/timers@40000800 */ \
	141, /* /soc/timers@40000c00 */ \
	144, /* /soc/timers@40001000 */ \
	146, /* /soc/timers@40001400 */ \
	148, /* /soc/timers@40012c00 */ \
	150, /* /soc/timers@40013400 */ \
	152, /* /soc/timers@40014000 */ \
	155, /* /soc/timers@40014400 */ \
	158, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v8m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v8m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v8m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v8m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v8m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V8M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_hsi48) fn(DT_N_S_clocks_S_clk_msis) fn(DT_N_S_clocks_S_clk_msik) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_clocks_S_pll2) fn(DT_N_S_clocks_S_pll3)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi48) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_msis) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_msik) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll3)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi48, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_msis, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_msik, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_clocks_S_pll2, __VA_ARGS__) fn(DT_N_S_clocks_S_pll3, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi48, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_msis, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_msik, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll3, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_hsi48) fn(DT_N_S_clocks_S_clk_msis) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hsi48) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_msis) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hsi48, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_msis, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hsi48, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_msis, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 6
#define DT_N_S_clocks_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	7, /* /clocks/clk-msis */ \
	8, /* /clocks/pll */ \
	27, /* /clocks/clk-hse */ \
	28, /* /clocks/clk-hsi */ \
	29, /* /clocks/clk-hsi48 */ \
	30, /* /clocks/clk-lse */ \
	31, /* /clocks/clk-lsi */ \
	32, /* /clocks/clk-msik */ \
	33, /* /clocks/pll2 */ \
	34, /* /clocks/pll3 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk-msis
 *
 * Node identifier: DT_N_S_clocks_S_clk_msis
 *
 * Binding (compatible = st,stm32u5-msi-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32u5-msi-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_msis_PATH "/clocks/clk-msis"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_msis_FULL_NAME "clk-msis"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_msis_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_msis_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_msis_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_msis_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_msis_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_msis_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_msis_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_msis_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_msis_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_msis_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_msis_ORD 7
#define DT_N_S_clocks_S_clk_msis_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_msis_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_msis_SUPPORTS_ORDS \
	8, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_msis_EXISTS 1
#define DT_N_INST_0_st_stm32u5_msi_clock DT_N_S_clocks_S_clk_msis
#define DT_N_NODELABEL_clk_msis          DT_N_S_clocks_S_clk_msis

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_msis_REG_NUM 0
#define DT_N_S_clocks_S_clk_msis_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_msis_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_msis_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_msis_COMPAT_MATCHES_st_stm32u5_msi_clock 1
#define DT_N_S_clocks_S_clk_msis_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msis_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_msis_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msis_COMPAT_MODEL_IDX_0 "stm32u5-msi-clock"
#define DT_N_S_clocks_S_clk_msis_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_msis_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_msis_P_msi_range 4
#define DT_N_S_clocks_S_clk_msis_P_msi_range_ENUM_IDX 4
#define DT_N_S_clocks_S_clk_msis_P_msi_range_ENUM_VAL_4_EXISTS 1
#define DT_N_S_clocks_S_clk_msis_P_msi_range_EXISTS 1
#define DT_N_S_clocks_S_clk_msis_P_msi_pll_mode 1
#define DT_N_S_clocks_S_clk_msis_P_msi_pll_mode_EXISTS 1
#define DT_N_S_clocks_S_clk_msis_P_status "okay"
#define DT_N_S_clocks_S_clk_msis_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_clk_msis_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_clk_msis_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_clk_msis_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_clk_msis_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msis_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_clk_msis_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_clk_msis_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_clk_msis_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_clk_msis_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_msis, status, 0)
#define DT_N_S_clocks_S_clk_msis_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_msis, status, 0)
#define DT_N_S_clocks_S_clk_msis_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_msis, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msis_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_msis, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msis_P_status_LEN 1
#define DT_N_S_clocks_S_clk_msis_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_msis_P_compatible {"st,stm32u5-msi-clock"}
#define DT_N_S_clocks_S_clk_msis_P_compatible_IDX_0 "st,stm32u5-msi-clock"
#define DT_N_S_clocks_S_clk_msis_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-msi-clock
#define DT_N_S_clocks_S_clk_msis_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_msi_clock
#define DT_N_S_clocks_S_clk_msis_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_MSI_CLOCK
#define DT_N_S_clocks_S_clk_msis_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msis_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_msis, compatible, 0)
#define DT_N_S_clocks_S_clk_msis_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_msis, compatible, 0)
#define DT_N_S_clocks_S_clk_msis_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_msis, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msis_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_msis, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msis_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_msis_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_msis_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_msis_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_msis_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_msis_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = st,stm32u5-pll-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32u5-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 8
#define DT_N_S_clocks_S_pll_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	6, /* /clocks */ \
	7, /* /clocks/clk-msis */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS \
	9, /* /soc/rcc@46020c00 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_st_stm32u5_pll_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll1              DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll               DT_N_S_clocks_S_pll

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_RANGES_NUM 0
#define DT_N_S_clocks_S_pll_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_st_stm32u5_pll_clock 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0 "stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_msis
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_m 1
#define DT_N_S_clocks_S_pll_P_div_m_EXISTS 1
#define DT_N_S_clocks_S_pll_P_mul_n 80
#define DT_N_S_clocks_S_pll_P_mul_n_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_q 2
#define DT_N_S_clocks_S_pll_P_div_q_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_r 2
#define DT_N_S_clocks_S_pll_P_div_r_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status "okay"
#define DT_N_S_clocks_S_pll_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_pll_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_pll_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, status, 0)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, status, 0)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_LEN 1
#define DT_N_S_clocks_S_pll_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible {"st,stm32u5-pll-clock"}
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0 "st,stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-pll-clock
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_pll_clock
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_PLL_CLOCK
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll_P_wakeup_source 0
#define DT_N_S_clocks_S_pll_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_pll_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_pll_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rcc@46020c00
 *
 * Node identifier: DT_N_S_soc_S_rcc_46020c00
 *
 * Binding (compatible = st,stm32u5-rcc):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32u5-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_46020c00_PATH "/soc/rcc@46020c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_46020c00_FULL_NAME "rcc@46020c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_46020c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_46020c00_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_46020c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller)
#define DT_N_S_soc_S_rcc_46020c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller)
#define DT_N_S_soc_S_rcc_46020c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_46020c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_46020c00_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller)
#define DT_N_S_soc_S_rcc_46020c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller)
#define DT_N_S_soc_S_rcc_46020c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_46020c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_46020c00_ORD 9
#define DT_N_S_soc_S_rcc_46020c00_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_46020c00_REQUIRES_ORDS \
	4, /* /soc */ \
	8, /* /clocks/pll */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_46020c00_SUPPORTS_ORDS \
	12, /* /soc/adc@42028000 */ \
	16, /* /soc/i2c@40005400 */ \
	23, /* /soc/adc@46021000 */ \
	43, /* /soc/pin-controller@42020000/gpio@42020800 */ \
	46, /* /soc/pin-controller@42020000/gpio@42021c00 */ \
	49, /* /soc/aes@420c0000 */ \
	50, /* /soc/can@4000a400 */ \
	52, /* /soc/dac@46021800 */ \
	53, /* /soc/dma@40020000 */ \
	54, /* /soc/i2c@40008400 */ \
	55, /* /soc/i2c@46002800 */ \
	57, /* /soc/memory@40036400 */ \
	58, /* /soc/octospi@420d1400 */ \
	62, /* /soc/otgfs@42040000 */ \
	63, /* /soc/rng@420c0800 */ \
	64, /* /soc/rtc@46007800 */ \
	65, /* /soc/rcc@46020c00/reset-controller */ \
	66, /* /soc/sdmmc@420c8000 */ \
	67, /* /soc/sdmmc@420c8c00 */ \
	68, /* /soc/serial@40004400 */ \
	71, /* /soc/serial@40004800 */ \
	72, /* /soc/serial@40004c00 */ \
	73, /* /soc/serial@40005000 */ \
	76, /* /soc/serial@40013800 */ \
	77, /* /soc/serial@46002400 */ \
	78, /* /soc/spi@40003800 */ \
	79, /* /soc/spi@46002000 */ \
	81, /* /soc/timers@40009400 */ \
	82, /* /soc/timers@46004400 */ \
	83, /* /soc/timers@46004800 */ \
	84, /* /soc/timers@46004c00 */ \
	85, /* /soc/ucpd@4000dc00 */ \
	86, /* /soc/watchdog@40002c00 */ \
	98, /* /soc/i2c@40005800 */ \
	100, /* /soc/memory-controller@420d0400 */ \
	113, /* /soc/octospi@420d2400 */ \
	117, /* /soc/pin-controller@42020000/gpio@42020400 */ \
	118, /* /soc/pin-controller@42020000/gpio@42020c00 */ \
	119, /* /soc/pin-controller@42020000/gpio@42021400 */ \
	120, /* /soc/pin-controller@42020000/gpio@42021800 */ \
	121, /* /soc/pin-controller@42020000/gpio@42022000 */ \
	122, /* /soc/pin-controller@42020000/gpio@42021000 */ \
	127, /* /soc/spi@40013000 */ \
	128, /* /soc/pin-controller@42020000/gpio@42020000 */ \
	132, /* /soc/timers@40000000 */ \
	134, /* /soc/timers@40000400 */ \
	137, /* /soc/timers@40000800 */ \
	141, /* /soc/timers@40000c00 */ \
	144, /* /soc/timers@40001000 */ \
	146, /* /soc/timers@40001400 */ \
	148, /* /soc/timers@40012c00 */ \
	150, /* /soc/timers@40013400 */ \
	152, /* /soc/timers@40014000 */ \
	155, /* /soc/timers@40014400 */ \
	158, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_46020c00_EXISTS 1
#define DT_N_INST_0_st_stm32u5_rcc DT_N_S_soc_S_rcc_46020c00
#define DT_N_NODELABEL_rcc         DT_N_S_soc_S_rcc_46020c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_46020c00_REG_NUM 1
#define DT_N_S_soc_S_rcc_46020c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_REG_IDX_0_VAL_ADDRESS 1174539264 /* 0x46020c00 */
#define DT_N_S_soc_S_rcc_46020c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_46020c00_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_46020c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_46020c00_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_46020c00_COMPAT_MATCHES_st_stm32u5_rcc 1
#define DT_N_S_soc_S_rcc_46020c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_46020c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_COMPAT_MODEL_IDX_0 "stm32u5-rcc"
#define DT_N_S_soc_S_rcc_46020c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_46020c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_46020c00_P_apb3_prescaler 1
#define DT_N_S_soc_S_rcc_46020c00_P_apb3_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_46020c00_P_apb3_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_apb3_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_reg {1174539264 /* 0x46020c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_46020c00_P_reg_IDX_0 1174539264
#define DT_N_S_soc_S_rcc_46020c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_46020c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_clock_frequency 160000000
#define DT_N_S_soc_S_rcc_46020c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_ahb_prescaler 1
#define DT_N_S_soc_S_rcc_46020c00_P_ahb_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_46020c00_P_ahb_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_ahb_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_apb1_prescaler 1
#define DT_N_S_soc_S_rcc_46020c00_P_apb1_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_46020c00_P_apb1_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_apb1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_apb2_prescaler 1
#define DT_N_S_soc_S_rcc_46020c00_P_apb2_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_46020c00_P_apb2_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_apb2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_compatible {"st,stm32u5-rcc"}
#define DT_N_S_soc_S_rcc_46020c00_P_compatible_IDX_0 "st,stm32u5-rcc"
#define DT_N_S_soc_S_rcc_46020c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-rcc
#define DT_N_S_soc_S_rcc_46020c00_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_rcc
#define DT_N_S_soc_S_rcc_46020c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_RCC
#define DT_N_S_soc_S_rcc_46020c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_46020c00, compatible, 0)
#define DT_N_S_soc_S_rcc_46020c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_46020c00, compatible, 0)
#define DT_N_S_soc_S_rcc_46020c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_46020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_46020c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_46020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_46020c00_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_46020c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll
#define DT_N_S_soc_S_rcc_46020c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_46020c00, clocks, 0)
#define DT_N_S_soc_S_rcc_46020c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_46020c00, clocks, 0)
#define DT_N_S_soc_S_rcc_46020c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_46020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_46020c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_46020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_46020c00_P_clocks_LEN 1
#define DT_N_S_soc_S_rcc_46020c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_46020c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_46020c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_PATH "/soc/pin-controller@42020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_FULL_NAME "pin-controller@42020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_ORD 10
#define DT_N_S_soc_S_pin_controller_42020000_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_SUPPORTS_ORDS \
	11, /* /soc/pin-controller@42020000/adc1_in15_pb0 */ \
	14, /* /soc/pin-controller@42020000/i2c1_scl_pb8 */ \
	15, /* /soc/pin-controller@42020000/i2c1_sda_pb9 */ \
	22, /* /soc/pin-controller@42020000/adc4_in19_pb1 */ \
	43, /* /soc/pin-controller@42020000/gpio@42020800 */ \
	46, /* /soc/pin-controller@42020000/gpio@42021c00 */ \
	51, /* /soc/pin-controller@42020000/dac1_out1_pa4 */ \
	60, /* /soc/pin-controller@42020000/usb_otg_fs_dm_pa11 */ \
	61, /* /soc/pin-controller@42020000/usb_otg_fs_dp_pa12 */ \
	69, /* /soc/pin-controller@42020000/usart3_rx_pd9 */ \
	70, /* /soc/pin-controller@42020000/usart3_tx_pd8 */ \
	74, /* /soc/pin-controller@42020000/usart1_rx_pa10 */ \
	75, /* /soc/pin-controller@42020000/usart1_tx_pa9 */ \
	96, /* /soc/pin-controller@42020000/i2c2_scl_ph4 */ \
	97, /* /soc/pin-controller@42020000/i2c2_sda_ph5 */ \
	102, /* /soc/pin-controller@42020000/octospim_p2_clk_pf4 */ \
	103, /* /soc/pin-controller@42020000/octospim_p2_dqs_pf12 */ \
	104, /* /soc/pin-controller@42020000/octospim_p2_io0_pf0 */ \
	105, /* /soc/pin-controller@42020000/octospim_p2_io1_pf1 */ \
	106, /* /soc/pin-controller@42020000/octospim_p2_io2_pf2 */ \
	107, /* /soc/pin-controller@42020000/octospim_p2_io3_pf3 */ \
	108, /* /soc/pin-controller@42020000/octospim_p2_io4_ph9 */ \
	109, /* /soc/pin-controller@42020000/octospim_p2_io5_ph10 */ \
	110, /* /soc/pin-controller@42020000/octospim_p2_io6_ph11 */ \
	111, /* /soc/pin-controller@42020000/octospim_p2_io7_ph12 */ \
	112, /* /soc/pin-controller@42020000/octospim_p2_ncs_pi5 */ \
	117, /* /soc/pin-controller@42020000/gpio@42020400 */ \
	118, /* /soc/pin-controller@42020000/gpio@42020c00 */ \
	119, /* /soc/pin-controller@42020000/gpio@42021400 */ \
	120, /* /soc/pin-controller@42020000/gpio@42021800 */ \
	121, /* /soc/pin-controller@42020000/gpio@42022000 */ \
	122, /* /soc/pin-controller@42020000/gpio@42021000 */ \
	123, /* /soc/pin-controller@42020000/spi1_miso_pe14 */ \
	124, /* /soc/pin-controller@42020000/spi1_mosi_pe15 */ \
	125, /* /soc/pin-controller@42020000/spi1_nss_pe12 */ \
	126, /* /soc/pin-controller@42020000/spi1_sck_pe13 */ \
	128, /* /soc/pin-controller@42020000/gpio@42020000 */ \
	135, /* /soc/pin-controller@42020000/tim3_ch2_pe4 */ \
	139, /* /soc/pin-controller@42020000/tim4_ch1_pb6 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_42020000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_42020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_REG_IDX_0_VAL_ADDRESS 1107427328 /* 0x42020000 */
#define DT_N_S_soc_S_pin_controller_42020000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_pin_controller_42020000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_42020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_COMPAT_MODEL_IDX_0 "stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_42020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_P_reg {1107427328 /* 0x42020000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_pin_controller_42020000_P_reg_IDX_0 1107427328
#define DT_N_S_soc_S_pin_controller_42020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_pin_controller_42020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa11 0
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa11_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa12 0
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa11_pa12 0
#define DT_N_S_soc_S_pin_controller_42020000_P_remap_pa11_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pinctrl
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_IDX_0_STRING_TOKEN st_stm32_pinctrl
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PINCTRL
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/adc1_in15_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_PATH "/soc/pin-controller@42020000/adc1_in15_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_FULL_NAME "adc1_in15_pb0"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_ORD 11
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_SUPPORTS_ORDS \
	12, /* /soc/adc@42028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_EXISTS 1
#define DT_N_NODELABEL_adc1_in15_pb0 DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_pinmux 528
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/adc@42028000
 *
 * Node identifier: DT_N_S_soc_S_adc_42028000
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_42028000_PATH "/soc/adc@42028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_42028000_FULL_NAME "adc@42028000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_42028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_42028000_CHILD_IDX 45

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_42028000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_42028000_ORD 12
#define DT_N_S_soc_S_adc_42028000_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_42028000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	11, /* /soc/pin-controller@42020000/adc1_in15_pb0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_42028000_SUPPORTS_ORDS \
	13, /* /dietemp */ \
	21, /* /vbat_1 */ \
	25, /* /vref_1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_42028000_EXISTS 1
#define DT_N_INST_0_st_stm32_adc DT_N_S_soc_S_adc_42028000
#define DT_N_NODELABEL_adc1      DT_N_S_soc_S_adc_42028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_42028000_REG_NUM 1
#define DT_N_S_soc_S_adc_42028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_REG_IDX_0_VAL_ADDRESS 1107460096 /* 0x42028000 */
#define DT_N_S_soc_S_adc_42028000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_42028000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_42028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_42028000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_42028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_42028000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_adc_42028000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_COMPAT_MODEL_IDX_0 "stm32-adc"
#define DT_N_S_soc_S_adc_42028000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_42028000_PINCTRL_NUM 1
#define DT_N_S_soc_S_adc_42028000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_adc_42028000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_42028000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_adc_42028000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_42028000_P_reg {1107460096 /* 0x42028000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_42028000_P_reg_IDX_0 1107460096
#define DT_N_S_soc_S_adc_42028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_42028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_VAL_bits 1024
#define DT_N_S_soc_S_adc_42028000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, clocks, 0)
#define DT_N_S_soc_S_adc_42028000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, clocks, 0)
#define DT_N_S_soc_S_adc_42028000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_42028000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_42028000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_adc_42028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_42028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_adc_42028000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_clock_source 2
#define DT_N_S_soc_S_adc_42028000_P_st_adc_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_clock_source_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_clock_source_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_prescaler 4
#define DT_N_S_soc_S_adc_42028000_P_st_adc_prescaler_ENUM_IDX 2
#define DT_N_S_soc_S_adc_42028000_P_st_adc_prescaler_ENUM_VAL_4_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_prescaler_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_vref_mv 3300
#define DT_N_S_soc_S_adc_42028000_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_resolutions {7365132 /* 0x70620c */, 6382092 /* 0x61620c */, 5399052 /* 0x52620c */, 4416012 /* 0x43620c */}
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_0 7365132
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_1 6382092
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_2 5399052
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_3 4416012
#define DT_N_S_soc_S_adc_42028000_P_resolutions_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_resolutions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, resolutions, 0) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 1) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 2) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 3)
#define DT_N_S_soc_S_adc_42028000_P_resolutions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, resolutions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 3)
#define DT_N_S_soc_S_adc_42028000_P_resolutions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, resolutions, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_resolutions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, resolutions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_resolutions_LEN 4
#define DT_N_S_soc_S_adc_42028000_P_resolutions_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times {5 /* 0x5 */, 6 /* 0x6 */, 12 /* 0xc */, 20 /* 0x14 */, 36 /* 0x24 */, 68 /* 0x44 */, 391 /* 0x187 */, 814 /* 0x32e */}
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_0 5
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_1 6
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_2 12
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_3 20
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_4 36
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_4_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_5 68
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_5_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_6 391
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_6_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_7 814
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_IDX_7_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, sampling_times, 0) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 1) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 2) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 3) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 4) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 5) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 6) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 7)
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, sampling_times, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 7)
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, sampling_times, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, sampling_times, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_42028000, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_LEN 8
#define DT_N_S_soc_S_adc_42028000_P_sampling_times_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_sequencer 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_sequencer_ENUM_IDX 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_sequencer_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_st_adc_sequencer_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_status "okay"
#define DT_N_S_soc_S_adc_42028000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_42028000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_42028000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_42028000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_42028000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_42028000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_42028000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_42028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, status, 0)
#define DT_N_S_soc_S_adc_42028000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, status, 0)
#define DT_N_S_soc_S_adc_42028000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_status_LEN 1
#define DT_N_S_soc_S_adc_42028000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_42028000_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_42028000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-adc
#define DT_N_S_soc_S_adc_42028000_P_compatible_IDX_0_STRING_TOKEN st_stm32_adc
#define DT_N_S_soc_S_adc_42028000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_ADC
#define DT_N_S_soc_S_adc_42028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_42028000, compatible, 0)
#define DT_N_S_soc_S_adc_42028000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_42028000, compatible, 0)
#define DT_N_S_soc_S_adc_42028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_42028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_42028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_42028000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_42028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_42028000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_42028000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_42028000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /dietemp
 *
 * Node identifier: DT_N_S_dietemp
 *
 * Binding (compatible = st,stm32-temp-cal):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-temp-cal.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_dietemp_PATH "/dietemp"

/* Node's name with unit-address: */
#define DT_N_S_dietemp_FULL_NAME "dietemp"

/* Node parent (/) identifier: */
#define DT_N_S_dietemp_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_dietemp_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_dietemp_FOREACH_CHILD(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_dietemp_ORD 13
#define DT_N_S_dietemp_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_dietemp_REQUIRES_ORDS \
	0, /* / */ \
	12, /* /soc/adc@42028000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_dietemp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_dietemp_EXISTS 1
#define DT_N_ALIAS_die_temp0          DT_N_S_dietemp
#define DT_N_INST_0_st_stm32_temp_cal DT_N_S_dietemp
#define DT_N_NODELABEL_die_temp       DT_N_S_dietemp

/* Macros for properties that are special in the specification: */
#define DT_N_S_dietemp_REG_NUM 0
#define DT_N_S_dietemp_RANGES_NUM 0
#define DT_N_S_dietemp_FOREACH_RANGE(fn) 
#define DT_N_S_dietemp_IRQ_NUM 0
#define DT_N_S_dietemp_COMPAT_MATCHES_st_stm32_temp_cal 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0 "stm32-temp-cal"
#define DT_N_S_dietemp_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_dietemp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_dietemp_P_ts_cal2_addr 200935234
#define DT_N_S_dietemp_P_ts_cal2_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal2_temp 130
#define DT_N_S_dietemp_P_ts_cal2_temp_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal1_addr 200935184
#define DT_N_S_dietemp_P_ts_cal1_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal1_temp 30
#define DT_N_S_dietemp_P_ts_cal1_temp_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_vrefanalog 3000
#define DT_N_S_dietemp_P_ts_cal_vrefanalog_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution 14
#define DT_N_S_dietemp_P_ts_cal_resolution_ENUM_IDX 1
#define DT_N_S_dietemp_P_ts_cal_resolution_ENUM_VAL_14_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution_EXISTS 1
#define DT_N_S_dietemp_P_status "okay"
#define DT_N_S_dietemp_P_status_STRING_UNQUOTED okay
#define DT_N_S_dietemp_P_status_STRING_TOKEN okay
#define DT_N_S_dietemp_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_dietemp_P_status_IDX_0 "okay"
#define DT_N_S_dietemp_P_status_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_status_ENUM_IDX 1
#define DT_N_S_dietemp_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_dietemp_P_status_ENUM_TOKEN okay
#define DT_N_S_dietemp_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_LEN 1
#define DT_N_S_dietemp_P_status_EXISTS 1
#define DT_N_S_dietemp_P_compatible {"st,stm32-temp-cal"}
#define DT_N_S_dietemp_P_compatible_IDX_0 "st,stm32-temp-cal"
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-temp-cal
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_TOKEN st_stm32_temp_cal
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TEMP_CAL
#define DT_N_S_dietemp_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_LEN 1
#define DT_N_S_dietemp_P_compatible_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_42028000
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input 19
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_LEN 1
#define DT_N_S_dietemp_P_io_channels_EXISTS 1
#define DT_N_S_dietemp_P_wakeup_source 0
#define DT_N_S_dietemp_P_wakeup_source_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/i2c1_scl_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_PATH "/soc/pin-controller@42020000/i2c1_scl_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FULL_NAME "i2c1_scl_pb8"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_ORD 14
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_SUPPORTS_ORDS \
	16, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb8 DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_pinmux 772
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/i2c1_sda_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_PATH "/soc/pin-controller@42020000/i2c1_sda_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FULL_NAME "i2c1_sda_pb9"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_ORD 15
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_SUPPORTS_ORDS \
	16, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb9 DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_pinmux 804
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 16
#define DT_N_S_soc_S_i2c_40005400_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	14, /* /soc/pin-controller@42020000/i2c1_scl_pb8 */ \
	15, /* /soc/pin-controller@42020000/i2c1_sda_pb9 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS \
	17, /* /soc/i2c@40005400/ft5336@38 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_arduino_i2c  DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq 56
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {55 /* 0x37 */, 0 /* 0x0 */, 56 /* 0x38 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 55
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2 56
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400/ft5336@38
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400_S_ft5336_38
 *
 * Binding (compatible = focaltech,ft5336):
 *   $ZEPHYR_BASE/dts/bindings/input/focaltech,ft5336.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_PATH "/soc/i2c@40005400/ft5336@38"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_FULL_NAME "ft5336@38"

/* Node parent (/soc/i2c@40005400) identifier: */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_PARENT DT_N_S_soc_S_i2c_40005400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_ORD 17
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_REQUIRES_ORDS \
	16, /* /soc/i2c@40005400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_SUPPORTS_ORDS \
	18, /* /lvgl_pointer */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_EXISTS 1
#define DT_N_INST_0_focaltech_ft5336                    DT_N_S_soc_S_i2c_40005400_S_ft5336_38
#define DT_N_NODELABEL_ft5336_adafruit_2_8_tft_touch_v2 DT_N_S_soc_S_i2c_40005400_S_ft5336_38

/* Bus info (controller: '/soc/i2c@40005400', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_BUS DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_REG_IDX_0_VAL_ADDRESS 56 /* 0x38 */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_COMPAT_MATCHES_focaltech_ft5336 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_COMPAT_VENDOR_IDX_0 "FocalTech Systems Co.,Ltd"
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_COMPAT_MODEL_IDX_0 "ft5336"
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_reg {56 /* 0x38 */}
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_reg_IDX_0 56
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible {"focaltech,ft5336"}
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible_IDX_0 "focaltech,ft5336"
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible_IDX_0_STRING_UNQUOTED focaltech,ft5336
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible_IDX_0_STRING_TOKEN focaltech_ft5336
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible_IDX_0_STRING_UPPER_TOKEN FOCALTECH_FT5336
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005400_S_ft5336_38_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /lvgl_pointer
 *
 * Node identifier: DT_N_S_lvgl_pointer
 *
 * Binding (compatible = zephyr,lvgl-pointer-input):
 *   $ZEPHYR_BASE/dts/bindings/input/zephyr,lvgl-pointer-input.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_lvgl_pointer_PATH "/lvgl_pointer"

/* Node's name with unit-address: */
#define DT_N_S_lvgl_pointer_FULL_NAME "lvgl_pointer"

/* Node parent (/) identifier: */
#define DT_N_S_lvgl_pointer_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_lvgl_pointer_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_lvgl_pointer_FOREACH_CHILD(fn) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_lvgl_pointer_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_lvgl_pointer_ORD 18
#define DT_N_S_lvgl_pointer_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_lvgl_pointer_REQUIRES_ORDS \
	0, /* / */ \
	17, /* /soc/i2c@40005400/ft5336@38 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_lvgl_pointer_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_lvgl_pointer_EXISTS 1
#define DT_N_INST_0_zephyr_lvgl_pointer_input DT_N_S_lvgl_pointer

/* Macros for properties that are special in the specification: */
#define DT_N_S_lvgl_pointer_REG_NUM 0
#define DT_N_S_lvgl_pointer_RANGES_NUM 0
#define DT_N_S_lvgl_pointer_FOREACH_RANGE(fn) 
#define DT_N_S_lvgl_pointer_IRQ_NUM 0
#define DT_N_S_lvgl_pointer_COMPAT_MATCHES_zephyr_lvgl_pointer_input 1
#define DT_N_S_lvgl_pointer_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_lvgl_pointer_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_lvgl_pointer_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_lvgl_pointer_COMPAT_MODEL_IDX_0 "lvgl-pointer-input"
#define DT_N_S_lvgl_pointer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_lvgl_pointer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_lvgl_pointer_P_swap_xy 1
#define DT_N_S_lvgl_pointer_P_swap_xy_EXISTS 1
#define DT_N_S_lvgl_pointer_P_invert_x 1
#define DT_N_S_lvgl_pointer_P_invert_x_EXISTS 1
#define DT_N_S_lvgl_pointer_P_invert_y 1
#define DT_N_S_lvgl_pointer_P_invert_y_EXISTS 1
#define DT_N_S_lvgl_pointer_P_input DT_N_S_soc_S_i2c_40005400_S_ft5336_38
#define DT_N_S_lvgl_pointer_P_input_IDX_0 DT_N_S_soc_S_i2c_40005400_S_ft5336_38
#define DT_N_S_lvgl_pointer_P_input_IDX_0_PH DT_N_S_soc_S_i2c_40005400_S_ft5336_38
#define DT_N_S_lvgl_pointer_P_input_IDX_0_EXISTS 1
#define DT_N_S_lvgl_pointer_P_input_FOREACH_PROP_ELEM(fn) fn(DT_N_S_lvgl_pointer, input, 0)
#define DT_N_S_lvgl_pointer_P_input_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_lvgl_pointer, input, 0)
#define DT_N_S_lvgl_pointer_P_input_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_lvgl_pointer, input, 0, __VA_ARGS__)
#define DT_N_S_lvgl_pointer_P_input_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_lvgl_pointer, input, 0, __VA_ARGS__)
#define DT_N_S_lvgl_pointer_P_input_LEN 1
#define DT_N_S_lvgl_pointer_P_input_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20000000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 19
#define DT_N_S_memory_20000000_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 786432 /* 0xc0000 */
#define DT_N_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 786432 /* 0xc0000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 786432
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /stepper
 *
 * Node identifier: DT_N_S_stepper
 */

/* Node's full path: */
#define DT_N_S_stepper_PATH "/stepper"

/* Node's name with unit-address: */
#define DT_N_S_stepper_FULL_NAME "stepper"

/* Node parent (/) identifier: */
#define DT_N_S_stepper_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_stepper_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_stepper_FOREACH_CHILD(fn) 
#define DT_N_S_stepper_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_stepper_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_stepper_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_stepper_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_stepper_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_stepper_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_stepper_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_stepper_ORD 20
#define DT_N_S_stepper_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_stepper_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_stepper_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_stepper_EXISTS 1
#define DT_N_INST_0_maxhbr_stepper DT_N_S_stepper
#define DT_N_NODELABEL_stepper     DT_N_S_stepper

/* Macros for properties that are special in the specification: */
#define DT_N_S_stepper_REG_NUM 0
#define DT_N_S_stepper_RANGES_NUM 0
#define DT_N_S_stepper_FOREACH_RANGE(fn) 
#define DT_N_S_stepper_IRQ_NUM 0
#define DT_N_S_stepper_COMPAT_MATCHES_maxhbr_stepper 1
#define DT_N_S_stepper_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_stepper_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_stepper_P_compatible {"maxhbr,stepper"}
#define DT_N_S_stepper_P_compatible_IDX_0 "maxhbr,stepper"
#define DT_N_S_stepper_P_compatible_IDX_0_STRING_UNQUOTED maxhbr,stepper
#define DT_N_S_stepper_P_compatible_IDX_0_STRING_TOKEN maxhbr_stepper
#define DT_N_S_stepper_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXHBR_STEPPER
#define DT_N_S_stepper_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_stepper_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_stepper, compatible, 0)
#define DT_N_S_stepper_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_stepper, compatible, 0)
#define DT_N_S_stepper_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_stepper, compatible, 0, __VA_ARGS__)
#define DT_N_S_stepper_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_stepper, compatible, 0, __VA_ARGS__)
#define DT_N_S_stepper_P_compatible_LEN 1
#define DT_N_S_stepper_P_compatible_EXISTS 1

/*
 * Devicetree node: /vbat_1
 *
 * Node identifier: DT_N_S_vbat_1
 *
 * Binding (compatible = st,stm32-vbat):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-vbat.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vbat_1_PATH "/vbat_1"

/* Node's name with unit-address: */
#define DT_N_S_vbat_1_FULL_NAME "vbat_1"

/* Node parent (/) identifier: */
#define DT_N_S_vbat_1_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vbat_1_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_vbat_1_FOREACH_CHILD(fn) 
#define DT_N_S_vbat_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vbat_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vbat_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vbat_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vbat_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vbat_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vbat_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vbat_1_ORD 21
#define DT_N_S_vbat_1_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vbat_1_REQUIRES_ORDS \
	0, /* / */ \
	12, /* /soc/adc@42028000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vbat_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vbat_1_EXISTS 1
#define DT_N_INST_1_st_stm32_vbat DT_N_S_vbat_1
#define DT_N_NODELABEL_vbat1      DT_N_S_vbat_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_vbat_1_REG_NUM 0
#define DT_N_S_vbat_1_RANGES_NUM 0
#define DT_N_S_vbat_1_FOREACH_RANGE(fn) 
#define DT_N_S_vbat_1_IRQ_NUM 0
#define DT_N_S_vbat_1_COMPAT_MATCHES_st_stm32_vbat 1
#define DT_N_S_vbat_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vbat_1_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vbat_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vbat_1_COMPAT_MODEL_IDX_0 "stm32-vbat"
#define DT_N_S_vbat_1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vbat_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vbat_1_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vbat_1_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_42028000
#define DT_N_S_vbat_1_P_io_channels_IDX_0_VAL_input 18
#define DT_N_S_vbat_1_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vbat_1_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat_1, io_channels, 0)
#define DT_N_S_vbat_1_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat_1, io_channels, 0)
#define DT_N_S_vbat_1_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat_1, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_1_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat_1, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_1_P_io_channels_LEN 1
#define DT_N_S_vbat_1_P_io_channels_EXISTS 1
#define DT_N_S_vbat_1_P_ratio 4
#define DT_N_S_vbat_1_P_ratio_EXISTS 1
#define DT_N_S_vbat_1_P_status "disabled"
#define DT_N_S_vbat_1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_vbat_1_P_status_STRING_TOKEN disabled
#define DT_N_S_vbat_1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_vbat_1_P_status_IDX_0 "disabled"
#define DT_N_S_vbat_1_P_status_IDX_0_EXISTS 1
#define DT_N_S_vbat_1_P_status_ENUM_IDX 2
#define DT_N_S_vbat_1_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_vbat_1_P_status_ENUM_TOKEN disabled
#define DT_N_S_vbat_1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_vbat_1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat_1, status, 0)
#define DT_N_S_vbat_1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat_1, status, 0)
#define DT_N_S_vbat_1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat_1, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat_1, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_1_P_status_LEN 1
#define DT_N_S_vbat_1_P_status_EXISTS 1
#define DT_N_S_vbat_1_P_compatible {"st,stm32-vbat"}
#define DT_N_S_vbat_1_P_compatible_IDX_0 "st,stm32-vbat"
#define DT_N_S_vbat_1_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vbat
#define DT_N_S_vbat_1_P_compatible_IDX_0_STRING_TOKEN st_stm32_vbat
#define DT_N_S_vbat_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VBAT
#define DT_N_S_vbat_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vbat_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat_1, compatible, 0)
#define DT_N_S_vbat_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat_1, compatible, 0)
#define DT_N_S_vbat_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_1_P_compatible_LEN 1
#define DT_N_S_vbat_1_P_compatible_EXISTS 1
#define DT_N_S_vbat_1_P_wakeup_source 0
#define DT_N_S_vbat_1_P_wakeup_source_EXISTS 1
#define DT_N_S_vbat_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vbat_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/adc4_in19_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_PATH "/soc/pin-controller@42020000/adc4_in19_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_FULL_NAME "adc4_in19_pb1"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_ORD 22
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_SUPPORTS_ORDS \
	23, /* /soc/adc@46021000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_EXISTS 1
#define DT_N_NODELABEL_adc4_in19_pb1 DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_pinmux 560
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/adc@46021000
 *
 * Node identifier: DT_N_S_soc_S_adc_46021000
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_46021000_PATH "/soc/adc@46021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_46021000_FULL_NAME "adc@46021000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_46021000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_46021000_CHILD_IDX 46

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_46021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_46021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_46021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_46021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_46021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_46021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_46021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_46021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_46021000_ORD 23
#define DT_N_S_soc_S_adc_46021000_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_46021000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	22, /* /soc/pin-controller@42020000/adc4_in19_pb1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_46021000_SUPPORTS_ORDS \
	24, /* /vbat_4 */ \
	26, /* /vref_4 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_46021000_EXISTS 1
#define DT_N_INST_1_st_stm32_adc DT_N_S_soc_S_adc_46021000
#define DT_N_NODELABEL_adc4      DT_N_S_soc_S_adc_46021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_46021000_REG_NUM 1
#define DT_N_S_soc_S_adc_46021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_REG_IDX_0_VAL_ADDRESS 1174540288 /* 0x46021000 */
#define DT_N_S_soc_S_adc_46021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_46021000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_46021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_46021000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_46021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_IRQ_IDX_0_VAL_irq 113
#define DT_N_S_soc_S_adc_46021000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_46021000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_46021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_adc_46021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_COMPAT_MODEL_IDX_0 "stm32-adc"
#define DT_N_S_soc_S_adc_46021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_46021000_PINCTRL_NUM 1
#define DT_N_S_soc_S_adc_46021000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_adc_46021000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_46021000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_adc_46021000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1

/* Generic property macros: */
#define DT_N_S_soc_S_adc_46021000_P_reg {1174540288 /* 0x46021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_46021000_P_reg_IDX_0 1174540288
#define DT_N_S_soc_S_adc_46021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_46021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_adc_46021000_P_clocks_IDX_0_VAL_bus 148
#define DT_N_S_soc_S_adc_46021000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_adc_46021000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_46021000, clocks, 0)
#define DT_N_S_soc_S_adc_46021000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_46021000, clocks, 0)
#define DT_N_S_soc_S_adc_46021000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_46021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_46021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_46021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_interrupts {113 /* 0x71 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_46021000_P_interrupts_IDX_0 113
#define DT_N_S_soc_S_adc_46021000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_46021000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_46021000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_46021000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_46021000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_46021000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_46021000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_46021000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_46021000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_46021000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_adc_46021000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_st_adc_clock_source 2
#define DT_N_S_soc_S_adc_46021000_P_st_adc_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_adc_46021000_P_st_adc_clock_source_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_st_adc_clock_source_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_st_adc_prescaler 4
#define DT_N_S_soc_S_adc_46021000_P_st_adc_prescaler_ENUM_IDX 2
#define DT_N_S_soc_S_adc_46021000_P_st_adc_prescaler_ENUM_VAL_4_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_st_adc_prescaler_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_vref_mv 3300
#define DT_N_S_soc_S_adc_46021000_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_resolutions {6316556 /* 0x60620c */, 5333516 /* 0x51620c */, 4350476 /* 0x42620c */, 3367436 /* 0x33620c */}
#define DT_N_S_soc_S_adc_46021000_P_resolutions_IDX_0 6316556
#define DT_N_S_soc_S_adc_46021000_P_resolutions_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_resolutions_IDX_1 5333516
#define DT_N_S_soc_S_adc_46021000_P_resolutions_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_resolutions_IDX_2 4350476
#define DT_N_S_soc_S_adc_46021000_P_resolutions_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_resolutions_IDX_3 3367436
#define DT_N_S_soc_S_adc_46021000_P_resolutions_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_resolutions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_46021000, resolutions, 0) \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 1) \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 2) \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 3)
#define DT_N_S_soc_S_adc_46021000_P_resolutions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_46021000, resolutions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 3)
#define DT_N_S_soc_S_adc_46021000_P_resolutions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_46021000, resolutions, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_resolutions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_46021000, resolutions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_resolutions_LEN 4
#define DT_N_S_soc_S_adc_46021000_P_resolutions_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_sampling_times {2 /* 0x2 */, 4 /* 0x4 */, 8 /* 0x8 */, 13 /* 0xd */, 20 /* 0x14 */, 40 /* 0x28 */, 80 /* 0x50 */, 815 /* 0x32f */}
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_0 2
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_1 4
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_2 8
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_3 13
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_4 20
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_4_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_5 40
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_5_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_6 80
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_6_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_7 815
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_IDX_7_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_46021000, sampling_times, 0) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 1) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 2) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 3) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 4) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 5) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 6) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 7)
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_46021000, sampling_times, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 7)
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_46021000, sampling_times, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_46021000, sampling_times, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_46021000, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_LEN 8
#define DT_N_S_soc_S_adc_46021000_P_sampling_times_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_num_sampling_time_common_channels 2
#define DT_N_S_soc_S_adc_46021000_P_num_sampling_time_common_channels_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_st_adc_sequencer 0
#define DT_N_S_soc_S_adc_46021000_P_st_adc_sequencer_ENUM_IDX 0
#define DT_N_S_soc_S_adc_46021000_P_st_adc_sequencer_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_st_adc_sequencer_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_status "okay"
#define DT_N_S_soc_S_adc_46021000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_46021000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_46021000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_46021000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_46021000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_46021000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_46021000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_46021000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_46021000, status, 0)
#define DT_N_S_soc_S_adc_46021000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_46021000, status, 0)
#define DT_N_S_soc_S_adc_46021000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_46021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_46021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_status_LEN 1
#define DT_N_S_soc_S_adc_46021000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_46021000_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_46021000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-adc
#define DT_N_S_soc_S_adc_46021000_P_compatible_IDX_0_STRING_TOKEN st_stm32_adc
#define DT_N_S_soc_S_adc_46021000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_ADC
#define DT_N_S_soc_S_adc_46021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_46021000, compatible, 0)
#define DT_N_S_soc_S_adc_46021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_46021000, compatible, 0)
#define DT_N_S_soc_S_adc_46021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_46021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_46021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_46021000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_46021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_46021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_46021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_46021000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /vbat_4
 *
 * Node identifier: DT_N_S_vbat_4
 *
 * Binding (compatible = st,stm32-vbat):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-vbat.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vbat_4_PATH "/vbat_4"

/* Node's name with unit-address: */
#define DT_N_S_vbat_4_FULL_NAME "vbat_4"

/* Node parent (/) identifier: */
#define DT_N_S_vbat_4_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vbat_4_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_vbat_4_FOREACH_CHILD(fn) 
#define DT_N_S_vbat_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vbat_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vbat_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vbat_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vbat_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vbat_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vbat_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vbat_4_ORD 24
#define DT_N_S_vbat_4_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vbat_4_REQUIRES_ORDS \
	0, /* / */ \
	23, /* /soc/adc@46021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vbat_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vbat_4_EXISTS 1
#define DT_N_ALIAS_volt_sensor1   DT_N_S_vbat_4
#define DT_N_INST_0_st_stm32_vbat DT_N_S_vbat_4
#define DT_N_NODELABEL_vbat4      DT_N_S_vbat_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_vbat_4_REG_NUM 0
#define DT_N_S_vbat_4_RANGES_NUM 0
#define DT_N_S_vbat_4_FOREACH_RANGE(fn) 
#define DT_N_S_vbat_4_IRQ_NUM 0
#define DT_N_S_vbat_4_COMPAT_MATCHES_st_stm32_vbat 1
#define DT_N_S_vbat_4_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vbat_4_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vbat_4_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vbat_4_COMPAT_MODEL_IDX_0 "stm32-vbat"
#define DT_N_S_vbat_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vbat_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vbat_4_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vbat_4_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_46021000
#define DT_N_S_vbat_4_P_io_channels_IDX_0_VAL_input 14
#define DT_N_S_vbat_4_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vbat_4_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat_4, io_channels, 0)
#define DT_N_S_vbat_4_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat_4, io_channels, 0)
#define DT_N_S_vbat_4_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat_4, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_4_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat_4, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_4_P_io_channels_LEN 1
#define DT_N_S_vbat_4_P_io_channels_EXISTS 1
#define DT_N_S_vbat_4_P_ratio 4
#define DT_N_S_vbat_4_P_ratio_EXISTS 1
#define DT_N_S_vbat_4_P_status "okay"
#define DT_N_S_vbat_4_P_status_STRING_UNQUOTED okay
#define DT_N_S_vbat_4_P_status_STRING_TOKEN okay
#define DT_N_S_vbat_4_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_vbat_4_P_status_IDX_0 "okay"
#define DT_N_S_vbat_4_P_status_IDX_0_EXISTS 1
#define DT_N_S_vbat_4_P_status_ENUM_IDX 1
#define DT_N_S_vbat_4_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_vbat_4_P_status_ENUM_TOKEN okay
#define DT_N_S_vbat_4_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_vbat_4_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat_4, status, 0)
#define DT_N_S_vbat_4_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat_4, status, 0)
#define DT_N_S_vbat_4_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat_4, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_4_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat_4, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_4_P_status_LEN 1
#define DT_N_S_vbat_4_P_status_EXISTS 1
#define DT_N_S_vbat_4_P_compatible {"st,stm32-vbat"}
#define DT_N_S_vbat_4_P_compatible_IDX_0 "st,stm32-vbat"
#define DT_N_S_vbat_4_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vbat
#define DT_N_S_vbat_4_P_compatible_IDX_0_STRING_TOKEN st_stm32_vbat
#define DT_N_S_vbat_4_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VBAT
#define DT_N_S_vbat_4_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vbat_4_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat_4, compatible, 0)
#define DT_N_S_vbat_4_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat_4, compatible, 0)
#define DT_N_S_vbat_4_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat_4, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_4_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat_4, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_4_P_compatible_LEN 1
#define DT_N_S_vbat_4_P_compatible_EXISTS 1
#define DT_N_S_vbat_4_P_wakeup_source 0
#define DT_N_S_vbat_4_P_wakeup_source_EXISTS 1
#define DT_N_S_vbat_4_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vbat_4_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /vref_1
 *
 * Node identifier: DT_N_S_vref_1
 *
 * Binding (compatible = st,stm32-vref):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-vref.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vref_1_PATH "/vref_1"

/* Node's name with unit-address: */
#define DT_N_S_vref_1_FULL_NAME "vref_1"

/* Node parent (/) identifier: */
#define DT_N_S_vref_1_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vref_1_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_vref_1_FOREACH_CHILD(fn) 
#define DT_N_S_vref_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vref_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vref_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vref_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vref_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vref_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vref_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vref_1_ORD 25
#define DT_N_S_vref_1_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vref_1_REQUIRES_ORDS \
	0, /* / */ \
	12, /* /soc/adc@42028000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vref_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vref_1_EXISTS 1
#define DT_N_ALIAS_volt_sensor0   DT_N_S_vref_1
#define DT_N_INST_0_st_stm32_vref DT_N_S_vref_1
#define DT_N_NODELABEL_vref1      DT_N_S_vref_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_vref_1_REG_NUM 0
#define DT_N_S_vref_1_RANGES_NUM 0
#define DT_N_S_vref_1_FOREACH_RANGE(fn) 
#define DT_N_S_vref_1_IRQ_NUM 0
#define DT_N_S_vref_1_COMPAT_MATCHES_st_stm32_vref 1
#define DT_N_S_vref_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vref_1_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vref_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vref_1_COMPAT_MODEL_IDX_0 "stm32-vref"
#define DT_N_S_vref_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vref_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vref_1_P_vrefint_cal_addr 200935333
#define DT_N_S_vref_1_P_vrefint_cal_addr_EXISTS 1
#define DT_N_S_vref_1_P_vrefint_cal_mv 3000
#define DT_N_S_vref_1_P_vrefint_cal_mv_EXISTS 1
#define DT_N_S_vref_1_P_status "okay"
#define DT_N_S_vref_1_P_status_STRING_UNQUOTED okay
#define DT_N_S_vref_1_P_status_STRING_TOKEN okay
#define DT_N_S_vref_1_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_vref_1_P_status_IDX_0 "okay"
#define DT_N_S_vref_1_P_status_IDX_0_EXISTS 1
#define DT_N_S_vref_1_P_status_ENUM_IDX 1
#define DT_N_S_vref_1_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_vref_1_P_status_ENUM_TOKEN okay
#define DT_N_S_vref_1_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_vref_1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref_1, status, 0)
#define DT_N_S_vref_1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref_1, status, 0)
#define DT_N_S_vref_1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref_1, status, 0, __VA_ARGS__)
#define DT_N_S_vref_1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref_1, status, 0, __VA_ARGS__)
#define DT_N_S_vref_1_P_status_LEN 1
#define DT_N_S_vref_1_P_status_EXISTS 1
#define DT_N_S_vref_1_P_compatible {"st,stm32-vref"}
#define DT_N_S_vref_1_P_compatible_IDX_0 "st,stm32-vref"
#define DT_N_S_vref_1_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vref
#define DT_N_S_vref_1_P_compatible_IDX_0_STRING_TOKEN st_stm32_vref
#define DT_N_S_vref_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VREF
#define DT_N_S_vref_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vref_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref_1, compatible, 0)
#define DT_N_S_vref_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref_1, compatible, 0)
#define DT_N_S_vref_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_1_P_compatible_LEN 1
#define DT_N_S_vref_1_P_compatible_EXISTS 1
#define DT_N_S_vref_1_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vref_1_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_42028000
#define DT_N_S_vref_1_P_io_channels_IDX_0_VAL_input 0
#define DT_N_S_vref_1_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vref_1_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref_1, io_channels, 0)
#define DT_N_S_vref_1_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref_1, io_channels, 0)
#define DT_N_S_vref_1_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref_1, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_1_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref_1, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_1_P_io_channels_LEN 1
#define DT_N_S_vref_1_P_io_channels_EXISTS 1
#define DT_N_S_vref_1_P_wakeup_source 0
#define DT_N_S_vref_1_P_wakeup_source_EXISTS 1
#define DT_N_S_vref_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vref_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /vref_4
 *
 * Node identifier: DT_N_S_vref_4
 *
 * Binding (compatible = st,stm32-vref):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-vref.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vref_4_PATH "/vref_4"

/* Node's name with unit-address: */
#define DT_N_S_vref_4_FULL_NAME "vref_4"

/* Node parent (/) identifier: */
#define DT_N_S_vref_4_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vref_4_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_vref_4_FOREACH_CHILD(fn) 
#define DT_N_S_vref_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vref_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vref_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vref_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vref_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vref_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vref_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vref_4_ORD 26
#define DT_N_S_vref_4_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vref_4_REQUIRES_ORDS \
	0, /* / */ \
	23, /* /soc/adc@46021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vref_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vref_4_EXISTS 1
#define DT_N_INST_1_st_stm32_vref DT_N_S_vref_4
#define DT_N_NODELABEL_vref4      DT_N_S_vref_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_vref_4_REG_NUM 0
#define DT_N_S_vref_4_RANGES_NUM 0
#define DT_N_S_vref_4_FOREACH_RANGE(fn) 
#define DT_N_S_vref_4_IRQ_NUM 0
#define DT_N_S_vref_4_COMPAT_MATCHES_st_stm32_vref 1
#define DT_N_S_vref_4_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vref_4_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vref_4_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vref_4_COMPAT_MODEL_IDX_0 "stm32-vref"
#define DT_N_S_vref_4_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vref_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vref_4_P_vrefint_cal_addr 200935333
#define DT_N_S_vref_4_P_vrefint_cal_addr_EXISTS 1
#define DT_N_S_vref_4_P_vrefint_cal_mv 3000
#define DT_N_S_vref_4_P_vrefint_cal_mv_EXISTS 1
#define DT_N_S_vref_4_P_status "disabled"
#define DT_N_S_vref_4_P_status_STRING_UNQUOTED disabled
#define DT_N_S_vref_4_P_status_STRING_TOKEN disabled
#define DT_N_S_vref_4_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_vref_4_P_status_IDX_0 "disabled"
#define DT_N_S_vref_4_P_status_IDX_0_EXISTS 1
#define DT_N_S_vref_4_P_status_ENUM_IDX 2
#define DT_N_S_vref_4_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_vref_4_P_status_ENUM_TOKEN disabled
#define DT_N_S_vref_4_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_vref_4_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref_4, status, 0)
#define DT_N_S_vref_4_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref_4, status, 0)
#define DT_N_S_vref_4_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref_4, status, 0, __VA_ARGS__)
#define DT_N_S_vref_4_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref_4, status, 0, __VA_ARGS__)
#define DT_N_S_vref_4_P_status_LEN 1
#define DT_N_S_vref_4_P_status_EXISTS 1
#define DT_N_S_vref_4_P_compatible {"st,stm32-vref"}
#define DT_N_S_vref_4_P_compatible_IDX_0 "st,stm32-vref"
#define DT_N_S_vref_4_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vref
#define DT_N_S_vref_4_P_compatible_IDX_0_STRING_TOKEN st_stm32_vref
#define DT_N_S_vref_4_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VREF
#define DT_N_S_vref_4_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vref_4_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref_4, compatible, 0)
#define DT_N_S_vref_4_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref_4, compatible, 0)
#define DT_N_S_vref_4_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref_4, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_4_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref_4, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_4_P_compatible_LEN 1
#define DT_N_S_vref_4_P_compatible_EXISTS 1
#define DT_N_S_vref_4_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vref_4_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_46021000
#define DT_N_S_vref_4_P_io_channels_IDX_0_VAL_input 0
#define DT_N_S_vref_4_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vref_4_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref_4, io_channels, 0)
#define DT_N_S_vref_4_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref_4, io_channels, 0)
#define DT_N_S_vref_4_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref_4, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_4_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref_4, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_4_P_io_channels_LEN 1
#define DT_N_S_vref_4_P_io_channels_EXISTS 1
#define DT_N_S_vref_4_P_wakeup_source 0
#define DT_N_S_vref_4_P_wakeup_source_EXISTS 1
#define DT_N_S_vref_4_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vref_4_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hse
 *
 * Node identifier: DT_N_S_clocks_S_clk_hse
 *
 * Binding (compatible = st,stm32-hse-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-hse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hse_PATH "/clocks/clk-hse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hse_FULL_NAME "clk-hse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hse_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hse_ORD 27
#define DT_N_S_clocks_S_clk_hse_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hse_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hse_EXISTS 1
#define DT_N_INST_0_st_stm32_hse_clock DT_N_S_clocks_S_clk_hse
#define DT_N_NODELABEL_clk_hse         DT_N_S_clocks_S_clk_hse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hse_REG_NUM 0
#define DT_N_S_clocks_S_clk_hse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hse_COMPAT_MATCHES_st_stm32_hse_clock 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0 "stm32-hse-clock"
#define DT_N_S_clocks_S_clk_hse_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass 0
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi_PATH "/clocks/clk-hsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME "clk-hsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hsi_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi_ORD 28
#define DT_N_S_clocks_S_clk_hsi_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_clk_hsi
#define DT_N_NODELABEL_clk_hsi  DT_N_S_clocks_S_clk_hsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency 16000000
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hsi48
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi48
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi48_PATH "/clocks/clk-hsi48"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi48_FULL_NAME "clk-hsi48"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi48_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hsi48_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi48_ORD 29
#define DT_N_S_clocks_S_clk_hsi48_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi48_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi48_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi48_EXISTS 1
#define DT_N_INST_0_fixed_clock  DT_N_S_clocks_S_clk_hsi48
#define DT_N_NODELABEL_clk_hsi48 DT_N_S_clocks_S_clk_hsi48

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hsi48_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi48_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hsi48_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hsi48_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi48_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hsi48_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hsi48_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi48_P_clock_frequency 48000000
#define DT_N_S_clocks_S_clk_hsi48_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lse
 *
 * Node identifier: DT_N_S_clocks_S_clk_lse
 *
 * Binding (compatible = st,stm32-lse-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-lse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lse_PATH "/clocks/clk-lse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lse_FULL_NAME "clk-lse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lse_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lse_ORD 30
#define DT_N_S_clocks_S_clk_lse_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lse_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lse_EXISTS 1
#define DT_N_INST_0_st_stm32_lse_clock DT_N_S_clocks_S_clk_lse
#define DT_N_NODELABEL_clk_lse         DT_N_S_clocks_S_clk_lse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lse_REG_NUM 0
#define DT_N_S_clocks_S_clk_lse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lse_COMPAT_MATCHES_st_stm32_lse_clock 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_lse_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_COMPAT_MODEL_IDX_0 "stm32-lse-clock"
#define DT_N_S_clocks_S_clk_lse_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lse_P_driving_capability 2
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_ENUM_VAL_2_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_driving_capability_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_lse_bypass 0
#define DT_N_S_clocks_S_clk_lse_P_lse_bypass_EXISTS 1
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi_PATH "/clocks/clk-lsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME "clk-lsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lsi_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi_ORD 31
#define DT_N_S_clocks_S_clk_lsi_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clocks_S_clk_lsi
#define DT_N_NODELABEL_clk_lsi  DT_N_S_clocks_S_clk_lsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency 32000
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-msik
 *
 * Node identifier: DT_N_S_clocks_S_clk_msik
 *
 * Binding (compatible = st,stm32u5-msi-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32u5-msi-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_msik_PATH "/clocks/clk-msik"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_msik_FULL_NAME "clk-msik"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_msik_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_msik_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_msik_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_msik_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_msik_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_msik_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_msik_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_msik_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_msik_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_msik_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_msik_ORD 32
#define DT_N_S_clocks_S_clk_msik_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_msik_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_msik_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_msik_EXISTS 1
#define DT_N_INST_1_st_stm32u5_msi_clock DT_N_S_clocks_S_clk_msik
#define DT_N_NODELABEL_clk_msik          DT_N_S_clocks_S_clk_msik

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_msik_REG_NUM 0
#define DT_N_S_clocks_S_clk_msik_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_msik_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_msik_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_msik_COMPAT_MATCHES_st_stm32u5_msi_clock 1
#define DT_N_S_clocks_S_clk_msik_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msik_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_msik_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msik_COMPAT_MODEL_IDX_0 "stm32u5-msi-clock"
#define DT_N_S_clocks_S_clk_msik_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_msik_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_msik_P_msi_range 4
#define DT_N_S_clocks_S_clk_msik_P_msi_range_ENUM_IDX 4
#define DT_N_S_clocks_S_clk_msik_P_msi_range_ENUM_VAL_4_EXISTS 1
#define DT_N_S_clocks_S_clk_msik_P_msi_range_EXISTS 1
#define DT_N_S_clocks_S_clk_msik_P_msi_pll_mode 0
#define DT_N_S_clocks_S_clk_msik_P_msi_pll_mode_EXISTS 1
#define DT_N_S_clocks_S_clk_msik_P_status "disabled"
#define DT_N_S_clocks_S_clk_msik_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_msik_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_msik_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_msik_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_msik_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msik_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_msik_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_msik_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_clk_msik_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_msik_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_msik, status, 0)
#define DT_N_S_clocks_S_clk_msik_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_msik, status, 0)
#define DT_N_S_clocks_S_clk_msik_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_msik, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msik_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_msik, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msik_P_status_LEN 1
#define DT_N_S_clocks_S_clk_msik_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_msik_P_compatible {"st,stm32u5-msi-clock"}
#define DT_N_S_clocks_S_clk_msik_P_compatible_IDX_0 "st,stm32u5-msi-clock"
#define DT_N_S_clocks_S_clk_msik_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-msi-clock
#define DT_N_S_clocks_S_clk_msik_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_msi_clock
#define DT_N_S_clocks_S_clk_msik_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_MSI_CLOCK
#define DT_N_S_clocks_S_clk_msik_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_msik_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_msik, compatible, 0)
#define DT_N_S_clocks_S_clk_msik_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_msik, compatible, 0)
#define DT_N_S_clocks_S_clk_msik_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_msik, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msik_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_msik, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_msik_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_msik_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_msik_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_msik_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_msik_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_msik_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/pll2
 *
 * Node identifier: DT_N_S_clocks_S_pll2
 *
 * Binding (compatible = st,stm32u5-pll-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32u5-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll2_PATH "/clocks/pll2"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll2_FULL_NAME "pll2"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll2_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll2_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll2_ORD 33
#define DT_N_S_clocks_S_pll2_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll2_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll2_EXISTS 1
#define DT_N_INST_1_st_stm32u5_pll_clock DT_N_S_clocks_S_pll2
#define DT_N_NODELABEL_pll2              DT_N_S_clocks_S_pll2

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll2_REG_NUM 0
#define DT_N_S_clocks_S_pll2_RANGES_NUM 0
#define DT_N_S_clocks_S_pll2_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll2_IRQ_NUM 0
#define DT_N_S_clocks_S_pll2_COMPAT_MATCHES_st_stm32u5_pll_clock 1
#define DT_N_S_clocks_S_pll2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll2_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_pll2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll2_COMPAT_MODEL_IDX_0 "stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll2_P_status "disabled"
#define DT_N_S_clocks_S_pll2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_pll2_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_pll2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_pll2_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_pll2_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_pll2_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_pll2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_pll2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll2, status, 0)
#define DT_N_S_clocks_S_pll2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll2, status, 0)
#define DT_N_S_clocks_S_pll2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll2, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll2, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll2_P_status_LEN 1
#define DT_N_S_clocks_S_pll2_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_compatible {"st,stm32u5-pll-clock"}
#define DT_N_S_clocks_S_pll2_P_compatible_IDX_0 "st,stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll2_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-pll-clock
#define DT_N_S_clocks_S_pll2_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_pll_clock
#define DT_N_S_clocks_S_pll2_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_PLL_CLOCK
#define DT_N_S_clocks_S_pll2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll2, compatible, 0)
#define DT_N_S_clocks_S_pll2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll2, compatible, 0)
#define DT_N_S_clocks_S_pll2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll2, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll2, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll2_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll2_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_wakeup_source 0
#define DT_N_S_clocks_S_pll2_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_pll2_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_pll2_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/pll3
 *
 * Node identifier: DT_N_S_clocks_S_pll3
 *
 * Binding (compatible = st,stm32u5-pll-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32u5-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll3_PATH "/clocks/pll3"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll3_FULL_NAME "pll3"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll3_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll3_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll3_ORD 34
#define DT_N_S_clocks_S_pll3_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll3_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll3_EXISTS 1
#define DT_N_INST_2_st_stm32u5_pll_clock DT_N_S_clocks_S_pll3
#define DT_N_NODELABEL_pll3              DT_N_S_clocks_S_pll3

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll3_REG_NUM 0
#define DT_N_S_clocks_S_pll3_RANGES_NUM 0
#define DT_N_S_clocks_S_pll3_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll3_IRQ_NUM 0
#define DT_N_S_clocks_S_pll3_COMPAT_MATCHES_st_stm32u5_pll_clock 1
#define DT_N_S_clocks_S_pll3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll3_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_pll3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll3_COMPAT_MODEL_IDX_0 "stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll3_P_status "disabled"
#define DT_N_S_clocks_S_pll3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_pll3_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_pll3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_pll3_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_pll3_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_pll3_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_pll3_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_pll3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll3, status, 0)
#define DT_N_S_clocks_S_pll3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll3, status, 0)
#define DT_N_S_clocks_S_pll3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll3, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll3, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll3_P_status_LEN 1
#define DT_N_S_clocks_S_pll3_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_compatible {"st,stm32u5-pll-clock"}
#define DT_N_S_clocks_S_pll3_P_compatible_IDX_0 "st,stm32u5-pll-clock"
#define DT_N_S_clocks_S_pll3_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-pll-clock
#define DT_N_S_clocks_S_pll3_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_pll_clock
#define DT_N_S_clocks_S_pll3_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_PLL_CLOCK
#define DT_N_S_clocks_S_pll3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll3, compatible, 0)
#define DT_N_S_clocks_S_pll3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll3, compatible, 0)
#define DT_N_S_clocks_S_pll3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll3, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll3, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll3_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll3_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_wakeup_source 0
#define DT_N_S_clocks_S_pll3_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_pll3_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_pll3_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 35
#define DT_N_S_cpus_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	36, /* /cpus/power-states */ \
	40, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states
 *
 * Node identifier: DT_N_S_cpus_S_power_states
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_PATH "/cpus/power-states"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_FULL_NAME "power-states"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_power_states_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_power_states_S_state0) fn(DT_N_S_cpus_S_power_states_S_state1) fn(DT_N_S_cpus_S_power_states_S_state2)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_state0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state2)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state2, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state2, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_power_states_S_state0) fn(DT_N_S_cpus_S_power_states_S_state1) fn(DT_N_S_cpus_S_power_states_S_state2)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_state0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state2)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state2, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_state2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_ORD 36
#define DT_N_S_cpus_S_power_states_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_REQUIRES_ORDS \
	35, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_SUPPORTS_ORDS \
	37, /* /cpus/power-states/state0 */ \
	38, /* /cpus/power-states/state1 */ \
	39, /* /cpus/power-states/state2 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_REG_NUM 0
#define DT_N_S_cpus_S_power_states_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states/state0
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_state0
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_state0_PATH "/cpus/power-states/state0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_state0_FULL_NAME "state0"

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_state0_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_state0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_state0_ORD 37
#define DT_N_S_cpus_S_power_states_S_state0_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_state0_REQUIRES_ORDS \
	36, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_state0_SUPPORTS_ORDS \
	40, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_state0_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_cpus_S_power_states_S_state0
#define DT_N_NODELABEL_stop0           DT_N_S_cpus_S_power_states_S_state0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_state0_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_state0_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_state0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_state0_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_state0_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_state0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_state0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_state0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_state0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_STRING_UNQUOTED suspend-to-idle
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_IDX_0 "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_ENUM_IDX 2
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_ENUM_VAL_suspend_to_idle_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_state0, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_state0, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_state0, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_state0, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_state0_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_P_substate_id 1
#define DT_N_S_cpus_S_power_states_S_state0_P_substate_id_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state0_P_min_residency_us 100
#define DT_N_S_cpus_S_power_states_S_state0_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /cpus/power-states/state1
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_state1
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_state1_PATH "/cpus/power-states/state1"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_state1_FULL_NAME "state1"

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_state1_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_state1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_state1_ORD 38
#define DT_N_S_cpus_S_power_states_S_state1_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_state1_REQUIRES_ORDS \
	36, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_state1_SUPPORTS_ORDS \
	40, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_state1_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_cpus_S_power_states_S_state1
#define DT_N_NODELABEL_stop1           DT_N_S_cpus_S_power_states_S_state1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_state1_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_state1_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_state1_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_state1_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_state1_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_state1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_state1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_state1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_state1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_STRING_UNQUOTED suspend-to-idle
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_IDX_0 "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_ENUM_IDX 2
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_ENUM_VAL_suspend_to_idle_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_state1, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_state1, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_state1, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_state1, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_state1_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_P_substate_id 2
#define DT_N_S_cpus_S_power_states_S_state1_P_substate_id_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state1_P_min_residency_us 500
#define DT_N_S_cpus_S_power_states_S_state1_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /cpus/power-states/state2
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_state2
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_state2_PATH "/cpus/power-states/state2"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_state2_FULL_NAME "state2"

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_state2_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_state2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_state2_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_state2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_state2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_state2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_state2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_state2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_state2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_state2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_state2_ORD 39
#define DT_N_S_cpus_S_power_states_S_state2_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_state2_REQUIRES_ORDS \
	36, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_state2_SUPPORTS_ORDS \
	40, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_state2_EXISTS 1
#define DT_N_INST_2_zephyr_power_state DT_N_S_cpus_S_power_states_S_state2
#define DT_N_NODELABEL_stop2           DT_N_S_cpus_S_power_states_S_state2

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_state2_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_state2_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_state2_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_state2_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_state2_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_state2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state2_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_state2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state2_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_state2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_state2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_STRING_UNQUOTED suspend-to-idle
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_IDX_0 "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_ENUM_IDX 2
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_ENUM_VAL_suspend_to_idle_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_state2, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_state2, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_state2, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_state2, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_state2_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state2_P_substate_id 3
#define DT_N_S_cpus_S_power_states_S_state2_P_substate_id_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_state2_P_min_residency_us 900
#define DT_N_S_cpus_S_power_states_S_state2_P_min_residency_us_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m33):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m33.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 40
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	35, /* /cpus */ \
	37, /* /cpus/power-states/state0 */ \
	38, /* /cpus/power-states/state1 */ \
	39, /* /cpus/power-states/state2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS \
	41, /* /cpus/cpu@0/mpu@e000ed90 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m33 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m33 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m33"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_cpus_S_power_states_S_state0
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_cpus_S_power_states_S_state0
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1 DT_N_S_cpus_S_power_states_S_state1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_cpus_S_power_states_S_state1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2 DT_N_S_cpus_S_power_states_S_state2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2_PH DT_N_S_cpus_S_power_states_S_state2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 3
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m33"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m33"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m33
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m33
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M33
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0/mpu@e000ed90
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
 *
 * Binding (compatible = arm,armv8m-mpu):
 *   $ZEPHYR_BASE/dts/bindings/mmu_mpu/arm,armv8m-mpu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PATH "/cpus/cpu@0/mpu@e000ed90"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME "mpu@e000ed90"

/* Node parent (/cpus/cpu@0) identifier: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PARENT DT_N_S_cpus_S_cpu_0

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_ORD 41
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REQUIRES_ORDS \
	40, /* /cpus/cpu@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_EXISTS 1
#define DT_N_INST_0_arm_armv8m_mpu DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
#define DT_N_NODELABEL_mpu         DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_ADDRESS 3758157200 /* 0xe000ed90 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MATCHES_arm_armv8m_mpu 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MODEL_IDX_0 "armv8m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg {3758157200 /* 0xe000ed90 */, 64 /* 0x40 */}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0 3758157200
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1 64
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_arm_num_mpu_regions 8
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_arm_num_mpu_regions_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible {"arm,armv8m-mpu"}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0 "arm,armv8m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UNQUOTED arm,armv8m-mpu
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_TOKEN arm_armv8m_mpu
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV8M_MPU
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 42
#define DT_N_S_gpio_keys_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	44, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_debounce_interval_ms 30
#define DT_N_S_gpio_keys_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_wakeup_source 0
#define DT_N_S_gpio_keys_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42020800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_PATH "/soc/pin-controller@42020000/gpio@42020800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FULL_NAME "gpio@42020800"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_ORD 43
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_REQUIRES_ORDS \
	9, /* /soc/rcc@46020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_SUPPORTS_ORDS \
	44, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_REG_IDX_0_VAL_ADDRESS 1107429376 /* 0x42020800 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg {1107429376 /* 0x42020800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg_IDX_0 1107429376
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button
 *
 * Node identifier: DT_N_S_gpio_keys_S_button
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_PATH "/gpio_keys/button"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_FULL_NAME "button"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_ORD 44
#define DT_N_S_gpio_keys_S_button_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_REQUIRES_ORDS \
	42, /* /gpio_keys */ \
	43, /* /soc/pin-controller@42020000/gpio@42020800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_button
#define DT_N_NODELABEL_user_button DT_N_S_gpio_keys_S_button

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label "User"
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UNQUOTED User
#define DT_N_S_gpio_keys_S_button_P_label_STRING_TOKEN User
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UPPER_TOKEN USER
#define DT_N_S_gpio_keys_S_button_P_label_IDX_0 "User"
#define DT_N_S_gpio_keys_S_button_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, label, 0)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button, label, 0)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_zephyr_code 11
#define DT_N_S_gpio_keys_S_button_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 45
#define DT_N_S_leds_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	47, /* /leds/led_1 */ \
	48, /* /leds/led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42021c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_PATH "/soc/pin-controller@42020000/gpio@42021c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FULL_NAME "gpio@42021c00"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_ORD 46
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_REQUIRES_ORDS \
	9, /* /soc/rcc@46020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_SUPPORTS_ORDS \
	47, /* /leds/led_1 */ \
	48, /* /leds/led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_EXISTS 1
#define DT_N_INST_7_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00
#define DT_N_NODELABEL_gpioh      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_REG_IDX_0_VAL_ADDRESS 1107434496 /* 0x42021c00 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg {1107434496 /* 0x42021c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg_IDX_0 1107434496
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 47
#define DT_N_S_leds_S_led_1_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	45, /* /leds */ \
	46, /* /soc/pin-controller@42020000/gpio@42021c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led0            DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_green_led_1 DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 7
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "User LD7"
#define DT_N_S_leds_S_led_1_P_label_STRING_UNQUOTED User LD7
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN User_LD7
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN USER_LD7
#define DT_N_S_leds_S_led_1_P_label_IDX_0 "User LD7"
#define DT_N_S_leds_S_led_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_LEN 1
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_3
 *
 * Node identifier: DT_N_S_leds_S_led_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_3_PATH "/leds/led_3"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_3_FULL_NAME "led_3"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_3_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_3_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_3_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_3_ORD 48
#define DT_N_S_leds_S_led_3_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_3_REQUIRES_ORDS \
	45, /* /leds */ \
	46, /* /soc/pin-controller@42020000/gpio@42021c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_3_EXISTS 1
#define DT_N_ALIAS_led1          DT_N_S_leds_S_led_3
#define DT_N_NODELABEL_red_led_1 DT_N_S_leds_S_led_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_3_REG_NUM 0
#define DT_N_S_leds_S_led_3_RANGES_NUM 0
#define DT_N_S_leds_S_led_3_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_3_IRQ_NUM 0
#define DT_N_S_leds_S_led_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin 6
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_LEN 1
#define DT_N_S_leds_S_led_3_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label "User LD6"
#define DT_N_S_leds_S_led_3_P_label_STRING_UNQUOTED User LD6
#define DT_N_S_leds_S_led_3_P_label_STRING_TOKEN User_LD6
#define DT_N_S_leds_S_led_3_P_label_STRING_UPPER_TOKEN USER_LD6
#define DT_N_S_leds_S_led_3_P_label_IDX_0 "User LD6"
#define DT_N_S_leds_S_led_3_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_LEN 1
#define DT_N_S_leds_S_led_3_P_label_EXISTS 1

/*
 * Devicetree node: /soc/aes@420c0000
 *
 * Node identifier: DT_N_S_soc_S_aes_420c0000
 *
 * Binding (compatible = st,stm32-aes):
 *   $ZEPHYR_BASE/dts/bindings/crypto/st,stm32-aes.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_aes_420c0000_PATH "/soc/aes@420c0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_aes_420c0000_FULL_NAME "aes@420c0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_aes_420c0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_aes_420c0000_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_aes_420c0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_aes_420c0000_ORD 49
#define DT_N_S_soc_S_aes_420c0000_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_aes_420c0000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_aes_420c0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_aes_420c0000_EXISTS 1
#define DT_N_INST_0_st_stm32_aes DT_N_S_soc_S_aes_420c0000
#define DT_N_NODELABEL_aes       DT_N_S_soc_S_aes_420c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_aes_420c0000_REG_NUM 1
#define DT_N_S_soc_S_aes_420c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_REG_IDX_0_VAL_ADDRESS 1108082688 /* 0x420c0000 */
#define DT_N_S_soc_S_aes_420c0000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_aes_420c0000_RANGES_NUM 0
#define DT_N_S_soc_S_aes_420c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_aes_420c0000_IRQ_NUM 1
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_VAL_irq 93
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_aes_420c0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_COMPAT_MATCHES_st_stm32_aes 1
#define DT_N_S_soc_S_aes_420c0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_aes_420c0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_COMPAT_MODEL_IDX_0 "stm32-aes"
#define DT_N_S_soc_S_aes_420c0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_aes_420c0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_aes_420c0000_P_reg {1108082688 /* 0x420c0000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_aes_420c0000_P_reg_IDX_0 1108082688
#define DT_N_S_soc_S_aes_420c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_aes_420c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_interrupts {93 /* 0x5d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_aes_420c0000_P_interrupts_IDX_0 93
#define DT_N_S_soc_S_aes_420c0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_aes_420c0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_aes_420c0000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_aes_420c0000, clocks, 0)
#define DT_N_S_soc_S_aes_420c0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_aes_420c0000, clocks, 0)
#define DT_N_S_soc_S_aes_420c0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_aes_420c0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_aes_420c0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_clocks_LEN 1
#define DT_N_S_soc_S_aes_420c0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_status "okay"
#define DT_N_S_soc_S_aes_420c0000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_aes_420c0000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_aes_420c0000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_aes_420c0000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_aes_420c0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_aes_420c0000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_aes_420c0000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_aes_420c0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_aes_420c0000, status, 0)
#define DT_N_S_soc_S_aes_420c0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_aes_420c0000, status, 0)
#define DT_N_S_soc_S_aes_420c0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_aes_420c0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_aes_420c0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_status_LEN 1
#define DT_N_S_soc_S_aes_420c0000_P_status_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_compatible {"st,stm32-aes"}
#define DT_N_S_soc_S_aes_420c0000_P_compatible_IDX_0 "st,stm32-aes"
#define DT_N_S_soc_S_aes_420c0000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-aes
#define DT_N_S_soc_S_aes_420c0000_P_compatible_IDX_0_STRING_TOKEN st_stm32_aes
#define DT_N_S_soc_S_aes_420c0000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_AES
#define DT_N_S_soc_S_aes_420c0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_aes_420c0000, compatible, 0)
#define DT_N_S_soc_S_aes_420c0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_aes_420c0000, compatible, 0)
#define DT_N_S_soc_S_aes_420c0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_aes_420c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_aes_420c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_420c0000_P_compatible_LEN 1
#define DT_N_S_soc_S_aes_420c0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_wakeup_source 0
#define DT_N_S_soc_S_aes_420c0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_aes_420c0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_aes_420c0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/can@4000a400
 *
 * Node identifier: DT_N_S_soc_S_can_4000a400
 *
 * Binding (compatible = st,stm32-fdcan):
 *   $ZEPHYR_BASE/dts/bindings/can/st,stm32-fdcan.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_4000a400_PATH "/soc/can@4000a400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_4000a400_FULL_NAME "can@4000a400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_4000a400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_4000a400_CHILD_IDX 47

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_4000a400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_4000a400_ORD 50
#define DT_N_S_soc_S_can_4000a400_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_4000a400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_4000a400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_4000a400_EXISTS 1
#define DT_N_INST_0_st_stm32_fdcan DT_N_S_soc_S_can_4000a400
#define DT_N_NODELABEL_fdcan1      DT_N_S_soc_S_can_4000a400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_4000a400_REG_NUM 2
#define DT_N_S_soc_S_can_4000a400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_REG_IDX_0_VAL_ADDRESS 1073783808 /* 0x4000a400 */
#define DT_N_S_soc_S_can_4000a400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_4000a400_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_REG_IDX_1_VAL_ADDRESS 1073785856 /* 0x4000ac00 */
#define DT_N_S_soc_S_can_4000a400_REG_IDX_1_VAL_SIZE 848 /* 0x350 */
#define DT_N_S_soc_S_can_4000a400_REG_NAME_m_can_VAL_ADDRESS DT_N_S_soc_S_can_4000a400_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_can_4000a400_REG_NAME_m_can_VAL_SIZE DT_N_S_soc_S_can_4000a400_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_can_4000a400_REG_NAME_message_ram_VAL_ADDRESS DT_N_S_soc_S_can_4000a400_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_can_4000a400_REG_NAME_message_ram_VAL_SIZE DT_N_S_soc_S_can_4000a400_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_can_4000a400_RANGES_NUM 0
#define DT_N_S_soc_S_can_4000a400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_4000a400_IRQ_NUM 2
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_irq 40
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_line_0_VAL_irq DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_line_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_line_0_VAL_priority DT_N_S_soc_S_can_4000a400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_line_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_line_1_VAL_irq DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_line_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_line_1_VAL_priority DT_N_S_soc_S_can_4000a400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_4000a400_IRQ_NAME_line_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_COMPAT_MATCHES_st_stm32_fdcan 1
#define DT_N_S_soc_S_can_4000a400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_can_4000a400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_COMPAT_MODEL_IDX_0 "stm32-fdcan"
#define DT_N_S_soc_S_can_4000a400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_4000a400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_4000a400_P_reg {1073783808 /* 0x4000a400 */, 1024 /* 0x400 */, 1073785856 /* 0x4000ac00 */, 848 /* 0x350 */}
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_0 1073783808
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_2 1073785856
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_3 848
#define DT_N_S_soc_S_can_4000a400_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */, 40 /* 0x28 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_2 40
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_4000a400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_VAL_bus 160
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_VAL_bits 512
#define DT_N_S_soc_S_can_4000a400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, clocks, 0)
#define DT_N_S_soc_S_can_4000a400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, clocks, 0)
#define DT_N_S_soc_S_can_4000a400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_clocks_LEN 1
#define DT_N_S_soc_S_can_4000a400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg {0 /* 0x0 */, 28 /* 0x1c */, 8 /* 0x8 */, 3 /* 0x3 */, 3 /* 0x3 */, 0 /* 0x0 */, 3 /* 0x3 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_0 0
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_1 28
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_2 8
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_3 3
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_4 3
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_5 0
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_6 3
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_7 3
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 0) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 1) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 2) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 3) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 4) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 5) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 6) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 7)
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 7)
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, bosch_mram_cfg, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_LEN 8
#define DT_N_S_soc_S_can_4000a400_P_bosch_mram_cfg_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_sample_point_data 875
#define DT_N_S_soc_S_can_4000a400_P_sample_point_data_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_sjw_data 1
#define DT_N_S_soc_S_can_4000a400_P_sjw_data_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_tx_delay_comp_offset 0
#define DT_N_S_soc_S_can_4000a400_P_tx_delay_comp_offset_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_sample_point 875
#define DT_N_S_soc_S_can_4000a400_P_sample_point_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_sjw 1
#define DT_N_S_soc_S_can_4000a400_P_sjw_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_status "disabled"
#define DT_N_S_soc_S_can_4000a400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_can_4000a400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_4000a400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_4000a400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_can_4000a400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_can_4000a400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_can_4000a400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_4000a400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, status, 0)
#define DT_N_S_soc_S_can_4000a400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, status, 0)
#define DT_N_S_soc_S_can_4000a400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_status_LEN 1
#define DT_N_S_soc_S_can_4000a400_P_status_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_compatible {"st,stm32-fdcan"}
#define DT_N_S_soc_S_can_4000a400_P_compatible_IDX_0 "st,stm32-fdcan"
#define DT_N_S_soc_S_can_4000a400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-fdcan
#define DT_N_S_soc_S_can_4000a400_P_compatible_IDX_0_STRING_TOKEN st_stm32_fdcan
#define DT_N_S_soc_S_can_4000a400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FDCAN
#define DT_N_S_soc_S_can_4000a400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, compatible, 0)
#define DT_N_S_soc_S_can_4000a400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, compatible, 0)
#define DT_N_S_soc_S_can_4000a400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_compatible_LEN 1
#define DT_N_S_soc_S_can_4000a400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_names {"m_can", "message_ram"}
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_0 "m_can"
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_0_STRING_UNQUOTED m_can
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_0_STRING_TOKEN m_can
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_0_STRING_UPPER_TOKEN M_CAN
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_1 "message_ram"
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_1_STRING_UNQUOTED message_ram
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_1_STRING_TOKEN message_ram
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_1_STRING_UPPER_TOKEN MESSAGE_RAM
#define DT_N_S_soc_S_can_4000a400_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, reg_names, 0) \
	fn(DT_N_S_soc_S_can_4000a400, reg_names, 1)
#define DT_N_S_soc_S_can_4000a400_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, reg_names, 1)
#define DT_N_S_soc_S_can_4000a400_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_reg_names_LEN 2
#define DT_N_S_soc_S_can_4000a400_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names {"LINE_0", "LINE_1"}
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_0 "LINE_0"
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_0_STRING_UNQUOTED LINE_0
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_0_STRING_TOKEN LINE_0
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN LINE_0
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_1 "LINE_1"
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_1_STRING_UNQUOTED LINE_1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_1_STRING_TOKEN LINE_1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN LINE_1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 1)
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 1)
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_4000a400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_can_4000a400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_wakeup_source 0
#define DT_N_S_soc_S_can_4000a400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_can_4000a400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_can_4000a400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/dac1_out1_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_PATH "/soc/pin-controller@42020000/dac1_out1_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_FULL_NAME "dac1_out1_pa4"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_ORD 51
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_SUPPORTS_ORDS \
	52, /* /soc/dac@46021800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_EXISTS 1
#define DT_N_NODELABEL_dac1_out1_pa4 DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_pinmux 144
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/dac@46021800
 *
 * Node identifier: DT_N_S_soc_S_dac_46021800
 *
 * Binding (compatible = st,stm32-dac):
 *   $ZEPHYR_BASE/dts/bindings/dac/st,stm32-dac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dac_46021800_PATH "/soc/dac@46021800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dac_46021800_FULL_NAME "dac@46021800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dac_46021800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dac_46021800_CHILD_IDX 44

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dac_46021800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dac_46021800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_46021800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_46021800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dac_46021800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dac_46021800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_46021800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_46021800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dac_46021800_ORD 52
#define DT_N_S_soc_S_dac_46021800_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dac_46021800_REQUIRES_ORDS \
	4, /* /soc */ \
	9, /* /soc/rcc@46020c00 */ \
	51, /* /soc/pin-controller@42020000/dac1_out1_pa4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dac_46021800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dac_46021800_EXISTS 1
#define DT_N_INST_0_st_stm32_dac DT_N_S_soc_S_dac_46021800
#define DT_N_NODELABEL_dac1      DT_N_S_soc_S_dac_46021800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dac_46021800_REG_NUM 1
#define DT_N_S_soc_S_dac_46021800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_REG_IDX_0_VAL_ADDRESS 1174542336 /* 0x46021800 */
#define DT_N_S_soc_S_dac_46021800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dac_46021800_RANGES_NUM 0
#define DT_N_S_soc_S_dac_46021800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dac_46021800_IRQ_NUM 0
#define DT_N_S_soc_S_dac_46021800_COMPAT_MATCHES_st_stm32_dac 1
#define DT_N_S_soc_S_dac_46021800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dac_46021800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_COMPAT_MODEL_IDX_0 "stm32-dac"
#define DT_N_S_soc_S_dac_46021800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dac_46021800_PINCTRL_NUM 1
#define DT_N_S_soc_S_dac_46021800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_dac_46021800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_dac_46021800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_dac_46021800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4

/* Generic property macros: */
#define DT_N_S_soc_S_dac_46021800_P_reg {1174542336 /* 0x46021800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dac_46021800_P_reg_IDX_0 1174542336
#define DT_N_S_soc_S_dac_46021800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dac_46021800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_reg_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_dac_46021800_P_clocks_IDX_0_VAL_bus 148
#define DT_N_S_soc_S_dac_46021800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_dac_46021800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_46021800, clocks, 0)
#define DT_N_S_soc_S_dac_46021800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_46021800, clocks, 0)
#define DT_N_S_soc_S_dac_46021800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_46021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_46021800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_46021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_46021800_P_clocks_LEN 1
#define DT_N_S_soc_S_dac_46021800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_46021800, pinctrl_0, 0)
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_46021800, pinctrl_0, 0)
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_46021800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_46021800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_46021800, pinctrl_names, 0)
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_46021800, pinctrl_names, 0)
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_46021800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_46021800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_dac_46021800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_status "okay"
#define DT_N_S_soc_S_dac_46021800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_dac_46021800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dac_46021800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dac_46021800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_dac_46021800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_dac_46021800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_dac_46021800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dac_46021800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_46021800, status, 0)
#define DT_N_S_soc_S_dac_46021800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_46021800, status, 0)
#define DT_N_S_soc_S_dac_46021800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_46021800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_46021800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_46021800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_46021800_P_status_LEN 1
#define DT_N_S_soc_S_dac_46021800_P_status_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_compatible {"st,stm32-dac"}
#define DT_N_S_soc_S_dac_46021800_P_compatible_IDX_0 "st,stm32-dac"
#define DT_N_S_soc_S_dac_46021800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dac
#define DT_N_S_soc_S_dac_46021800_P_compatible_IDX_0_STRING_TOKEN st_stm32_dac
#define DT_N_S_soc_S_dac_46021800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DAC
#define DT_N_S_soc_S_dac_46021800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_46021800, compatible, 0)
#define DT_N_S_soc_S_dac_46021800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_46021800, compatible, 0)
#define DT_N_S_soc_S_dac_46021800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_46021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_46021800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_46021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_46021800_P_compatible_LEN 1
#define DT_N_S_soc_S_dac_46021800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_wakeup_source 0
#define DT_N_S_soc_S_dac_46021800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dac_46021800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dac_46021800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dma@40020000
 *
 * Node identifier: DT_N_S_soc_S_dma_40020000
 *
 * Binding (compatible = st,stm32u5-dma):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32u5-dma.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40020000_PATH "/soc/dma@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40020000_FULL_NAME "dma@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40020000_CHILD_IDX 49

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40020000_ORD 53
#define DT_N_S_soc_S_dma_40020000_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40020000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40020000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32u5_dma DT_N_S_soc_S_dma_40020000
#define DT_N_NODELABEL_gpdma1      DT_N_S_soc_S_dma_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40020000_REG_NUM 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_dma_40020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40020000_IRQ_NUM 16
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq 30
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq 31
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq 32
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq 33
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq 34
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq 35
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_VAL_irq 36
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_8_VAL_irq 80
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_8_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_9_VAL_irq 81
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_9_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_10_VAL_irq 82
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_10_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_10_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_10_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_11_VAL_irq 83
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_11_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_11_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_11_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_12_VAL_irq 84
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_12_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_12_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_12_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_13_VAL_irq 85
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_13_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_13_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_13_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_14_VAL_irq 86
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_14_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_14_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_14_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_15_VAL_irq 87
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_15_VAL_priority 0
#define DT_N_S_soc_S_dma_40020000_IRQ_IDX_15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MATCHES_st_stm32u5_dma 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_COMPAT_MODEL_IDX_0 "stm32u5-dma"
#define DT_N_S_soc_S_dma_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40020000_P_reg {1073872896 /* 0x40020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */, 30 /* 0x1e */, 0 /* 0x0 */, 31 /* 0x1f */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */, 33 /* 0x21 */, 0 /* 0x0 */, 34 /* 0x22 */, 0 /* 0x0 */, 35 /* 0x23 */, 0 /* 0x0 */, 36 /* 0x24 */, 0 /* 0x0 */, 80 /* 0x50 */, 0 /* 0x0 */, 81 /* 0x51 */, 0 /* 0x0 */, 82 /* 0x52 */, 0 /* 0x0 */, 83 /* 0x53 */, 0 /* 0x0 */, 84 /* 0x54 */, 0 /* 0x0 */, 85 /* 0x55 */, 0 /* 0x0 */, 86 /* 0x56 */, 0 /* 0x0 */, 87 /* 0x57 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2 30
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4 31
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6 32
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8 33
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_10 34
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_12 35
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_14 36
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_16 80
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_16_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_17 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_17_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_18 81
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_18_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_19 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_19_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_20 82
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_20_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_21 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_21_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_22 83
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_22_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_23 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_23_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_24 84
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_24_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_25 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_25_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_26 85
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_26_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_27 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_27_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_28 86
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_28_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_29 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_29_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_30 87
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_30_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_31 0
#define DT_N_S_soc_S_dma_40020000_P_interrupts_IDX_31_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40020000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_dma_offset 0
#define DT_N_S_soc_S_dma_40020000_P_dma_offset_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_dma_channels 16
#define DT_N_S_soc_S_dma_40020000_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_dma_requests 114
#define DT_N_S_soc_S_dma_40020000_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status "okay"
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dma_40020000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_dma_40020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_dma_40020000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, status, 0)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, status, 0)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_status_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible {"st,stm32u5-dma"}
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0 "st,stm32u5-dma"
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32u5-dma
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_TOKEN st_stm32u5_dma
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32U5_DMA
#define DT_N_S_soc_S_dma_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, compatible, 0)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, compatible, 0)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus 136
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40020000, clocks, 0)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40020000, clocks, 0)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40008400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40008400
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40008400_PATH "/soc/i2c@40008400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40008400_FULL_NAME "i2c@40008400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40008400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40008400_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40008400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40008400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40008400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40008400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40008400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40008400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40008400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40008400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40008400_ORD 54
#define DT_N_S_soc_S_i2c_40008400_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40008400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40008400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40008400_EXISTS 1
#define DT_N_INST_3_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40008400
#define DT_N_NODELABEL_i2c4         DT_N_S_soc_S_i2c_40008400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40008400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40008400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_REG_IDX_0_VAL_ADDRESS 1073775616 /* 0x40008400 */
#define DT_N_S_soc_S_i2c_40008400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40008400_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40008400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40008400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_0_VAL_irq 101
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_1_VAL_irq 100
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40008400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40008400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40008400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40008400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40008400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40008400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40008400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40008400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40008400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40008400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40008400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40008400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40008400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40008400_P_reg {1073775616 /* 0x40008400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40008400_P_reg_IDX_0 1073775616
#define DT_N_S_soc_S_i2c_40008400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40008400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_interrupts {101 /* 0x65 */, 0 /* 0x0 */, 100 /* 0x64 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40008400_P_interrupts_IDX_0 101
#define DT_N_S_soc_S_i2c_40008400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40008400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_interrupts_IDX_2 100
#define DT_N_S_soc_S_i2c_40008400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40008400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40008400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_status "disabled"
#define DT_N_S_soc_S_i2c_40008400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40008400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40008400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40008400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40008400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40008400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40008400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40008400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40008400, status, 0)
#define DT_N_S_soc_S_i2c_40008400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40008400, status, 0)
#define DT_N_S_soc_S_i2c_40008400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40008400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40008400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40008400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40008400_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40008400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40008400_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40008400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_40008400_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40008400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40008400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40008400, compatible, 0)
#define DT_N_S_soc_S_i2c_40008400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40008400, compatible, 0)
#define DT_N_S_soc_S_i2c_40008400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40008400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40008400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40008400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40008400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40008400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40008400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40008400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40008400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40008400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40008400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40008400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40008400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40008400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40008400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_i2c_40008400_P_clocks_IDX_0_VAL_bus 160
#define DT_N_S_soc_S_i2c_40008400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_i2c_40008400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40008400, clocks, 0)
#define DT_N_S_soc_S_i2c_40008400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40008400, clocks, 0)
#define DT_N_S_soc_S_i2c_40008400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40008400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40008400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40008400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40008400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40008400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40008400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40008400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40008400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@46002800
 *
 * Node identifier: DT_N_S_soc_S_i2c_46002800
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_46002800_PATH "/soc/i2c@46002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_46002800_FULL_NAME "i2c@46002800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_46002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_46002800_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_46002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_46002800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_46002800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_46002800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_46002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_46002800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_46002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_46002800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_46002800_ORD 55
#define DT_N_S_soc_S_i2c_46002800_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_46002800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_46002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_46002800_EXISTS 1
#define DT_N_INST_2_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_46002800
#define DT_N_NODELABEL_i2c3         DT_N_S_soc_S_i2c_46002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_46002800_REG_NUM 1
#define DT_N_S_soc_S_i2c_46002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_REG_IDX_0_VAL_ADDRESS 1174415360 /* 0x46002800 */
#define DT_N_S_soc_S_i2c_46002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_46002800_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_46002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_46002800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_0_VAL_irq 88
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_1_VAL_irq 89
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_46002800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_46002800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_46002800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_46002800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_46002800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_46002800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_46002800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_46002800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_46002800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_46002800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_46002800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_46002800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_46002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_46002800_P_reg {1174415360 /* 0x46002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_46002800_P_reg_IDX_0 1174415360
#define DT_N_S_soc_S_i2c_46002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_46002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_interrupts {88 /* 0x58 */, 0 /* 0x0 */, 89 /* 0x59 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_46002800_P_interrupts_IDX_0 88
#define DT_N_S_soc_S_i2c_46002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_46002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_interrupts_IDX_2 89
#define DT_N_S_soc_S_i2c_46002800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_46002800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_46002800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_status "disabled"
#define DT_N_S_soc_S_i2c_46002800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_46002800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_46002800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_46002800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_46002800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_46002800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_46002800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_46002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_46002800, status, 0)
#define DT_N_S_soc_S_i2c_46002800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_46002800, status, 0)
#define DT_N_S_soc_S_i2c_46002800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_46002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_46002800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_46002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_46002800_P_status_LEN 1
#define DT_N_S_soc_S_i2c_46002800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_46002800_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_46002800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_46002800_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_46002800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_46002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_46002800, compatible, 0)
#define DT_N_S_soc_S_i2c_46002800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_46002800, compatible, 0)
#define DT_N_S_soc_S_i2c_46002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_46002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_46002800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_46002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_46002800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_46002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_46002800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_46002800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_46002800, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_46002800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_46002800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_46002800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_46002800, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_46002800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_46002800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_i2c_46002800_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_i2c_46002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_i2c_46002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_46002800, clocks, 0)
#define DT_N_S_soc_S_i2c_46002800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_46002800, clocks, 0)
#define DT_N_S_soc_S_i2c_46002800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_46002800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_46002800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_46002800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_46002800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_46002800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_46002800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_46002800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_46002800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@46022000
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_46022000
 *
 * Binding (compatible = st,stm32g0-exti):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/st,stm32g0-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_46022000_PATH "/soc/interrupt-controller@46022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_46022000_FULL_NAME "interrupt-controller@46022000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_46022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_46022000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_46022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_46022000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_46022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_46022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_46022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_46022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_46022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_46022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_46022000_ORD 56
#define DT_N_S_soc_S_interrupt_controller_46022000_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_46022000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_46022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_46022000_EXISTS 1
#define DT_N_INST_0_st_stm32g0_exti DT_N_S_soc_S_interrupt_controller_46022000
#define DT_N_INST_0_st_stm32_exti   DT_N_S_soc_S_interrupt_controller_46022000
#define DT_N_NODELABEL_exti         DT_N_S_soc_S_interrupt_controller_46022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_46022000_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_46022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_REG_IDX_0_VAL_ADDRESS 1174544384 /* 0x46022000 */
#define DT_N_S_soc_S_interrupt_controller_46022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_46022000_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_46022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NUM 16
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_7_VAL_irq 18
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_8_VAL_irq 19
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_8_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_9_VAL_irq 20
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_9_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_10_VAL_irq 21
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_10_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_10_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_10_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_11_VAL_irq 22
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_11_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_11_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_11_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_12_VAL_irq 23
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_12_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_12_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_12_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_13_VAL_irq 24
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_13_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_13_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_13_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_14_VAL_irq 25
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_14_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_14_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_14_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_15_VAL_irq 26
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_15_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line0_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line0_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line1_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line1_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line2_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line2_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line3_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line3_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line4_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line4_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line5_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_5_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line5_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_5_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line6_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_6_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line6_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_6_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line7_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_7_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line7_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_7_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line8_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_8_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line8_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_8_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line9_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_9_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line9_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_9_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line10_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_10_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line10_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line10_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_10_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line10_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line11_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_11_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line11_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line11_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_11_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line11_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line12_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_12_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line12_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line12_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_12_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line12_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line13_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_13_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line13_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line13_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_13_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line13_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line14_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_14_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line14_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line14_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_14_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line14_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line15_VAL_irq DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_15_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line15_VAL_priority DT_N_S_soc_S_interrupt_controller_46022000_IRQ_IDX_15_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_46022000_IRQ_NAME_line15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_COMPAT_MATCHES_st_stm32g0_exti 1
#define DT_N_S_soc_S_interrupt_controller_46022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_interrupt_controller_46022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_COMPAT_MODEL_IDX_0 "stm32g0-exti"
#define DT_N_S_soc_S_interrupt_controller_46022000_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_46022000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_interrupt_controller_46022000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_COMPAT_MODEL_IDX_1 "stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_46022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_46022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_46022000_P_reg {1174544384 /* 0x46022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_46022000_P_reg_IDX_0 1174544384
#define DT_N_S_soc_S_interrupt_controller_46022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_46022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */, 18 /* 0x12 */, 0 /* 0x0 */, 19 /* 0x13 */, 0 /* 0x0 */, 20 /* 0x14 */, 0 /* 0x0 */, 21 /* 0x15 */, 0 /* 0x0 */, 22 /* 0x16 */, 0 /* 0x0 */, 23 /* 0x17 */, 0 /* 0x0 */, 24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_14 18
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_16 19
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_16_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_17 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_17_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_18 20
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_18_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_19 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_19_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_20 21
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_20_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_21 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_21_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_22 22
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_22_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_23 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_23_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_24 23
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_24_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_25 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_25_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_26 24
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_26_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_27 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_27_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_28 25
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_28_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_29 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_29_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_30 26
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_30_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_31 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_IDX_31_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names {"line0", "line1", "line2", "line3", "line4", "line5", "line6", "line7", "line8", "line9", "line10", "line11", "line12", "line13", "line14", "line15"}
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_0 "line0"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_0_STRING_UNQUOTED line0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_0_STRING_TOKEN line0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN LINE0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_1 "line1"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_1_STRING_UNQUOTED line1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_1_STRING_TOKEN line1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN LINE1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_2 "line2"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_2_STRING_UNQUOTED line2
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_2_STRING_TOKEN line2
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN LINE2
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_3 "line3"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_3_STRING_UNQUOTED line3
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_3_STRING_TOKEN line3
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN LINE3
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_4 "line4"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_4_STRING_UNQUOTED line4
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_4_STRING_TOKEN line4
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN LINE4
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_5 "line5"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_5_STRING_UNQUOTED line5
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_5_STRING_TOKEN line5
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_5_STRING_UPPER_TOKEN LINE5
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_6 "line6"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_6_STRING_UNQUOTED line6
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_6_STRING_TOKEN line6
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_6_STRING_UPPER_TOKEN LINE6
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_7 "line7"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_7_STRING_UNQUOTED line7
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_7_STRING_TOKEN line7
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_7_STRING_UPPER_TOKEN LINE7
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_8 "line8"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_8_STRING_UNQUOTED line8
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_8_STRING_TOKEN line8
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_8_STRING_UPPER_TOKEN LINE8
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_9 "line9"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_9_STRING_UNQUOTED line9
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_9_STRING_TOKEN line9
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_9_STRING_UPPER_TOKEN LINE9
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_10 "line10"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_10_STRING_UNQUOTED line10
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_10_STRING_TOKEN line10
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_10_STRING_UPPER_TOKEN LINE10
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_11 "line11"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_11_STRING_UNQUOTED line11
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_11_STRING_TOKEN line11
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_11_STRING_UPPER_TOKEN LINE11
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_12 "line12"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_12_STRING_UNQUOTED line12
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_12_STRING_TOKEN line12
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_12_STRING_UPPER_TOKEN LINE12
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_13 "line13"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_13_STRING_UNQUOTED line13
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_13_STRING_TOKEN line13
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_13_STRING_UPPER_TOKEN LINE13
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_14 "line14"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_14_STRING_UNQUOTED line14
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_14_STRING_TOKEN line14
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_14_STRING_UPPER_TOKEN LINE14
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_15 "line15"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_15_STRING_UNQUOTED line15
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_15_STRING_TOKEN line15
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_15_STRING_UPPER_TOKEN LINE15
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 5) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 6) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 7) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 8) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 9) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 10) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 11) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 12) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 13) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 14) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 15)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 15)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 15, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, interrupt_names, 15, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_LEN 16
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_num_lines 16
#define DT_N_S_soc_S_interrupt_controller_46022000_P_num_lines_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges {0 /* 0x0 */, 1 /* 0x1 */, 1 /* 0x1 */, 1 /* 0x1 */, 2 /* 0x2 */, 1 /* 0x1 */, 3 /* 0x3 */, 1 /* 0x1 */, 4 /* 0x4 */, 1 /* 0x1 */, 5 /* 0x5 */, 1 /* 0x1 */, 6 /* 0x6 */, 1 /* 0x1 */, 7 /* 0x7 */, 1 /* 0x1 */, 8 /* 0x8 */, 1 /* 0x1 */, 9 /* 0x9 */, 1 /* 0x1 */, 10 /* 0xa */, 1 /* 0x1 */, 11 /* 0xb */, 1 /* 0x1 */, 12 /* 0xc */, 1 /* 0x1 */, 13 /* 0xd */, 1 /* 0x1 */, 14 /* 0xe */, 1 /* 0x1 */, 15 /* 0xf */, 1 /* 0x1 */}
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_0 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_1 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_2 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_3 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_4 2
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_5 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_6 3
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_7 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_8 4
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_9 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_10 5
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_11 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_12 6
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_13 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_14 7
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_14_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_15 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_15_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_16 8
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_16_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_17 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_17_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_18 9
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_18_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_19 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_19_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_20 10
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_20_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_21 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_21_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_22 11
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_22_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_23 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_23_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_24 12
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_24_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_25 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_25_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_26 13
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_26_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_27 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_27_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_28 14
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_28_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_29 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_29_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_30 15
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_30_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_31 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_IDX_31_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 5) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 6) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 7) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 8) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 9) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 10) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 11) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 12) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 13) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 14) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 15) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 16) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 17) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 18) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 19) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 20) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 21) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 22) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 23) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 24) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 25) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 26) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 27) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 28) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 29) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 30) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 31)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 31)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 21, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 22, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 23, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 24, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 25, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 26, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 27, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 28, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 29, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 30, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 31, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, line_ranges, 31, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_LEN 32
#define DT_N_S_soc_S_interrupt_controller_46022000_P_line_ranges_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible {"st,stm32g0-exti", "st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_IDX_0 "st,stm32g0-exti"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32g0-exti
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_IDX_0_STRING_TOKEN st_stm32g0_exti
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32G0_EXTI
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_IDX_1 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-exti
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_IDX_1_STRING_TOKEN st_stm32_exti
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_EXTI
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_46022000, compatible, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, compatible, 1)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_46022000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, compatible, 1)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_46022000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_46022000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_46022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_LEN 2
#define DT_N_S_soc_S_interrupt_controller_46022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_46022000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_46022000_P_interrupt_controller_EXISTS 1

/*
 * Devicetree node: /soc/memory@40036400
 *
 * Node identifier: DT_N_S_soc_S_memory_40036400
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_40036400_PATH "/soc/memory@40036400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_40036400_FULL_NAME "memory@40036400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_40036400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_40036400_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_40036400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_40036400_ORD 57
#define DT_N_S_soc_S_memory_40036400_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_40036400_REQUIRES_ORDS \
	4, /* /soc */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_40036400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_40036400_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_soc_S_memory_40036400
#define DT_N_INST_0_st_stm32_backup_sram DT_N_S_soc_S_memory_40036400
#define DT_N_NODELABEL_backup_sram       DT_N_S_soc_S_memory_40036400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_40036400_REG_NUM 1
#define DT_N_S_soc_S_memory_40036400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_REG_IDX_0_VAL_ADDRESS 1073964032 /* 0x40036400 */
#define DT_N_S_soc_S_memory_40036400_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_memory_40036400_RANGES_NUM 0
#define DT_N_S_soc_S_memory_40036400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_40036400_IRQ_NUM 0
#define DT_N_S_soc_S_memory_40036400_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_memory_40036400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_40036400_COMPAT_MATCHES_st_stm32_backup_sram 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_memory_40036400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_COMPAT_MODEL_IDX_1 "stm32-backup-sram"
#define DT_N_S_soc_S_memory_40036400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_40036400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region "BACKUP_SRAM"
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_STRING_UNQUOTED BACKUP_SRAM
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_STRING_TOKEN BACKUP_SRAM
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_STRING_UPPER_TOKEN BACKUP_SRAM
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_IDX_0 "BACKUP_SRAM"
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40036400, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40036400, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40036400, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40036400, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_40036400_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_status "disabled"
#define DT_N_S_soc_S_memory_40036400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_memory_40036400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_memory_40036400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_memory_40036400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_memory_40036400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_memory_40036400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_memory_40036400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_memory_40036400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40036400, status, 0)
#define DT_N_S_soc_S_memory_40036400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40036400, status, 0)
#define DT_N_S_soc_S_memory_40036400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40036400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40036400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_status_LEN 1
#define DT_N_S_soc_S_memory_40036400_P_status_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_compatible {"zephyr,memory-region", "st,stm32-backup-sram"}
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_1 "st,stm32-backup-sram"
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-backup-sram
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_1_STRING_TOKEN st_stm32_backup_sram
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_BACKUP_SRAM
#define DT_N_S_soc_S_memory_40036400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40036400, compatible, 0) \
	fn(DT_N_S_soc_S_memory_40036400, compatible, 1)
#define DT_N_S_soc_S_memory_40036400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40036400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_40036400, compatible, 1)
#define DT_N_S_soc_S_memory_40036400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40036400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40036400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40036400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_40036400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_40036400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_reg {1073964032 /* 0x40036400 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_memory_40036400_P_reg_IDX_0 1073964032
#define DT_N_S_soc_S_memory_40036400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_reg_IDX_1 2048
#define DT_N_S_soc_S_memory_40036400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_VAL_bus 136
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_VAL_bits 268566528
#define DT_N_S_soc_S_memory_40036400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40036400, clocks, 0)
#define DT_N_S_soc_S_memory_40036400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40036400, clocks, 0)
#define DT_N_S_soc_S_memory_40036400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40036400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40036400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40036400_P_clocks_LEN 1
#define DT_N_S_soc_S_memory_40036400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_wakeup_source 0
#define DT_N_S_soc_S_memory_40036400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_40036400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_40036400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/octospi@420d1400
 *
 * Node identifier: DT_N_S_soc_S_octospi_420d1400
 *
 * Binding (compatible = st,stm32-ospi):
 *   $ZEPHYR_BASE/dts/bindings/ospi/st,stm32-ospi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_octospi_420d1400_PATH "/soc/octospi@420d1400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_octospi_420d1400_FULL_NAME "octospi@420d1400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_octospi_420d1400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_octospi_420d1400_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_octospi_420d1400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_octospi_420d1400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_octospi_420d1400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_octospi_420d1400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_octospi_420d1400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_octospi_420d1400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_octospi_420d1400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_octospi_420d1400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_octospi_420d1400_ORD 58
#define DT_N_S_soc_S_octospi_420d1400_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_octospi_420d1400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_octospi_420d1400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_octospi_420d1400_EXISTS 1
#define DT_N_INST_1_st_stm32_ospi DT_N_S_soc_S_octospi_420d1400
#define DT_N_NODELABEL_octospi1   DT_N_S_soc_S_octospi_420d1400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_octospi_420d1400_REG_NUM 1
#define DT_N_S_soc_S_octospi_420d1400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_REG_IDX_0_VAL_ADDRESS 1108153344 /* 0x420d1400 */
#define DT_N_S_soc_S_octospi_420d1400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_octospi_420d1400_RANGES_NUM 0
#define DT_N_S_soc_S_octospi_420d1400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_octospi_420d1400_IRQ_NUM 1
#define DT_N_S_soc_S_octospi_420d1400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_IRQ_IDX_0_VAL_irq 76
#define DT_N_S_soc_S_octospi_420d1400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_octospi_420d1400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_COMPAT_MATCHES_st_stm32_ospi 1
#define DT_N_S_soc_S_octospi_420d1400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_octospi_420d1400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_COMPAT_MODEL_IDX_0 "stm32-ospi"
#define DT_N_S_soc_S_octospi_420d1400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_octospi_420d1400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_octospi_420d1400_P_reg {1108153344 /* 0x420d1400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_octospi_420d1400_P_reg_IDX_0 1108153344
#define DT_N_S_soc_S_octospi_420d1400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_octospi_420d1400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_reg_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_interrupts {76 /* 0x4c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_octospi_420d1400_P_interrupts_IDX_0 76
#define DT_N_S_soc_S_octospi_420d1400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_octospi_420d1400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names {"ospix", "ospi-ker", "ospi-mgr"}
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_0 "ospix"
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_0_STRING_UNQUOTED ospix
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_0_STRING_TOKEN ospix
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_0_STRING_UPPER_TOKEN OSPIX
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_1 "ospi-ker"
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_1_STRING_UNQUOTED ospi-ker
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_1_STRING_TOKEN ospi_ker
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_1_STRING_UPPER_TOKEN OSPI_KER
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_2 "ospi-mgr"
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_2_STRING_UNQUOTED ospi-mgr
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_2_STRING_TOKEN ospi_mgr
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_2_STRING_UPPER_TOKEN OSPI_MGR
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 0) \
	fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 1) \
	fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 2)
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 2)
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d1400, clock_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_LEN 3
#define DT_N_S_soc_S_octospi_420d1400_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_dlyb_bypass 0
#define DT_N_S_soc_S_octospi_420d1400_P_dlyb_bypass_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_ssht_enable 0
#define DT_N_S_soc_S_octospi_420d1400_P_ssht_enable_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_status "disabled"
#define DT_N_S_soc_S_octospi_420d1400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_octospi_420d1400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_octospi_420d1400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_octospi_420d1400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_octospi_420d1400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_octospi_420d1400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_octospi_420d1400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_octospi_420d1400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d1400, status, 0)
#define DT_N_S_soc_S_octospi_420d1400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d1400, status, 0)
#define DT_N_S_soc_S_octospi_420d1400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d1400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d1400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d1400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d1400_P_status_LEN 1
#define DT_N_S_soc_S_octospi_420d1400_P_status_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_compatible {"st,stm32-ospi"}
#define DT_N_S_soc_S_octospi_420d1400_P_compatible_IDX_0 "st,stm32-ospi"
#define DT_N_S_soc_S_octospi_420d1400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-ospi
#define DT_N_S_soc_S_octospi_420d1400_P_compatible_IDX_0_STRING_TOKEN st_stm32_ospi
#define DT_N_S_soc_S_octospi_420d1400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_OSPI
#define DT_N_S_soc_S_octospi_420d1400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d1400, compatible, 0)
#define DT_N_S_soc_S_octospi_420d1400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d1400, compatible, 0)
#define DT_N_S_soc_S_octospi_420d1400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d1400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d1400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d1400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d1400_P_compatible_LEN 1
#define DT_N_S_soc_S_octospi_420d1400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_0_VAL_bus 144
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_0_NAME "ospix"
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospix_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospix_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospix_VAL_bus DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_0_VAL_bus
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospix_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospix_VAL_bits DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_0_VAL_bits
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospix_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_1_VAL_bus 17
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_1_VAL_bits 29924
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_1_NAME "ospi-ker"
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_ker_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_ker_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_ker_VAL_bus DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_1_VAL_bus
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_ker_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_ker_VAL_bits DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_1_VAL_bits
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_ker_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_2_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_2_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_2_VAL_bus 140
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_2_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_2_VAL_bits 2097152
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_2_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_2_NAME "ospi-mgr"
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_mgr_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_mgr_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_mgr_VAL_bus DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_2_VAL_bus
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_mgr_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_mgr_VAL_bits DT_N_S_soc_S_octospi_420d1400_P_clocks_IDX_2_VAL_bits
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_NAME_ospi_mgr_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d1400, clocks, 0) \
	fn(DT_N_S_soc_S_octospi_420d1400, clocks, 1) \
	fn(DT_N_S_soc_S_octospi_420d1400, clocks, 2)
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d1400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d1400, clocks, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d1400, clocks, 2)
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d1400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d1400, clocks, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d1400, clocks, 2, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d1400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d1400, clocks, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d1400, clocks, 2, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_LEN 3
#define DT_N_S_soc_S_octospi_420d1400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_wakeup_source 0
#define DT_N_S_soc_S_octospi_420d1400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_octospi_420d1400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_octospi_420d1400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /otgfs_phy
 *
 * Node identifier: DT_N_S_otgfs_phy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE/dts/bindings/phy/usb-nop-xceiv.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_otgfs_phy_PATH "/otgfs_phy"

/* Node's name with unit-address: */
#define DT_N_S_otgfs_phy_FULL_NAME "otgfs_phy"

/* Node parent (/) identifier: */
#define DT_N_S_otgfs_phy_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_otgfs_phy_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_otgfs_phy_FOREACH_CHILD(fn) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_otgfs_phy_ORD 59
#define DT_N_S_otgfs_phy_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_otgfs_phy_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_otgfs_phy_SUPPORTS_ORDS \
	62, /* /soc/otgfs@42040000 */

/* Existence and alternate IDs: */
#define DT_N_S_otgfs_phy_EXISTS 1
#define DT_N_INST_0_usb_nop_xceiv DT_N_S_otgfs_phy
#define DT_N_NODELABEL_otgfs_phy  DT_N_S_otgfs_phy

/* Macros for properties that are special in the specification: */
#define DT_N_S_otgfs_phy_REG_NUM 0
#define DT_N_S_otgfs_phy_RANGES_NUM 0
#define DT_N_S_otgfs_phy_FOREACH_RANGE(fn) 
#define DT_N_S_otgfs_phy_IRQ_NUM 0
#define DT_N_S_otgfs_phy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_otgfs_phy_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_otgfs_phy_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_otgfs_phy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_otgfs_phy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_STRING_UNQUOTED usb-nop-xceiv
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_STRING_TOKEN usb_nop_xceiv
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_STRING_UPPER_TOKEN USB_NOP_XCEIV
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otgfs_phy, compatible, 0)
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_otgfs_phy, compatible, 0)
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_otgfs_phy, compatible, 0, __VA_ARGS__)
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_otgfs_phy, compatible, 0, __VA_ARGS__)
#define DT_N_S_otgfs_phy_P_compatible_LEN 1
#define DT_N_S_otgfs_phy_P_compatible_EXISTS 1
#define DT_N_S_otgfs_phy_P_wakeup_source 0
#define DT_N_S_otgfs_phy_P_wakeup_source_EXISTS 1
#define DT_N_S_otgfs_phy_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_otgfs_phy_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/usb_otg_fs_dm_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_PATH "/soc/pin-controller@42020000/usb_otg_fs_dm_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_FULL_NAME "usb_otg_fs_dm_pa11"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_ORD 60
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_SUPPORTS_ORDS \
	62, /* /soc/otgfs@42040000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_dm_pa11 DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_pinmux 362
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/usb_otg_fs_dp_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_PATH "/soc/pin-controller@42020000/usb_otg_fs_dp_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_FULL_NAME "usb_otg_fs_dp_pa12"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_ORD 61
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_SUPPORTS_ORDS \
	62, /* /soc/otgfs@42040000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_dp_pa12 DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_pinmux 394
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/otgfs@42040000
 *
 * Node identifier: DT_N_S_soc_S_otgfs_42040000
 *
 * Binding (compatible = st,stm32-otgfs):
 *   $ZEPHYR_BASE/dts/bindings/usb/st,stm32-otgfs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_otgfs_42040000_PATH "/soc/otgfs@42040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_otgfs_42040000_FULL_NAME "otgfs@42040000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_otgfs_42040000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_otgfs_42040000_CHILD_IDX 51

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_otgfs_42040000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_otgfs_42040000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_otgfs_42040000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_otgfs_42040000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_otgfs_42040000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_otgfs_42040000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_otgfs_42040000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_otgfs_42040000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_otgfs_42040000_ORD 62
#define DT_N_S_soc_S_otgfs_42040000_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_otgfs_42040000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	59, /* /otgfs_phy */ \
	60, /* /soc/pin-controller@42020000/usb_otg_fs_dm_pa11 */ \
	61, /* /soc/pin-controller@42020000/usb_otg_fs_dp_pa12 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_otgfs_42040000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_otgfs_42040000_EXISTS 1
#define DT_N_INST_0_st_stm32_otgfs DT_N_S_soc_S_otgfs_42040000
#define DT_N_NODELABEL_usbotg_fs   DT_N_S_soc_S_otgfs_42040000
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_otgfs_42040000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_otgfs_42040000_REG_NUM 1
#define DT_N_S_soc_S_otgfs_42040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_REG_IDX_0_VAL_ADDRESS 1107558400 /* 0x42040000 */
#define DT_N_S_soc_S_otgfs_42040000_REG_IDX_0_VAL_SIZE 524288 /* 0x80000 */
#define DT_N_S_soc_S_otgfs_42040000_RANGES_NUM 0
#define DT_N_S_soc_S_otgfs_42040000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_otgfs_42040000_IRQ_NUM 1
#define DT_N_S_soc_S_otgfs_42040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_IRQ_IDX_0_VAL_irq 73
#define DT_N_S_soc_S_otgfs_42040000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_otgfs_42040000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_IRQ_NAME_otgfs_VAL_irq DT_N_S_soc_S_otgfs_42040000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_otgfs_42040000_IRQ_NAME_otgfs_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_IRQ_NAME_otgfs_VAL_priority DT_N_S_soc_S_otgfs_42040000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_otgfs_42040000_IRQ_NAME_otgfs_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_COMPAT_MATCHES_st_stm32_otgfs 1
#define DT_N_S_soc_S_otgfs_42040000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_otgfs_42040000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_COMPAT_MODEL_IDX_0 "stm32-otgfs"
#define DT_N_S_soc_S_otgfs_42040000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_otgfs_42040000_PINCTRL_NUM 1
#define DT_N_S_soc_S_otgfs_42040000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_otgfs_42040000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_otgfs_42040000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_otgfs_42040000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_otgfs_42040000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12

/* Generic property macros: */
#define DT_N_S_soc_S_otgfs_42040000_P_reg {1107558400 /* 0x42040000 */, 524288 /* 0x80000 */}
#define DT_N_S_soc_S_otgfs_42040000_P_reg_IDX_0 1107558400
#define DT_N_S_soc_S_otgfs_42040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_reg_IDX_1 524288
#define DT_N_S_soc_S_otgfs_42040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_interrupts {73 /* 0x49 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_otgfs_42040000_P_interrupts_IDX_0 73
#define DT_N_S_soc_S_otgfs_42040000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_otgfs_42040000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_0, 1)
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_0, 1)
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_names, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_names, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_42040000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_otgfs_42040000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_ram_size 1280
#define DT_N_S_soc_S_otgfs_42040000_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_phys DT_N_S_otgfs_phy
#define DT_N_S_soc_S_otgfs_42040000_P_phys_IDX_0 DT_N_S_otgfs_phy
#define DT_N_S_soc_S_otgfs_42040000_P_phys_IDX_0_PH DT_N_S_otgfs_phy
#define DT_N_S_soc_S_otgfs_42040000_P_phys_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_phys_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_42040000, phys, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_phys_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_42040000, phys, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_phys_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_42040000, phys, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_phys_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_42040000, phys, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_phys_LEN 1
#define DT_N_S_soc_S_otgfs_42040000_P_phys_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_1_VAL_bus 14
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_1_VAL_bits 31456
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_42040000, clocks, 0) \
	fn(DT_N_S_soc_S_otgfs_42040000, clocks, 1)
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_42040000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_42040000, clocks, 1)
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_42040000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_otgfs_42040000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_42040000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_otgfs_42040000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_LEN 2
#define DT_N_S_soc_S_otgfs_42040000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_num_bidir_endpoints 6
#define DT_N_S_soc_S_otgfs_42040000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed "full-speed"
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_STRING_UNQUOTED full-speed
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_STRING_TOKEN full_speed
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_STRING_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_IDX_0 "full-speed"
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_ENUM_IDX 1
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_ENUM_VAL_full_speed_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_ENUM_TOKEN full_speed
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_ENUM_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_42040000, maximum_speed, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_42040000, maximum_speed, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_42040000, maximum_speed, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_42040000, maximum_speed, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_LEN 1
#define DT_N_S_soc_S_otgfs_42040000_P_maximum_speed_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_status "okay"
#define DT_N_S_soc_S_otgfs_42040000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_otgfs_42040000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_otgfs_42040000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_otgfs_42040000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_otgfs_42040000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_otgfs_42040000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_otgfs_42040000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_otgfs_42040000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_42040000, status, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_42040000, status, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_42040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_42040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_status_LEN 1
#define DT_N_S_soc_S_otgfs_42040000_P_status_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_compatible {"st,stm32-otgfs"}
#define DT_N_S_soc_S_otgfs_42040000_P_compatible_IDX_0 "st,stm32-otgfs"
#define DT_N_S_soc_S_otgfs_42040000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-otgfs
#define DT_N_S_soc_S_otgfs_42040000_P_compatible_IDX_0_STRING_TOKEN st_stm32_otgfs
#define DT_N_S_soc_S_otgfs_42040000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_OTGFS
#define DT_N_S_soc_S_otgfs_42040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_42040000, compatible, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_42040000, compatible, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_42040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_42040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_compatible_LEN 1
#define DT_N_S_soc_S_otgfs_42040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names {"otgfs"}
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names_IDX_0 "otgfs"
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names_IDX_0_STRING_UNQUOTED otgfs
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names_IDX_0_STRING_TOKEN otgfs
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN OTGFS
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_otgfs_42040000, interrupt_names, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_otgfs_42040000, interrupt_names, 0)
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_otgfs_42040000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_otgfs_42040000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_otgfs_42040000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_wakeup_source 0
#define DT_N_S_soc_S_otgfs_42040000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_otgfs_42040000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_otgfs_42040000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rng@420c0800
 *
 * Node identifier: DT_N_S_soc_S_rng_420c0800
 *
 * Binding (compatible = st,stm32-rng):
 *   $ZEPHYR_BASE/dts/bindings/rng/st,stm32-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rng_420c0800_PATH "/soc/rng@420c0800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rng_420c0800_FULL_NAME "rng@420c0800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rng_420c0800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rng_420c0800_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rng_420c0800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rng_420c0800_ORD 63
#define DT_N_S_soc_S_rng_420c0800_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rng_420c0800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rng_420c0800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rng_420c0800_EXISTS 1
#define DT_N_INST_0_st_stm32_rng DT_N_S_soc_S_rng_420c0800
#define DT_N_NODELABEL_rng       DT_N_S_soc_S_rng_420c0800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rng_420c0800_REG_NUM 1
#define DT_N_S_soc_S_rng_420c0800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_REG_IDX_0_VAL_ADDRESS 1108084736 /* 0x420c0800 */
#define DT_N_S_soc_S_rng_420c0800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rng_420c0800_RANGES_NUM 0
#define DT_N_S_soc_S_rng_420c0800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rng_420c0800_IRQ_NUM 1
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_VAL_irq 94
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rng_420c0800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_COMPAT_MATCHES_st_stm32_rng 1
#define DT_N_S_soc_S_rng_420c0800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rng_420c0800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_COMPAT_MODEL_IDX_0 "stm32-rng"
#define DT_N_S_soc_S_rng_420c0800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rng_420c0800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rng_420c0800_P_reg {1108084736 /* 0x420c0800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rng_420c0800_P_reg_IDX_0 1108084736
#define DT_N_S_soc_S_rng_420c0800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rng_420c0800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_rng_420c0800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_420c0800, clocks, 0)
#define DT_N_S_soc_S_rng_420c0800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rng_420c0800, clocks, 0)
#define DT_N_S_soc_S_rng_420c0800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_420c0800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rng_420c0800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_clocks_LEN 1
#define DT_N_S_soc_S_rng_420c0800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_nist_config 16125184
#define DT_N_S_soc_S_rng_420c0800_P_nist_config_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_health_test_config 39598
#define DT_N_S_soc_S_rng_420c0800_P_health_test_config_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_status "okay"
#define DT_N_S_soc_S_rng_420c0800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rng_420c0800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rng_420c0800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rng_420c0800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rng_420c0800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rng_420c0800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rng_420c0800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rng_420c0800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_420c0800, status, 0)
#define DT_N_S_soc_S_rng_420c0800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rng_420c0800, status, 0)
#define DT_N_S_soc_S_rng_420c0800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_420c0800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rng_420c0800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_status_LEN 1
#define DT_N_S_soc_S_rng_420c0800_P_status_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_compatible {"st,stm32-rng"}
#define DT_N_S_soc_S_rng_420c0800_P_compatible_IDX_0 "st,stm32-rng"
#define DT_N_S_soc_S_rng_420c0800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rng
#define DT_N_S_soc_S_rng_420c0800_P_compatible_IDX_0_STRING_TOKEN st_stm32_rng
#define DT_N_S_soc_S_rng_420c0800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RNG
#define DT_N_S_soc_S_rng_420c0800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_420c0800, compatible, 0)
#define DT_N_S_soc_S_rng_420c0800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rng_420c0800, compatible, 0)
#define DT_N_S_soc_S_rng_420c0800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_420c0800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rng_420c0800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_420c0800_P_compatible_LEN 1
#define DT_N_S_soc_S_rng_420c0800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_interrupts {94 /* 0x5e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rng_420c0800_P_interrupts_IDX_0 94
#define DT_N_S_soc_S_rng_420c0800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rng_420c0800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_wakeup_source 0
#define DT_N_S_soc_S_rng_420c0800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rng_420c0800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rng_420c0800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@46007800
 *
 * Node identifier: DT_N_S_soc_S_rtc_46007800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/st,stm32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_46007800_PATH "/soc/rtc@46007800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_46007800_FULL_NAME "rtc@46007800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_46007800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_46007800_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_46007800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_46007800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_46007800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_46007800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_46007800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_46007800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_46007800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_46007800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_46007800_ORD 64
#define DT_N_S_soc_S_rtc_46007800_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_46007800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_46007800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_46007800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_46007800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_46007800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_46007800_REG_NUM 1
#define DT_N_S_soc_S_rtc_46007800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_REG_IDX_0_VAL_ADDRESS 1174435840 /* 0x46007800 */
#define DT_N_S_soc_S_rtc_46007800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_46007800_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_46007800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_46007800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_46007800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_rtc_46007800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_46007800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_46007800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rtc_46007800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_COMPAT_MODEL_IDX_0 "stm32-rtc"
#define DT_N_S_soc_S_rtc_46007800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_46007800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_46007800_P_reg {1174435840 /* 0x46007800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_46007800_P_reg_IDX_0 1174435840
#define DT_N_S_soc_S_rtc_46007800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_46007800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_interrupts {2 /* 0x2 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_46007800_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_rtc_46007800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_46007800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_46007800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_status "disabled"
#define DT_N_S_soc_S_rtc_46007800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_46007800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_46007800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_46007800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_46007800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_46007800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_46007800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_46007800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_46007800, status, 0)
#define DT_N_S_soc_S_rtc_46007800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_46007800, status, 0)
#define DT_N_S_soc_S_rtc_46007800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_46007800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_46007800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_46007800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_46007800_P_status_LEN 1
#define DT_N_S_soc_S_rtc_46007800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_46007800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_46007800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rtc
#define DT_N_S_soc_S_rtc_46007800_P_compatible_IDX_0_STRING_TOKEN st_stm32_rtc
#define DT_N_S_soc_S_rtc_46007800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RTC
#define DT_N_S_soc_S_rtc_46007800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_46007800, compatible, 0)
#define DT_N_S_soc_S_rtc_46007800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_46007800, compatible, 0)
#define DT_N_S_soc_S_rtc_46007800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_46007800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_46007800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_46007800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_46007800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_46007800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_rtc_46007800_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_rtc_46007800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_rtc_46007800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_46007800, clocks, 0)
#define DT_N_S_soc_S_rtc_46007800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_46007800, clocks, 0)
#define DT_N_S_soc_S_rtc_46007800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_46007800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_46007800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_46007800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_46007800_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_46007800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_46007800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_46007800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_46007800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rcc@46020c00/reset-controller
 *
 * Node identifier: DT_N_S_soc_S_rcc_46020c00_S_reset_controller
 *
 * Binding (compatible = st,stm32-rcc-rctl):
 *   $ZEPHYR_BASE/dts/bindings/reset/st,stm32-rcc-rctl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_PATH "/soc/rcc@46020c00/reset-controller"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_FULL_NAME "reset-controller"

/* Node parent (/soc/rcc@46020c00) identifier: */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_PARENT DT_N_S_soc_S_rcc_46020c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_ORD 65
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_REQUIRES_ORDS \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_SUPPORTS_ORDS \
	66, /* /soc/sdmmc@420c8000 */ \
	67, /* /soc/sdmmc@420c8c00 */ \
	68, /* /soc/serial@40004400 */ \
	71, /* /soc/serial@40004800 */ \
	72, /* /soc/serial@40004c00 */ \
	73, /* /soc/serial@40005000 */ \
	76, /* /soc/serial@40013800 */ \
	77, /* /soc/serial@46002400 */ \
	132, /* /soc/timers@40000000 */ \
	134, /* /soc/timers@40000400 */ \
	137, /* /soc/timers@40000800 */ \
	141, /* /soc/timers@40000c00 */ \
	144, /* /soc/timers@40001000 */ \
	146, /* /soc/timers@40001400 */ \
	148, /* /soc/timers@40012c00 */ \
	150, /* /soc/timers@40013400 */ \
	152, /* /soc/timers@40014000 */ \
	155, /* /soc/timers@40014400 */ \
	158, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc_rctl DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_NODELABEL_rctl           DT_N_S_soc_S_rcc_46020c00_S_reset_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_REG_NUM 0
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_COMPAT_MATCHES_st_stm32_rcc_rctl 1
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_COMPAT_MODEL_IDX_0 "stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_set_bit_to_deassert 0
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_set_bit_to_deassert_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible {"st,stm32-rcc-rctl"}
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible_IDX_0 "st,stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rcc-rctl
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible_IDX_0_STRING_TOKEN st_stm32_rcc_rctl
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RCC_RCTL
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_46020c00_S_reset_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sdmmc@420c8000
 *
 * Node identifier: DT_N_S_soc_S_sdmmc_420c8000
 *
 * Binding (compatible = st,stm32-sdmmc):
 *   $ZEPHYR_BASE/dts/bindings/mmc/st,stm32-sdmmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdmmc_420c8000_PATH "/soc/sdmmc@420c8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdmmc_420c8000_FULL_NAME "sdmmc@420c8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sdmmc_420c8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdmmc_420c8000_CHILD_IDX 42

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdmmc_420c8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdmmc_420c8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_420c8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_420c8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdmmc_420c8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdmmc_420c8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_420c8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_420c8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdmmc_420c8000_ORD 66
#define DT_N_S_soc_S_sdmmc_420c8000_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdmmc_420c8000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdmmc_420c8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdmmc_420c8000_EXISTS 1
#define DT_N_INST_0_st_stm32_sdmmc DT_N_S_soc_S_sdmmc_420c8000
#define DT_N_NODELABEL_sdmmc1      DT_N_S_soc_S_sdmmc_420c8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdmmc_420c8000_REG_NUM 1
#define DT_N_S_soc_S_sdmmc_420c8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_REG_IDX_0_VAL_ADDRESS 1108115456 /* 0x420c8000 */
#define DT_N_S_soc_S_sdmmc_420c8000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_sdmmc_420c8000_RANGES_NUM 0
#define DT_N_S_soc_S_sdmmc_420c8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdmmc_420c8000_IRQ_NUM 1
#define DT_N_S_soc_S_sdmmc_420c8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_IRQ_IDX_0_VAL_irq 78
#define DT_N_S_soc_S_sdmmc_420c8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sdmmc_420c8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_COMPAT_MATCHES_st_stm32_sdmmc 1
#define DT_N_S_soc_S_sdmmc_420c8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_sdmmc_420c8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_COMPAT_MODEL_IDX_0 "stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_420c8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdmmc_420c8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_0_VAL_bits 134217728
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_1_VAL_bus 14
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_1_VAL_bits 12004
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_420c8000, clocks, 0) \
	fn(DT_N_S_soc_S_sdmmc_420c8000, clocks, 1)
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_420c8000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_420c8000, clocks, 1)
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_420c8000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_420c8000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_420c8000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_420c8000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_LEN 2
#define DT_N_S_soc_S_sdmmc_420c8000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_reg {1108115456 /* 0x420c8000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_sdmmc_420c8000_P_reg_IDX_0 1108115456
#define DT_N_S_soc_S_sdmmc_420c8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_sdmmc_420c8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_sdmmc_420c8000_P_resets_IDX_0_VAL_id 3227
#define DT_N_S_soc_S_sdmmc_420c8000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_420c8000, resets, 0)
#define DT_N_S_soc_S_sdmmc_420c8000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_420c8000, resets, 0)
#define DT_N_S_soc_S_sdmmc_420c8000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_420c8000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_420c8000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8000_P_resets_LEN 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_resets_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_bus_width 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_bus_width_ENUM_IDX 0
#define DT_N_S_soc_S_sdmmc_420c8000_P_bus_width_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_bus_width_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_clk_div 0
#define DT_N_S_soc_S_sdmmc_420c8000_P_clk_div_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_idma 0
#define DT_N_S_soc_S_sdmmc_420c8000_P_idma_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_status "disabled"
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_420c8000, status, 0)
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_420c8000, status, 0)
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_420c8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_420c8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_LEN 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_status_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible {"st,stm32-sdmmc"}
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible_IDX_0 "st,stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-sdmmc
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible_IDX_0_STRING_TOKEN st_stm32_sdmmc
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SDMMC
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_420c8000, compatible, 0)
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_420c8000, compatible, 0)
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_420c8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_420c8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible_LEN 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_interrupts {78 /* 0x4e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sdmmc_420c8000_P_interrupts_IDX_0 78
#define DT_N_S_soc_S_sdmmc_420c8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sdmmc_420c8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_wakeup_source 0
#define DT_N_S_soc_S_sdmmc_420c8000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdmmc_420c8000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sdmmc@420c8c00
 *
 * Node identifier: DT_N_S_soc_S_sdmmc_420c8c00
 *
 * Binding (compatible = st,stm32-sdmmc):
 *   $ZEPHYR_BASE/dts/bindings/mmc/st,stm32-sdmmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdmmc_420c8c00_PATH "/soc/sdmmc@420c8c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdmmc_420c8c00_FULL_NAME "sdmmc@420c8c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sdmmc_420c8c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdmmc_420c8c00_CHILD_IDX 43

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdmmc_420c8c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdmmc_420c8c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_420c8c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_420c8c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdmmc_420c8c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdmmc_420c8c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_420c8c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_420c8c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdmmc_420c8c00_ORD 67
#define DT_N_S_soc_S_sdmmc_420c8c00_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdmmc_420c8c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdmmc_420c8c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdmmc_420c8c00_EXISTS 1
#define DT_N_INST_1_st_stm32_sdmmc DT_N_S_soc_S_sdmmc_420c8c00
#define DT_N_NODELABEL_sdmmc2      DT_N_S_soc_S_sdmmc_420c8c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdmmc_420c8c00_REG_NUM 1
#define DT_N_S_soc_S_sdmmc_420c8c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_REG_IDX_0_VAL_ADDRESS 1108118528 /* 0x420c8c00 */
#define DT_N_S_soc_S_sdmmc_420c8c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_sdmmc_420c8c00_RANGES_NUM 0
#define DT_N_S_soc_S_sdmmc_420c8c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdmmc_420c8c00_IRQ_NUM 1
#define DT_N_S_soc_S_sdmmc_420c8c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_IRQ_IDX_0_VAL_irq 79
#define DT_N_S_soc_S_sdmmc_420c8c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sdmmc_420c8c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_COMPAT_MATCHES_st_stm32_sdmmc 1
#define DT_N_S_soc_S_sdmmc_420c8c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_sdmmc_420c8c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_COMPAT_MODEL_IDX_0 "stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_420c8c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdmmc_420c8c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_1_VAL_bus 14
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_1_VAL_bits 12004
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_420c8c00, clocks, 0) \
	fn(DT_N_S_soc_S_sdmmc_420c8c00, clocks, 1)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_420c8c00, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_420c8c00, clocks, 1)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_420c8c00, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_420c8c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_420c8c00, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_420c8c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_LEN 2
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_reg {1108118528 /* 0x420c8c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_sdmmc_420c8c00_P_reg_IDX_0 1108118528
#define DT_N_S_soc_S_sdmmc_420c8c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_sdmmc_420c8c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_sdmmc_420c8c00_P_resets_IDX_0_VAL_id 3228
#define DT_N_S_soc_S_sdmmc_420c8c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_420c8c00, resets, 0)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_420c8c00, resets, 0)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_420c8c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_420c8c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_resets_LEN 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_bus_width 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_bus_width_ENUM_IDX 0
#define DT_N_S_soc_S_sdmmc_420c8c00_P_bus_width_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_bus_width_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clk_div 0
#define DT_N_S_soc_S_sdmmc_420c8c00_P_clk_div_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_idma 0
#define DT_N_S_soc_S_sdmmc_420c8c00_P_idma_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status "disabled"
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_420c8c00, status, 0)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_420c8c00, status, 0)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_420c8c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_420c8c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_LEN 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_status_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible {"st,stm32-sdmmc"}
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible_IDX_0 "st,stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-sdmmc
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_sdmmc
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SDMMC
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_420c8c00, compatible, 0)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_420c8c00, compatible, 0)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_420c8c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_420c8c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible_LEN 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_interrupts {79 /* 0x4f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sdmmc_420c8c00_P_interrupts_IDX_0 79
#define DT_N_S_soc_S_sdmmc_420c8c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sdmmc_420c8c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_wakeup_source 0
#define DT_N_S_soc_S_sdmmc_420c8c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdmmc_420c8c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdmmc_420c8c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004400
 *
 * Node identifier: DT_N_S_soc_S_serial_40004400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004400_PATH "/soc/serial@40004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004400_FULL_NAME "serial@40004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004400_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004400_ORD 68
#define DT_N_S_soc_S_serial_40004400_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004400_EXISTS 1
#define DT_N_INST_2_st_stm32_usart DT_N_S_soc_S_serial_40004400
#define DT_N_INST_2_st_stm32_uart  DT_N_S_soc_S_serial_40004400
#define DT_N_NODELABEL_usart2      DT_N_S_soc_S_serial_40004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004400_REG_NUM 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq 62
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40004400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004400_P_reg {1073759232 /* 0x40004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_VAL_id 3729
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, resets, 0)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, resets, 0)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts {62 /* 0x3e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0 62
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_single_wire 0
#define DT_N_S_soc_S_serial_40004400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_enable 0
#define DT_N_S_soc_S_serial_40004400_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40004400_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40004400_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_invert 0
#define DT_N_S_soc_S_serial_40004400_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status "disabled"
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, status, 0)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, status, 0)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40004400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/usart3_rx_pd9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_PATH "/soc/pin-controller@42020000/usart3_rx_pd9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FULL_NAME "usart3_rx_pd9"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_ORD 69
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_SUPPORTS_ORDS \
	71, /* /soc/serial@40004800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_EXISTS 1
#define DT_N_NODELABEL_usart3_rx_pd9 DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_pinmux 1831
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/usart3_tx_pd8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_PATH "/soc/pin-controller@42020000/usart3_tx_pd8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FULL_NAME "usart3_tx_pd8"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_ORD 70
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_SUPPORTS_ORDS \
	71, /* /soc/serial@40004800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_EXISTS 1
#define DT_N_NODELABEL_usart3_tx_pd8 DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_pinmux 1799
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004800
 *
 * Node identifier: DT_N_S_soc_S_serial_40004800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004800_PATH "/soc/serial@40004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004800_FULL_NAME "serial@40004800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004800_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004800_ORD 71
#define DT_N_S_soc_S_serial_40004800_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */ \
	69, /* /soc/pin-controller@42020000/usart3_rx_pd9 */ \
	70, /* /soc/pin-controller@42020000/usart3_tx_pd8 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004800_EXISTS 1
#define DT_N_INST_1_st_stm32_usart    DT_N_S_soc_S_serial_40004800
#define DT_N_INST_1_st_stm32_uart     DT_N_S_soc_S_serial_40004800
#define DT_N_NODELABEL_usart3         DT_N_S_soc_S_serial_40004800
#define DT_N_NODELABEL_arduino_serial DT_N_S_soc_S_serial_40004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004800_REG_NUM 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_ADDRESS 1073760256 /* 0x40004800 */
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq 63
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40004800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40004800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40004800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004800_P_reg {1073760256 /* 0x40004800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0 1073760256
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, clocks, 0)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, clocks, 0)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_VAL_id 3730
#define DT_N_S_soc_S_serial_40004800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, resets, 0)
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, resets, 0)
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts {63 /* 0x3f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0 63
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_single_wire 0
#define DT_N_S_soc_S_serial_40004800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004800_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_enable 0
#define DT_N_S_soc_S_serial_40004800_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40004800_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40004800_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_de_invert 0
#define DT_N_S_soc_S_serial_40004800_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_current_speed 115200
#define DT_N_S_soc_S_serial_40004800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status "okay"
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_40004800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, status, 0)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, status, 0)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_status_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40004800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004c00
 *
 * Node identifier: DT_N_S_soc_S_serial_40004c00
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004c00_PATH "/soc/serial@40004c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME "serial@40004c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004c00_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004c00_ORD 72
#define DT_N_S_soc_S_serial_40004c00_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004c00_EXISTS 1
#define DT_N_INST_3_st_stm32_uart DT_N_S_soc_S_serial_40004c00
#define DT_N_NODELABEL_uart4      DT_N_S_soc_S_serial_40004c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004c00_REG_NUM 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_ADDRESS 1073761280 /* 0x40004c00 */
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004c00_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004c00_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq 64
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40004c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004c00_P_reg {1073761280 /* 0x40004c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0 1073761280
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits 524288
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_VAL_id 3731
#define DT_N_S_soc_S_serial_40004c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, resets, 0)
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, resets, 0)
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts {64 /* 0x40 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0 64
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_single_wire 0
#define DT_N_S_soc_S_serial_40004c00_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004c00_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_enable 0
#define DT_N_S_soc_S_serial_40004c00_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40004c00_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40004c00_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_de_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status "disabled"
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40004c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, status, 0)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, status, 0)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_status_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40004c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/serial@40005000
 *
 * Node identifier: DT_N_S_soc_S_serial_40005000
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40005000_PATH "/soc/serial@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40005000_FULL_NAME "serial@40005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40005000_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40005000_ORD 73
#define DT_N_S_soc_S_serial_40005000_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40005000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40005000_EXISTS 1
#define DT_N_INST_4_st_stm32_uart DT_N_S_soc_S_serial_40005000
#define DT_N_NODELABEL_uart5      DT_N_S_soc_S_serial_40005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40005000_REG_NUM 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40005000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40005000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq 65
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_MODEL_IDX_0 "stm32-uart"
#define DT_N_S_soc_S_serial_40005000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40005000_P_reg {1073762304 /* 0x40005000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, clocks, 0)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, clocks, 0)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_VAL_id 3732
#define DT_N_S_soc_S_serial_40005000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, resets, 0)
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, resets, 0)
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts {65 /* 0x41 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0 65
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_single_wire 0
#define DT_N_S_soc_S_serial_40005000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40005000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40005000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40005000_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_enable 0
#define DT_N_S_soc_S_serial_40005000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40005000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40005000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_de_invert 0
#define DT_N_S_soc_S_serial_40005000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status "disabled"
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40005000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, status, 0)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, status, 0)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, compatible, 0)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40005000, compatible, 0)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40005000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/usart1_rx_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_PATH "/soc/pin-controller@42020000/usart1_rx_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_FULL_NAME "usart1_rx_pa10"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_ORD 74
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_SUPPORTS_ORDS \
	76, /* /soc/serial@40013800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pa10 DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_pinmux 327
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/usart1_tx_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_PATH "/soc/pin-controller@42020000/usart1_tx_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_FULL_NAME "usart1_tx_pa9"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_ORD 75
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_SUPPORTS_ORDS \
	76, /* /soc/serial@40013800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pa9 DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_pinmux 295
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@40013800
 *
 * Node identifier: DT_N_S_soc_S_serial_40013800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40013800_PATH "/soc/serial@40013800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40013800_FULL_NAME "serial@40013800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40013800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40013800_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40013800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40013800_ORD 76
#define DT_N_S_soc_S_serial_40013800_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40013800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */ \
	74, /* /soc/pin-controller@42020000/usart1_rx_pa10 */ \
	75, /* /soc/pin-controller@42020000/usart1_tx_pa9 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40013800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40013800_EXISTS 1
#define DT_N_INST_0_st_stm32_usart DT_N_S_soc_S_serial_40013800
#define DT_N_INST_0_st_stm32_uart  DT_N_S_soc_S_serial_40013800
#define DT_N_NODELABEL_usart1      DT_N_S_soc_S_serial_40013800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40013800_REG_NUM 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_ADDRESS 1073821696 /* 0x40013800 */
#define DT_N_S_soc_S_serial_40013800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40013800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40013800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40013800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq 61
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40013800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40013800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40013800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9
#define DT_N_S_soc_S_serial_40013800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40013800_P_reg {1073821696 /* 0x40013800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0 1073821696
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40013800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_serial_40013800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, clocks, 0)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, clocks, 0)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_VAL_id 3982
#define DT_N_S_soc_S_serial_40013800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, resets, 0)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, resets, 0)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts {61 /* 0x3d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0 61
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40013800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_single_wire 0
#define DT_N_S_soc_S_serial_40013800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40013800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40013800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40013800_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_enable 0
#define DT_N_S_soc_S_serial_40013800_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40013800_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40013800_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_de_invert 0
#define DT_N_S_soc_S_serial_40013800_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_current_speed 115200
#define DT_N_S_soc_S_serial_40013800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40013800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status "okay"
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40013800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_40013800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40013800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, status, 0)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, status, 0)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_status_LEN 1
#define DT_N_S_soc_S_serial_40013800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40013800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40013800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40013800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40013800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40013800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40013800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40013800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40013800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40013800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40013800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40013800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/serial@46002400
 *
 * Node identifier: DT_N_S_soc_S_serial_46002400
 *
 * Binding (compatible = st,stm32-lpuart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_46002400_PATH "/soc/serial@46002400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_46002400_FULL_NAME "serial@46002400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_46002400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_46002400_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_46002400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_46002400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_46002400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_46002400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_46002400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_46002400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_46002400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_46002400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_46002400_ORD 77
#define DT_N_S_soc_S_serial_46002400_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_46002400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_46002400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_46002400_EXISTS 1
#define DT_N_INST_0_st_stm32_lpuart DT_N_S_soc_S_serial_46002400
#define DT_N_INST_5_st_stm32_uart   DT_N_S_soc_S_serial_46002400
#define DT_N_NODELABEL_lpuart1      DT_N_S_soc_S_serial_46002400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_46002400_REG_NUM 1
#define DT_N_S_soc_S_serial_46002400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_REG_IDX_0_VAL_ADDRESS 1174414336 /* 0x46002400 */
#define DT_N_S_soc_S_serial_46002400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_46002400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_46002400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_46002400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_46002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_IRQ_IDX_0_VAL_irq 66
#define DT_N_S_soc_S_serial_46002400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_46002400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_COMPAT_MATCHES_st_stm32_lpuart 1
#define DT_N_S_soc_S_serial_46002400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_46002400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_COMPAT_MODEL_IDX_0 "stm32-lpuart"
#define DT_N_S_soc_S_serial_46002400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_46002400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_46002400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_46002400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_46002400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_46002400_P_reg {1174414336 /* 0x46002400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_46002400_P_reg_IDX_0 1174414336
#define DT_N_S_soc_S_serial_46002400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_46002400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_serial_46002400_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_serial_46002400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_serial_46002400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_46002400, clocks, 0)
#define DT_N_S_soc_S_serial_46002400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_46002400, clocks, 0)
#define DT_N_S_soc_S_serial_46002400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_46002400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_46002400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_46002400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_46002400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_46002400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_serial_46002400_P_resets_IDX_0_VAL_id 4102
#define DT_N_S_soc_S_serial_46002400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_46002400, resets, 0)
#define DT_N_S_soc_S_serial_46002400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_46002400, resets, 0)
#define DT_N_S_soc_S_serial_46002400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_46002400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_46002400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_46002400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_46002400_P_resets_LEN 1
#define DT_N_S_soc_S_serial_46002400_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_interrupts {66 /* 0x42 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_46002400_P_interrupts_IDX_0 66
#define DT_N_S_soc_S_serial_46002400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_46002400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_single_wire 0
#define DT_N_S_soc_S_serial_46002400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_46002400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_tx_invert 0
#define DT_N_S_soc_S_serial_46002400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_rx_invert 0
#define DT_N_S_soc_S_serial_46002400_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_de_enable 0
#define DT_N_S_soc_S_serial_46002400_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_de_assert_time 0
#define DT_N_S_soc_S_serial_46002400_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_46002400_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_de_invert 0
#define DT_N_S_soc_S_serial_46002400_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_46002400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_status "disabled"
#define DT_N_S_soc_S_serial_46002400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_46002400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_46002400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_46002400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_46002400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_46002400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_46002400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_46002400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_46002400, status, 0)
#define DT_N_S_soc_S_serial_46002400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_46002400, status, 0)
#define DT_N_S_soc_S_serial_46002400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_46002400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_46002400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_46002400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_46002400_P_status_LEN 1
#define DT_N_S_soc_S_serial_46002400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_compatible {"st,stm32-lpuart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_46002400_P_compatible_IDX_0 "st,stm32-lpuart"
#define DT_N_S_soc_S_serial_46002400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lpuart
#define DT_N_S_soc_S_serial_46002400_P_compatible_IDX_0_STRING_TOKEN st_stm32_lpuart
#define DT_N_S_soc_S_serial_46002400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPUART
#define DT_N_S_soc_S_serial_46002400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_46002400_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_46002400_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_46002400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_46002400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_46002400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_46002400, compatible, 1)
#define DT_N_S_soc_S_serial_46002400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_46002400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_46002400, compatible, 1)
#define DT_N_S_soc_S_serial_46002400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_46002400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_46002400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_46002400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_46002400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_46002400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_46002400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_46002400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_46002400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_46002400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_46002400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 78
#define DT_N_S_soc_S_spi_40003800_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_1_st_stm32h7_spi    DT_N_S_soc_S_spi_40003800
#define DT_N_INST_1_st_stm32_spi_fifo DT_N_S_soc_S_spi_40003800
#define DT_N_INST_1_st_stm32_spi      DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2           DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 60
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {60 /* 0x3c */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 60
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 2)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 2)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@46002000
 *
 * Node identifier: DT_N_S_soc_S_spi_46002000
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_46002000_PATH "/soc/spi@46002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_46002000_FULL_NAME "spi@46002000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_46002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_46002000_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_46002000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_46002000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_46002000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_46002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_46002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_46002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_46002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_46002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_46002000_ORD 79
#define DT_N_S_soc_S_spi_46002000_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_46002000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_46002000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_46002000_EXISTS 1
#define DT_N_INST_2_st_stm32h7_spi    DT_N_S_soc_S_spi_46002000
#define DT_N_INST_2_st_stm32_spi_fifo DT_N_S_soc_S_spi_46002000
#define DT_N_INST_2_st_stm32_spi      DT_N_S_soc_S_spi_46002000
#define DT_N_NODELABEL_spi3           DT_N_S_soc_S_spi_46002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_46002000_REG_NUM 1
#define DT_N_S_soc_S_spi_46002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_REG_IDX_0_VAL_ADDRESS 1174413312 /* 0x46002000 */
#define DT_N_S_soc_S_spi_46002000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_46002000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_46002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_46002000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_46002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_IRQ_IDX_0_VAL_irq 99
#define DT_N_S_soc_S_spi_46002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_46002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_46002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_46002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_46002000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_46002000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_46002000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_46002000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_46002000_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_46002000_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_46002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_46002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_46002000_P_reg {1174413312 /* 0x46002000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_46002000_P_reg_IDX_0 1174413312
#define DT_N_S_soc_S_spi_46002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_46002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_interrupts {99 /* 0x63 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_46002000_P_interrupts_IDX_0 99
#define DT_N_S_soc_S_spi_46002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_46002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_status "disabled"
#define DT_N_S_soc_S_spi_46002000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_46002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_46002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_46002000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_46002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_46002000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_46002000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_46002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_46002000, status, 0)
#define DT_N_S_soc_S_spi_46002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_46002000, status, 0)
#define DT_N_S_soc_S_spi_46002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_46002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_46002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_46002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_46002000_P_status_LEN 1
#define DT_N_S_soc_S_spi_46002000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_46002000_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_46002000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_46002000, compatible, 1) \
	fn(DT_N_S_soc_S_spi_46002000, compatible, 2)
#define DT_N_S_soc_S_spi_46002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_46002000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_46002000, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_46002000, compatible, 2)
#define DT_N_S_soc_S_spi_46002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_46002000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_46002000, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_46002000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_46002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_46002000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_46002000, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_46002000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_46002000_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_46002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_spi_46002000_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_spi_46002000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_spi_46002000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_46002000, clocks, 0)
#define DT_N_S_soc_S_spi_46002000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_46002000, clocks, 0)
#define DT_N_S_soc_S_spi_46002000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_46002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_46002000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_46002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_46002000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_46002000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_46002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_46002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_46002000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv8m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv8m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 80
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv8m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv8m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv8m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv8m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv8m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV8M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40009400
 *
 * Node identifier: DT_N_S_soc_S_timers_40009400
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40009400_PATH "/soc/timers@40009400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40009400_FULL_NAME "timers@40009400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40009400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40009400_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40009400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40009400_ORD 81
#define DT_N_S_soc_S_timers_40009400_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40009400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40009400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40009400_EXISTS 1
#define DT_N_INST_1_st_stm32_lptim DT_N_S_soc_S_timers_40009400
#define DT_N_NODELABEL_lptim2      DT_N_S_soc_S_timers_40009400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40009400_REG_NUM 1
#define DT_N_S_soc_S_timers_40009400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_REG_IDX_0_VAL_ADDRESS 1073779712 /* 0x40009400 */
#define DT_N_S_soc_S_timers_40009400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40009400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40009400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40009400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_irq 68
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40009400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40009400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40009400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_40009400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40009400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_40009400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40009400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40009400_P_st_prescaler 1
#define DT_N_S_soc_S_timers_40009400_P_st_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40009400_P_st_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_st_static_prescaler 1
#define DT_N_S_soc_S_timers_40009400_P_st_static_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_reg {1073779712 /* 0x40009400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40009400_P_reg_IDX_0 1073779712
#define DT_N_S_soc_S_timers_40009400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40009400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_VAL_bus 160
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_timers_40009400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40009400, clocks, 0)
#define DT_N_S_soc_S_timers_40009400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40009400, clocks, 0)
#define DT_N_S_soc_S_timers_40009400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40009400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40009400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40009400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_status "disabled"
#define DT_N_S_soc_S_timers_40009400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40009400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40009400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40009400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40009400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40009400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40009400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40009400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40009400, status, 0)
#define DT_N_S_soc_S_timers_40009400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40009400, status, 0)
#define DT_N_S_soc_S_timers_40009400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40009400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40009400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40009400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_40009400_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_40009400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lptim
#define DT_N_S_soc_S_timers_40009400_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_40009400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_40009400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40009400, compatible, 0)
#define DT_N_S_soc_S_timers_40009400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40009400, compatible, 0)
#define DT_N_S_soc_S_timers_40009400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40009400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40009400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40009400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_interrupts {68 /* 0x44 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40009400_P_interrupts_IDX_0 68
#define DT_N_S_soc_S_timers_40009400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40009400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40009400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40009400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40009400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40009400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40009400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40009400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40009400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40009400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@46004400
 *
 * Node identifier: DT_N_S_soc_S_timers_46004400
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_46004400_PATH "/soc/timers@46004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_46004400_FULL_NAME "timers@46004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_46004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_46004400_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_46004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_46004400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_46004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_46004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_46004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_46004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_46004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_46004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_46004400_ORD 82
#define DT_N_S_soc_S_timers_46004400_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_46004400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_46004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_46004400_EXISTS 1
#define DT_N_INST_0_st_stm32_lptim DT_N_S_soc_S_timers_46004400
#define DT_N_NODELABEL_lptim1      DT_N_S_soc_S_timers_46004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_46004400_REG_NUM 1
#define DT_N_S_soc_S_timers_46004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_REG_IDX_0_VAL_ADDRESS 1174422528 /* 0x46004400 */
#define DT_N_S_soc_S_timers_46004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_46004400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_46004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_46004400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_46004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_IRQ_IDX_0_VAL_irq 67
#define DT_N_S_soc_S_timers_46004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timers_46004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_IRQ_NAME_wakeup_VAL_irq DT_N_S_soc_S_timers_46004400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_46004400_IRQ_NAME_wakeup_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_IRQ_NAME_wakeup_VAL_priority DT_N_S_soc_S_timers_46004400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_46004400_IRQ_NAME_wakeup_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_46004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_46004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_46004400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_46004400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_46004400_P_st_prescaler 1
#define DT_N_S_soc_S_timers_46004400_P_st_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_timers_46004400_P_st_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_st_static_prescaler 1
#define DT_N_S_soc_S_timers_46004400_P_st_static_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_reg {1174422528 /* 0x46004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_46004400_P_reg_IDX_0 1174422528
#define DT_N_S_soc_S_timers_46004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_46004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_1_VAL_bus 11
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_1_VAL_bits 223976
#define DT_N_S_soc_S_timers_46004400_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004400, clocks, 0) \
	fn(DT_N_S_soc_S_timers_46004400, clocks, 1)
#define DT_N_S_soc_S_timers_46004400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_46004400, clocks, 1)
#define DT_N_S_soc_S_timers_46004400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_46004400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_46004400, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004400_P_clocks_LEN 2
#define DT_N_S_soc_S_timers_46004400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_status "okay"
#define DT_N_S_soc_S_timers_46004400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_46004400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_46004400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_46004400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_46004400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_46004400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_46004400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_46004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004400, status, 0)
#define DT_N_S_soc_S_timers_46004400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004400, status, 0)
#define DT_N_S_soc_S_timers_46004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004400_P_status_LEN 1
#define DT_N_S_soc_S_timers_46004400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_46004400_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_46004400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lptim
#define DT_N_S_soc_S_timers_46004400_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_46004400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_46004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004400, compatible, 0)
#define DT_N_S_soc_S_timers_46004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004400, compatible, 0)
#define DT_N_S_soc_S_timers_46004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_46004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_interrupts {67 /* 0x43 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timers_46004400_P_interrupts_IDX_0 67
#define DT_N_S_soc_S_timers_46004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timers_46004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names {"wakeup"}
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names_IDX_0 "wakeup"
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names_IDX_0_STRING_UNQUOTED wakeup
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names_IDX_0_STRING_TOKEN wakeup
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN WAKEUP
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_46004400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_46004400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_46004400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_46004400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@46004800
 *
 * Node identifier: DT_N_S_soc_S_timers_46004800
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_46004800_PATH "/soc/timers@46004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_46004800_FULL_NAME "timers@46004800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_46004800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_46004800_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_46004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_46004800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_46004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_46004800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_46004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_46004800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_46004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_46004800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_46004800_ORD 83
#define DT_N_S_soc_S_timers_46004800_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_46004800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_46004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_46004800_EXISTS 1
#define DT_N_INST_2_st_stm32_lptim DT_N_S_soc_S_timers_46004800
#define DT_N_NODELABEL_lptim3      DT_N_S_soc_S_timers_46004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_46004800_REG_NUM 1
#define DT_N_S_soc_S_timers_46004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_REG_IDX_0_VAL_ADDRESS 1174423552 /* 0x46004800 */
#define DT_N_S_soc_S_timers_46004800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_46004800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_46004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_46004800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_46004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_IRQ_IDX_0_VAL_irq 98
#define DT_N_S_soc_S_timers_46004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_46004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_46004800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_46004800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_46004800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_46004800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_46004800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_46004800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_46004800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_46004800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_46004800_P_st_prescaler 1
#define DT_N_S_soc_S_timers_46004800_P_st_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_timers_46004800_P_st_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_st_static_prescaler 1
#define DT_N_S_soc_S_timers_46004800_P_st_static_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_reg {1174423552 /* 0x46004800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_46004800_P_reg_IDX_0 1174423552
#define DT_N_S_soc_S_timers_46004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_46004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_46004800_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_timers_46004800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_timers_46004800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004800, clocks, 0)
#define DT_N_S_soc_S_timers_46004800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004800, clocks, 0)
#define DT_N_S_soc_S_timers_46004800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_46004800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_status "disabled"
#define DT_N_S_soc_S_timers_46004800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_46004800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_46004800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_46004800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_46004800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_46004800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_46004800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_46004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004800, status, 0)
#define DT_N_S_soc_S_timers_46004800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004800, status, 0)
#define DT_N_S_soc_S_timers_46004800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004800_P_status_LEN 1
#define DT_N_S_soc_S_timers_46004800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_46004800_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_46004800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lptim
#define DT_N_S_soc_S_timers_46004800_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_46004800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_46004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004800, compatible, 0)
#define DT_N_S_soc_S_timers_46004800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004800, compatible, 0)
#define DT_N_S_soc_S_timers_46004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_46004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_interrupts {98 /* 0x62 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_46004800_P_interrupts_IDX_0 98
#define DT_N_S_soc_S_timers_46004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_46004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_46004800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_46004800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_46004800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_46004800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@46004c00
 *
 * Node identifier: DT_N_S_soc_S_timers_46004c00
 *
 * Binding (compatible = st,stm32-lptim):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-lptim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_46004c00_PATH "/soc/timers@46004c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_46004c00_FULL_NAME "timers@46004c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_46004c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_46004c00_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_46004c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_46004c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_46004c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_46004c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_46004c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_46004c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_46004c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_46004c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_46004c00_ORD 84
#define DT_N_S_soc_S_timers_46004c00_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_46004c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_46004c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_46004c00_EXISTS 1
#define DT_N_INST_3_st_stm32_lptim DT_N_S_soc_S_timers_46004c00
#define DT_N_NODELABEL_lptim4      DT_N_S_soc_S_timers_46004c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_46004c00_REG_NUM 1
#define DT_N_S_soc_S_timers_46004c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_REG_IDX_0_VAL_ADDRESS 1174424576 /* 0x46004c00 */
#define DT_N_S_soc_S_timers_46004c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_46004c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_46004c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_46004c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_46004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_IRQ_IDX_0_VAL_irq 110
#define DT_N_S_soc_S_timers_46004c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_46004c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_46004c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_46004c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_46004c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_46004c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_COMPAT_MATCHES_st_stm32_lptim 1
#define DT_N_S_soc_S_timers_46004c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_46004c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_COMPAT_MODEL_IDX_0 "stm32-lptim"
#define DT_N_S_soc_S_timers_46004c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_46004c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_46004c00_P_st_prescaler 1
#define DT_N_S_soc_S_timers_46004c00_P_st_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_timers_46004c00_P_st_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_st_static_prescaler 1
#define DT_N_S_soc_S_timers_46004c00_P_st_static_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_reg {1174424576 /* 0x46004c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_46004c00_P_reg_IDX_0 1174424576
#define DT_N_S_soc_S_timers_46004c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_46004c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_46004c00_P_clocks_IDX_0_VAL_bus 168
#define DT_N_S_soc_S_timers_46004c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_timers_46004c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004c00, clocks, 0)
#define DT_N_S_soc_S_timers_46004c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004c00, clocks, 0)
#define DT_N_S_soc_S_timers_46004c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_46004c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_status "disabled"
#define DT_N_S_soc_S_timers_46004c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_46004c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_46004c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_46004c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_46004c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_46004c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_46004c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_46004c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004c00, status, 0)
#define DT_N_S_soc_S_timers_46004c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004c00, status, 0)
#define DT_N_S_soc_S_timers_46004c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004c00_P_status_LEN 1
#define DT_N_S_soc_S_timers_46004c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_compatible {"st,stm32-lptim"}
#define DT_N_S_soc_S_timers_46004c00_P_compatible_IDX_0 "st,stm32-lptim"
#define DT_N_S_soc_S_timers_46004c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-lptim
#define DT_N_S_soc_S_timers_46004c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_lptim
#define DT_N_S_soc_S_timers_46004c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_LPTIM
#define DT_N_S_soc_S_timers_46004c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004c00, compatible, 0)
#define DT_N_S_soc_S_timers_46004c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004c00, compatible, 0)
#define DT_N_S_soc_S_timers_46004c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_46004c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_interrupts {110 /* 0x6e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_46004c00_P_interrupts_IDX_0 110
#define DT_N_S_soc_S_timers_46004c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_46004c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_46004c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_46004c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_46004c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_46004c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_46004c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_46004c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_46004c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_46004c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ucpd@4000dc00
 *
 * Node identifier: DT_N_S_soc_S_ucpd_4000dc00
 *
 * Binding (compatible = st,stm32-ucpd):
 *   $ZEPHYR_BASE/dts/bindings/tcpc/st,stm32-ucpd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ucpd_4000dc00_PATH "/soc/ucpd@4000dc00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ucpd_4000dc00_FULL_NAME "ucpd@4000dc00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ucpd_4000dc00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ucpd_4000dc00_CHILD_IDX 48

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ucpd_4000dc00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ucpd_4000dc00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ucpd_4000dc00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ucpd_4000dc00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ucpd_4000dc00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ucpd_4000dc00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ucpd_4000dc00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ucpd_4000dc00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ucpd_4000dc00_ORD 85
#define DT_N_S_soc_S_ucpd_4000dc00_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ucpd_4000dc00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ucpd_4000dc00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ucpd_4000dc00_EXISTS 1
#define DT_N_INST_0_st_stm32_ucpd DT_N_S_soc_S_ucpd_4000dc00
#define DT_N_NODELABEL_ucpd1      DT_N_S_soc_S_ucpd_4000dc00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ucpd_4000dc00_REG_NUM 1
#define DT_N_S_soc_S_ucpd_4000dc00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_REG_IDX_0_VAL_ADDRESS 1073798144 /* 0x4000dc00 */
#define DT_N_S_soc_S_ucpd_4000dc00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_ucpd_4000dc00_RANGES_NUM 0
#define DT_N_S_soc_S_ucpd_4000dc00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ucpd_4000dc00_IRQ_NUM 1
#define DT_N_S_soc_S_ucpd_4000dc00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_IRQ_IDX_0_VAL_irq 106
#define DT_N_S_soc_S_ucpd_4000dc00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ucpd_4000dc00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_COMPAT_MATCHES_st_stm32_ucpd 1
#define DT_N_S_soc_S_ucpd_4000dc00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_ucpd_4000dc00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_COMPAT_MODEL_IDX_0 "stm32-ucpd"
#define DT_N_S_soc_S_ucpd_4000dc00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ucpd_4000dc00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ucpd_4000dc00_P_reg {1073798144 /* 0x4000dc00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_ucpd_4000dc00_P_reg_IDX_0 1073798144
#define DT_N_S_soc_S_ucpd_4000dc00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_ucpd_4000dc00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_reg_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_IDX_0_VAL_bits 8388608
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ucpd_4000dc00, clocks, 0)
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ucpd_4000dc00, clocks, 0)
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ucpd_4000dc00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ucpd_4000dc00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_LEN 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_interrupts {106 /* 0x6a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ucpd_4000dc00_P_interrupts_IDX_0 106
#define DT_N_S_soc_S_ucpd_4000dc00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ucpd_4000dc00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_psc_ucpdclk 2
#define DT_N_S_soc_S_ucpd_4000dc00_P_psc_ucpdclk_ENUM_IDX 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_psc_ucpdclk_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_psc_ucpdclk_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_ifrgap 17
#define DT_N_S_soc_S_ucpd_4000dc00_P_ifrgap_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_transwin 8
#define DT_N_S_soc_S_ucpd_4000dc00_P_transwin_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_hbitclkdiv 14
#define DT_N_S_soc_S_ucpd_4000dc00_P_hbitclkdiv_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_dead_battery 0
#define DT_N_S_soc_S_ucpd_4000dc00_P_dead_battery_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_status "disabled"
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ucpd_4000dc00, status, 0)
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ucpd_4000dc00, status, 0)
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ucpd_4000dc00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ucpd_4000dc00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_LEN 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_status_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible {"st,stm32-ucpd"}
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible_IDX_0 "st,stm32-ucpd"
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-ucpd
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible_IDX_0_STRING_TOKEN st_stm32_ucpd
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_UCPD
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ucpd_4000dc00, compatible, 0)
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ucpd_4000dc00, compatible, 0)
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ucpd_4000dc00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ucpd_4000dc00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible_LEN 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_wakeup_source 0
#define DT_N_S_soc_S_ucpd_4000dc00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ucpd_4000dc00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ucpd_4000dc00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-window-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002c00_PATH "/soc/watchdog@40002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME "watchdog@40002c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002c00_ORD 86
#define DT_N_S_soc_S_watchdog_40002c00_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg1                 DT_N_S_soc_S_watchdog_40002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_watchdog_40002c00_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0 "stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 4096
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-window-watchdog
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_window_watchdog
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WINDOW_WATCHDOG
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 87
#define DT_N_S_soc_S_watchdog_40003000_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_ALIAS_watchdog0          DT_N_S_soc_S_watchdog_40003000
#define DT_N_INST_0_st_stm32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_iwdg           DT_N_S_soc_S_watchdog_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_st_stm32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0 "stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"st,stm32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "st,stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_TOKEN st_stm32_watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WATCHDOG
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/st,stm32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_PATH "/soc/flash-controller@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_FULL_NAME "flash-controller@40022000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_ORD 88
#define DT_N_S_soc_S_flash_controller_40022000_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_SUPPORTS_ORDS \
	89, /* /soc/flash-controller@40022000/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_40022000
#define DT_N_INST_0_st_stm32l5_flash_controller DT_N_S_soc_S_flash_controller_40022000
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_flash_controller_40022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_0 "stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MATCHES_st_stm32l5_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_COMPAT_MODEL_IDX_1 "stm32l5-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_P_st_rdp1_enable_byte 85
#define DT_N_S_soc_S_flash_controller_40022000_P_st_rdp1_enable_byte_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg {1073881088 /* 0x40022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible {"st,stm32-flash-controller", "st,stm32l5-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-flash-controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_TOKEN st_stm32_flash_controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1 "st,stm32l5-flash-controller"
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32l5-flash-controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_TOKEN st_stm32l5_flash_controller
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32L5_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts {6 /* 0x6 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40022000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
 *
 * Binding (compatible = st,stm32-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/st,stm32-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PATH "/soc/flash-controller@40022000/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FULL_NAME "flash@8000000"

/* Node parent (/soc/flash-controller@40022000) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_40022000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_ORD 89
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@40022000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_SUPPORTS_ORDS \
	90, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_st_stm32_nv_flash DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_INST_0_soc_nv_flash      DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_N_NODELABEL_flash0         DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MATCHES_st_stm32_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MODEL_IDX_0 "stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_max_erase_time 5
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_max_erase_time_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size 8192
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size 16
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible {"st,stm32-nv-flash", "soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0 "st,stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-nv-flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_nv_flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 2097152 /* 0x200000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_1 2097152
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PATH "/soc/flash-controller@40022000/flash@8000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@40022000/flash@8000000) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_ORD 90
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_REQUIRES_ORDS \
	89, /* /soc/flash-controller@40022000/flash@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_SUPPORTS_ORDS \
	91, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@0 */ \
	92, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@10000 */ \
	93, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@78000 */ \
	94, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@e0000 */ \
	95, /* /soc/flash-controller@40022000/flash@8000000/partitions/partition@f0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_ORD 91
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REQUIRES_ORDS \
	90, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_IDX_0 "mcuboot"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@10000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@10000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FULL_NAME "partition@10000"

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_ORD 92
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_REQUIRES_ORDS \
	90, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_REG_IDX_0_VAL_ADDRESS 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_REG_IDX_0_VAL_SIZE 425984 /* 0x68000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_IDX_0 "image-0"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg {65536 /* 0x10000 */, 425984 /* 0x68000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg_IDX_0 65536
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg_IDX_1 425984
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@78000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@78000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_FULL_NAME "partition@78000"

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_ORD 93
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_REQUIRES_ORDS \
	90, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_REG_IDX_0_VAL_ADDRESS 491520 /* 0x78000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_REG_IDX_0_VAL_SIZE 425984 /* 0x68000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label "image-1"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label_IDX_0 "image-1"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_reg {491520 /* 0x78000 */, 425984 /* 0x68000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_reg_IDX_0 491520
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_reg_IDX_1 425984
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@e0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@e0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_FULL_NAME "partition@e0000"

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_ORD 94
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_REQUIRES_ORDS \
	90, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_REG_IDX_0_VAL_ADDRESS 917504 /* 0xe0000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label "image-scratch"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label_STRING_UNQUOTED image-scratch
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label_IDX_0 "image-scratch"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_reg {917504 /* 0xe0000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_reg_IDX_0 917504
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40022000/flash@8000000/partitions/partition@f0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_PATH "/soc/flash-controller@40022000/flash@8000000/partitions/partition@f0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_FULL_NAME "partition@f0000"

/* Node parent (/soc/flash-controller@40022000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_PARENT DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_ORD 95
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_REQUIRES_ORDS \
	90, /* /soc/flash-controller@40022000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_REG_IDX_0_VAL_ADDRESS 983040 /* 0xf0000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000, label, 0)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_reg {983040 /* 0xf0000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_reg_IDX_0 983040
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/i2c2_scl_ph4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_PATH "/soc/pin-controller@42020000/i2c2_scl_ph4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_FULL_NAME "i2c2_scl_ph4"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_ORD 96
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_SUPPORTS_ORDS \
	98, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_EXISTS 1
#define DT_N_NODELABEL_i2c2_scl_ph4 DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_pinmux 3716
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/i2c2_sda_ph5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_PATH "/soc/pin-controller@42020000/i2c2_sda_ph5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_FULL_NAME "i2c2_sda_ph5"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_ORD 97
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_SUPPORTS_ORDS \
	98, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_EXISTS 1
#define DT_N_NODELABEL_i2c2_sda_ph5 DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_pinmux 3748
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = st,stm32-i2c-v2):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_PATH "/soc/i2c@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME "i2c@40005800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_ORD 98
#define DT_N_S_soc_S_i2c_40005800_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	96, /* /soc/pin-controller@42020000/i2c2_scl_ph4 */ \
	97, /* /soc/pin-controller@42020000/i2c2_sda_ph5 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_SUPPORTS_ORDS \
	99, /* /soc/i2c@40005800/hts221@5f */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v2 DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c2         DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 57
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq 58
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_st_stm32_i2c_v2 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0 "stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {57 /* 0x39 */, 0 /* 0x0 */, 58 /* 0x3a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 57
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2 58
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "okay"
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"st,stm32-i2c-v2"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "st,stm32-i2c-v2"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V2
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800/hts221@5f
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800_S_hts221_5f
 *
 * Binding (compatible = st,hts221):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,hts221-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_PATH "/soc/i2c@40005800/hts221@5f"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FULL_NAME "hts221@5f"

/* Node parent (/soc/i2c@40005800) identifier: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_PARENT DT_N_S_soc_S_i2c_40005800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_ORD 99
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_REQUIRES_ORDS \
	98, /* /soc/i2c@40005800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_EXISTS 1
#define DT_N_INST_0_st_hts221 DT_N_S_soc_S_i2c_40005800_S_hts221_5f

/* Bus info (controller: '/soc/i2c@40005800', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_BUS DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_REG_IDX_0_VAL_ADDRESS 95 /* 0x5f */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_COMPAT_MATCHES_st_hts221 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_COMPAT_MODEL_IDX_0 "hts221"
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg {95 /* 0x5f */}
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg_IDX_0 95
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible {"st,hts221"}
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_IDX_0 "st,hts221"
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_IDX_0_STRING_UNQUOTED st,hts221
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_IDX_0_STRING_TOKEN st_hts221
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_HTS221
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005800_S_hts221_5f_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory-controller@420d0400
 *
 * Node identifier: DT_N_S_soc_S_memory_controller_420d0400
 *
 * Binding (compatible = st,stm32-fmc):
 *   $ZEPHYR_BASE/dts/bindings/memory-controllers/st,stm32-fmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_controller_420d0400_PATH "/soc/memory-controller@420d0400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_controller_420d0400_FULL_NAME "memory-controller@420d0400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_controller_420d0400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_controller_420d0400_CHILD_IDX 50

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_controller_420d0400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram)
#define DT_N_S_soc_S_memory_controller_420d0400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram)
#define DT_N_S_soc_S_memory_controller_420d0400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_controller_420d0400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_controller_420d0400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_controller_420d0400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_controller_420d0400_ORD 100
#define DT_N_S_soc_S_memory_controller_420d0400_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_controller_420d0400_REQUIRES_ORDS \
	4, /* /soc */ \
	9, /* /soc/rcc@46020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_controller_420d0400_SUPPORTS_ORDS \
	101, /* /soc/memory-controller@420d0400/sram */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_controller_420d0400_EXISTS 1
#define DT_N_INST_0_st_stm32_fmc DT_N_S_soc_S_memory_controller_420d0400
#define DT_N_NODELABEL_fmc       DT_N_S_soc_S_memory_controller_420d0400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_controller_420d0400_REG_NUM 1
#define DT_N_S_soc_S_memory_controller_420d0400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_REG_IDX_0_VAL_ADDRESS 1108149248 /* 0x420d0400 */
#define DT_N_S_soc_S_memory_controller_420d0400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_memory_controller_420d0400_RANGES_NUM 0
#define DT_N_S_soc_S_memory_controller_420d0400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_controller_420d0400_IRQ_NUM 0
#define DT_N_S_soc_S_memory_controller_420d0400_COMPAT_MATCHES_st_stm32_fmc 1
#define DT_N_S_soc_S_memory_controller_420d0400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_memory_controller_420d0400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_COMPAT_MODEL_IDX_0 "stm32-fmc"
#define DT_N_S_soc_S_memory_controller_420d0400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_controller_420d0400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_controller_420d0400_P_reg {1108149248 /* 0x420d0400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_memory_controller_420d0400_P_reg_IDX_0 1108149248
#define DT_N_S_soc_S_memory_controller_420d0400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_memory_controller_420d0400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_IDX_0_VAL_bus 144
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_420d0400, clocks, 0)
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_controller_420d0400, clocks, 0)
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_420d0400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_controller_420d0400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_LEN 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_status "disabled"
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_420d0400, status, 0)
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_controller_420d0400, status, 0)
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_420d0400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_controller_420d0400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_LEN 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_status_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible {"st,stm32-fmc"}
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible_IDX_0 "st,stm32-fmc"
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-fmc
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible_IDX_0_STRING_TOKEN st_stm32_fmc
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FMC
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_420d0400, compatible, 0)
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_controller_420d0400, compatible, 0)
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_420d0400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_controller_420d0400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_wakeup_source 0
#define DT_N_S_soc_S_memory_controller_420d0400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_controller_420d0400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory-controller@420d0400/sram
 *
 * Node identifier: DT_N_S_soc_S_memory_controller_420d0400_S_sram
 *
 * Binding (compatible = st,stm32-fmc-nor-psram):
 *   $ZEPHYR_BASE/dts/bindings/memory-controllers/st,stm32-fmc-nor-psram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_PATH "/soc/memory-controller@420d0400/sram"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_FULL_NAME "sram"

/* Node parent (/soc/memory-controller@420d0400) identifier: */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_PARENT DT_N_S_soc_S_memory_controller_420d0400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_ORD 101
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_REQUIRES_ORDS \
	100, /* /soc/memory-controller@420d0400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_EXISTS 1
#define DT_N_INST_0_st_stm32_fmc_nor_psram DT_N_S_soc_S_memory_controller_420d0400_S_sram

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_REG_NUM 0
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_RANGES_NUM 0
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_IRQ_NUM 0
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_COMPAT_MATCHES_st_stm32_fmc_nor_psram 1
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_COMPAT_MODEL_IDX_0 "stm32-fmc-nor-psram"
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status "disabled"
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram, status, 0)
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram, status, 0)
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_LEN 1
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_status_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible {"st,stm32-fmc-nor-psram"}
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible_IDX_0 "st,stm32-fmc-nor-psram"
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-fmc-nor-psram
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible_IDX_0_STRING_TOKEN st_stm32_fmc_nor_psram
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FMC_NOR_PSRAM
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram, compatible, 0)
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram, compatible, 0)
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_wakeup_source 0
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_controller_420d0400_S_sram_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/octospim_p2_clk_pf4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_PATH "/soc/pin-controller@42020000/octospim_p2_clk_pf4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_FULL_NAME "octospim_p2_clk_pf4"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_ORD 102
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_SUPPORTS_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_EXISTS 1
#define DT_N_NODELABEL_octospim_p2_clk_pf4 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_pinmux 2693
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/octospim_p2_dqs_pf12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_PATH "/soc/pin-controller@42020000/octospim_p2_dqs_pf12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_FULL_NAME "octospim_p2_dqs_pf12"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_ORD 103
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_SUPPORTS_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_EXISTS 1
#define DT_N_NODELABEL_octospim_p2_dqs_pf12 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_pinmux 2949
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/octospim_p2_io0_pf0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_PATH "/soc/pin-controller@42020000/octospim_p2_io0_pf0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_FULL_NAME "octospim_p2_io0_pf0"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_ORD 104
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_SUPPORTS_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_EXISTS 1
#define DT_N_NODELABEL_octospim_p2_io0_pf0 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_pinmux 2565
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/octospim_p2_io1_pf1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_PATH "/soc/pin-controller@42020000/octospim_p2_io1_pf1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_FULL_NAME "octospim_p2_io1_pf1"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_ORD 105
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_SUPPORTS_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_EXISTS 1
#define DT_N_NODELABEL_octospim_p2_io1_pf1 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_pinmux 2597
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/octospim_p2_io2_pf2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_PATH "/soc/pin-controller@42020000/octospim_p2_io2_pf2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_FULL_NAME "octospim_p2_io2_pf2"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_ORD 106
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_ORD_STR_SORTABLE 00106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_SUPPORTS_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_EXISTS 1
#define DT_N_NODELABEL_octospim_p2_io2_pf2 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_pinmux 2629
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/octospim_p2_io3_pf3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_PATH "/soc/pin-controller@42020000/octospim_p2_io3_pf3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_FULL_NAME "octospim_p2_io3_pf3"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_ORD 107
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_ORD_STR_SORTABLE 00107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_SUPPORTS_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_EXISTS 1
#define DT_N_NODELABEL_octospim_p2_io3_pf3 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_pinmux 2661
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/octospim_p2_io4_ph9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_PATH "/soc/pin-controller@42020000/octospim_p2_io4_ph9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_FULL_NAME "octospim_p2_io4_ph9"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_ORD 108
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_ORD_STR_SORTABLE 00108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_SUPPORTS_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_EXISTS 1
#define DT_N_NODELABEL_octospim_p2_io4_ph9 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_pinmux 3877
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/octospim_p2_io5_ph10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_PATH "/soc/pin-controller@42020000/octospim_p2_io5_ph10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_FULL_NAME "octospim_p2_io5_ph10"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_ORD 109
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_ORD_STR_SORTABLE 00109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_SUPPORTS_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_EXISTS 1
#define DT_N_NODELABEL_octospim_p2_io5_ph10 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_pinmux 3909
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/octospim_p2_io6_ph11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_PATH "/soc/pin-controller@42020000/octospim_p2_io6_ph11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_FULL_NAME "octospim_p2_io6_ph11"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_ORD 110
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_ORD_STR_SORTABLE 00110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_SUPPORTS_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_EXISTS 1
#define DT_N_NODELABEL_octospim_p2_io6_ph11 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_pinmux 3941
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/octospim_p2_io7_ph12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_PATH "/soc/pin-controller@42020000/octospim_p2_io7_ph12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_FULL_NAME "octospim_p2_io7_ph12"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_ORD 111
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_ORD_STR_SORTABLE 00111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_SUPPORTS_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_EXISTS 1
#define DT_N_NODELABEL_octospim_p2_io7_ph12 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_pinmux 3973
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/octospim_p2_ncs_pi5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_PATH "/soc/pin-controller@42020000/octospim_p2_ncs_pi5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_FULL_NAME "octospim_p2_ncs_pi5"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_ORD 112
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_ORD_STR_SORTABLE 00112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_SUPPORTS_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_EXISTS 1
#define DT_N_NODELABEL_octospim_p2_ncs_pi5 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_pinmux 4261
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/octospi@420d2400
 *
 * Node identifier: DT_N_S_soc_S_octospi_420d2400
 *
 * Binding (compatible = st,stm32-ospi):
 *   $ZEPHYR_BASE/dts/bindings/ospi/st,stm32-ospi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_octospi_420d2400_PATH "/soc/octospi@420d2400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_octospi_420d2400_FULL_NAME "octospi@420d2400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_octospi_420d2400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_octospi_420d2400_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_octospi_420d2400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0)
#define DT_N_S_soc_S_octospi_420d2400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0)
#define DT_N_S_soc_S_octospi_420d2400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0)
#define DT_N_S_soc_S_octospi_420d2400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0)
#define DT_N_S_soc_S_octospi_420d2400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_octospi_420d2400_ORD 113
#define DT_N_S_soc_S_octospi_420d2400_ORD_STR_SORTABLE 00113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_octospi_420d2400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	102, /* /soc/pin-controller@42020000/octospim_p2_clk_pf4 */ \
	103, /* /soc/pin-controller@42020000/octospim_p2_dqs_pf12 */ \
	104, /* /soc/pin-controller@42020000/octospim_p2_io0_pf0 */ \
	105, /* /soc/pin-controller@42020000/octospim_p2_io1_pf1 */ \
	106, /* /soc/pin-controller@42020000/octospim_p2_io2_pf2 */ \
	107, /* /soc/pin-controller@42020000/octospim_p2_io3_pf3 */ \
	108, /* /soc/pin-controller@42020000/octospim_p2_io4_ph9 */ \
	109, /* /soc/pin-controller@42020000/octospim_p2_io5_ph10 */ \
	110, /* /soc/pin-controller@42020000/octospim_p2_io6_ph11 */ \
	111, /* /soc/pin-controller@42020000/octospim_p2_io7_ph12 */ \
	112, /* /soc/pin-controller@42020000/octospim_p2_ncs_pi5 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_octospi_420d2400_SUPPORTS_ORDS \
	114, /* /soc/octospi@420d2400/ospi-nor-flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_octospi_420d2400_EXISTS 1
#define DT_N_INST_0_st_stm32_ospi DT_N_S_soc_S_octospi_420d2400
#define DT_N_NODELABEL_octospi2   DT_N_S_soc_S_octospi_420d2400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_octospi_420d2400_REG_NUM 1
#define DT_N_S_soc_S_octospi_420d2400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_REG_IDX_0_VAL_ADDRESS 1108157440 /* 0x420d2400 */
#define DT_N_S_soc_S_octospi_420d2400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_octospi_420d2400_RANGES_NUM 0
#define DT_N_S_soc_S_octospi_420d2400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_octospi_420d2400_IRQ_NUM 1
#define DT_N_S_soc_S_octospi_420d2400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_IRQ_IDX_0_VAL_irq 120
#define DT_N_S_soc_S_octospi_420d2400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_octospi_420d2400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_COMPAT_MATCHES_st_stm32_ospi 1
#define DT_N_S_soc_S_octospi_420d2400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_octospi_420d2400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_COMPAT_MODEL_IDX_0 "stm32-ospi"
#define DT_N_S_soc_S_octospi_420d2400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NUM 1
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX_4_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX_5_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX_6_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX_7_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX_8_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX_9_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12
#define DT_N_S_soc_S_octospi_420d2400_PINCTRL_NAME_default_IDX_10_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12

/* Generic property macros: */
#define DT_N_S_soc_S_octospi_420d2400_P_reg {1108157440 /* 0x420d2400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_octospi_420d2400_P_reg_IDX_0 1108157440
#define DT_N_S_soc_S_octospi_420d2400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_octospi_420d2400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_reg_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_interrupts {120 /* 0x78 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_octospi_420d2400_P_interrupts_IDX_0 120
#define DT_N_S_soc_S_octospi_420d2400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_octospi_420d2400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_4 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_4_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_4_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_5 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_5_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_5_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_6 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_6_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_6_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_7 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_7_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_7_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_8 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_8_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_8_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_9 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_9_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_9_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_10 DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_10_PH DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_IDX_10_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 3) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 4) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 5) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 6) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 7) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 8) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 9) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 10)
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 10)
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 10, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_0, 10, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_LEN 11
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_names, 0)
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_names, 0)
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_octospi_420d2400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names {"ospix", "ospi-ker", "ospi-mgr"}
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_0 "ospix"
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_0_STRING_UNQUOTED ospix
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_0_STRING_TOKEN ospix
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_0_STRING_UPPER_TOKEN OSPIX
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_1 "ospi-ker"
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_1_STRING_UNQUOTED ospi-ker
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_1_STRING_TOKEN ospi_ker
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_1_STRING_UPPER_TOKEN OSPI_KER
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_2 "ospi-mgr"
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_2_STRING_UNQUOTED ospi-mgr
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_2_STRING_TOKEN ospi_mgr
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_2_STRING_UPPER_TOKEN OSPI_MGR
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 0) \
	fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 1) \
	fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 2)
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 2)
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, clock_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_LEN 3
#define DT_N_S_soc_S_octospi_420d2400_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_dlyb_bypass 0
#define DT_N_S_soc_S_octospi_420d2400_P_dlyb_bypass_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_ssht_enable 0
#define DT_N_S_soc_S_octospi_420d2400_P_ssht_enable_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_status "okay"
#define DT_N_S_soc_S_octospi_420d2400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_octospi_420d2400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_octospi_420d2400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_octospi_420d2400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_octospi_420d2400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_octospi_420d2400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_octospi_420d2400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_octospi_420d2400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d2400, status, 0)
#define DT_N_S_soc_S_octospi_420d2400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400, status, 0)
#define DT_N_S_soc_S_octospi_420d2400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_status_LEN 1
#define DT_N_S_soc_S_octospi_420d2400_P_status_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_compatible {"st,stm32-ospi"}
#define DT_N_S_soc_S_octospi_420d2400_P_compatible_IDX_0 "st,stm32-ospi"
#define DT_N_S_soc_S_octospi_420d2400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-ospi
#define DT_N_S_soc_S_octospi_420d2400_P_compatible_IDX_0_STRING_TOKEN st_stm32_ospi
#define DT_N_S_soc_S_octospi_420d2400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_OSPI
#define DT_N_S_soc_S_octospi_420d2400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d2400, compatible, 0)
#define DT_N_S_soc_S_octospi_420d2400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400, compatible, 0)
#define DT_N_S_soc_S_octospi_420d2400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_compatible_LEN 1
#define DT_N_S_soc_S_octospi_420d2400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_0_VAL_bus 144
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_0_NAME "ospix"
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospix_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospix_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospix_VAL_bus DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_0_VAL_bus
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospix_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospix_VAL_bits DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_0_VAL_bits
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospix_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_1_VAL_bus 17
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_1_VAL_bits 29924
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_1_NAME "ospi-ker"
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_ker_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_ker_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_ker_VAL_bus DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_1_VAL_bus
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_ker_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_ker_VAL_bits DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_1_VAL_bits
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_ker_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_2_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_2_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_2_VAL_bus 140
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_2_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_2_VAL_bits 2097152
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_2_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_2_NAME "ospi-mgr"
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_mgr_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_mgr_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_mgr_VAL_bus DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_2_VAL_bus
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_mgr_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_mgr_VAL_bits DT_N_S_soc_S_octospi_420d2400_P_clocks_IDX_2_VAL_bits
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_NAME_ospi_mgr_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d2400, clocks, 0) \
	fn(DT_N_S_soc_S_octospi_420d2400, clocks, 1) \
	fn(DT_N_S_soc_S_octospi_420d2400, clocks, 2)
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, clocks, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, clocks, 2)
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, clocks, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_octospi_420d2400, clocks, 2, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, clocks, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_octospi_420d2400, clocks, 2, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_LEN 3
#define DT_N_S_soc_S_octospi_420d2400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_wakeup_source 0
#define DT_N_S_soc_S_octospi_420d2400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_octospi_420d2400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/octospi@420d2400/ospi-nor-flash@0
 *
 * Node identifier: DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0
 *
 * Binding (compatible = st,stm32-ospi-nor):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/st,stm32-ospi-nor.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_PATH "/soc/octospi@420d2400/ospi-nor-flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_FULL_NAME "ospi-nor-flash@0"

/* Node parent (/soc/octospi@420d2400) identifier: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_PARENT DT_N_S_soc_S_octospi_420d2400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_ORD 114
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_ORD_STR_SORTABLE 00114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_REQUIRES_ORDS \
	113, /* /soc/octospi@420d2400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_SUPPORTS_ORDS \
	115, /* /soc/octospi@420d2400/ospi-nor-flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_EXISTS 1
#define DT_N_ALIAS_spi_flash0         DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0
#define DT_N_INST_0_st_stm32_ospi_nor DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0
#define DT_N_NODELABEL_mx25lm51245    DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0

/* Bus info (controller: '/soc/octospi@420d2400', type: '['ospi']') */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_BUS_ospi 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_BUS DT_N_S_soc_S_octospi_420d2400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_REG_NUM 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_COMPAT_MATCHES_st_stm32_ospi_nor 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_COMPAT_MODEL_IDX_0 "stm32-ospi-nor"
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_ospi_max_frequency 50000000
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_ospi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_size 536870912
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_size_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_spi_bus_width 8
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_spi_bus_width_ENUM_IDX 3
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_spi_bus_width_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_spi_bus_width_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_data_rate 2
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_data_rate_ENUM_IDX 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_data_rate_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_data_rate_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_four_byte_opcodes 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_four_byte_opcodes_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status "okay"
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, status, 0)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, status, 0)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_LEN 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_status_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible {"st,stm32-ospi-nor"}
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible_IDX_0 "st,stm32-ospi-nor"
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-ospi-nor
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible_IDX_0_STRING_TOKEN st_stm32_ospi_nor
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_OSPI_NOR
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, compatible, 0)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, compatible, 0)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/octospi@420d2400/ospi-nor-flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_PATH "/soc/octospi@420d2400/ospi-nor-flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/octospi@420d2400/ospi-nor-flash@0) identifier: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_PARENT DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0, __VA_ARGS__)
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_ORD 115
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_ORD_STR_SORTABLE 00115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_REQUIRES_ORDS \
	114, /* /soc/octospi@420d2400/ospi-nor-flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_SUPPORTS_ORDS \
	116, /* /soc/octospi@420d2400/ospi-nor-flash@0/partitions/partition@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_1_fixed_partitions DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/octospi@420d2400/ospi-nor-flash@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_PATH "/soc/octospi@420d2400/ospi-nor-flash@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/octospi@420d2400/ospi-nor-flash@0/partitions) identifier: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_ORD 116
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_ORD_STR_SORTABLE 00116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	115, /* /soc/octospi@420d2400/ospi-nor-flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 67108864 /* 0x4000000 */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_PARTITION_ID 5

/* Generic property macros: */
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 67108864 /* 0x4000000 */}
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_P_reg_IDX_1 67108864
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42020400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_PATH "/soc/pin-controller@42020000/gpio@42020400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FULL_NAME "gpio@42020400"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_ORD 117
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_ORD_STR_SORTABLE 00117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_REQUIRES_ORDS \
	9, /* /soc/rcc@46020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_REG_IDX_0_VAL_ADDRESS 1107428352 /* 0x42020400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg {1107428352 /* 0x42020400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg_IDX_0 1107428352
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42020c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_PATH "/soc/pin-controller@42020000/gpio@42020c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FULL_NAME "gpio@42020c00"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_ORD 118
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_ORD_STR_SORTABLE 00118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_REQUIRES_ORDS \
	9, /* /soc/rcc@46020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_REG_IDX_0_VAL_ADDRESS 1107430400 /* 0x42020c00 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg {1107430400 /* 0x42020c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg_IDX_0 1107430400
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42021400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_PATH "/soc/pin-controller@42020000/gpio@42021400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FULL_NAME "gpio@42021400"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_ORD 119
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_ORD_STR_SORTABLE 00119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_REQUIRES_ORDS \
	9, /* /soc/rcc@46020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_EXISTS 1
#define DT_N_INST_5_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400
#define DT_N_NODELABEL_gpiof      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_REG_IDX_0_VAL_ADDRESS 1107432448 /* 0x42021400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg {1107432448 /* 0x42021400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg_IDX_0 1107432448
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42021800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_PATH "/soc/pin-controller@42020000/gpio@42021800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FULL_NAME "gpio@42021800"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_ORD 120
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_ORD_STR_SORTABLE 00120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_REQUIRES_ORDS \
	9, /* /soc/rcc@46020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_EXISTS 1
#define DT_N_INST_6_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800
#define DT_N_NODELABEL_gpiog      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_REG_IDX_0_VAL_ADDRESS 1107433472 /* 0x42021800 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg {1107433472 /* 0x42021800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg_IDX_0 1107433472
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42022000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_PATH "/soc/pin-controller@42020000/gpio@42022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FULL_NAME "gpio@42022000"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_ORD 121
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_ORD_STR_SORTABLE 00121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_REQUIRES_ORDS \
	9, /* /soc/rcc@46020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_EXISTS 1
#define DT_N_INST_8_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000
#define DT_N_NODELABEL_gpioi      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_REG_IDX_0_VAL_ADDRESS 1107435520 /* 0x42022000 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg {1107435520 /* 0x42022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg_IDX_0 1107435520
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42021000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_PATH "/soc/pin-controller@42020000/gpio@42021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FULL_NAME "gpio@42021000"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_ORD 122
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_ORD_STR_SORTABLE 00122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_REQUIRES_ORDS \
	9, /* /soc/rcc@46020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_SUPPORTS_ORDS \
	127, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000
#define DT_N_NODELABEL_gpioe      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_REG_IDX_0_VAL_ADDRESS 1107431424 /* 0x42021000 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg {1107431424 /* 0x42021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg_IDX_0 1107431424
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/spi1_miso_pe14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_PATH "/soc/pin-controller@42020000/spi1_miso_pe14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_FULL_NAME "spi1_miso_pe14"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_ORD 123
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_ORD_STR_SORTABLE 00123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_SUPPORTS_ORDS \
	127, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pe14 DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_pinmux 2501
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/spi1_mosi_pe15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_PATH "/soc/pin-controller@42020000/spi1_mosi_pe15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_FULL_NAME "spi1_mosi_pe15"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_ORD 124
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_ORD_STR_SORTABLE 00124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_SUPPORTS_ORDS \
	127, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pe15 DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_pinmux 2533
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/spi1_nss_pe12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_PATH "/soc/pin-controller@42020000/spi1_nss_pe12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_FULL_NAME "spi1_nss_pe12"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_ORD 125
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_ORD_STR_SORTABLE 00125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_SUPPORTS_ORDS \
	127, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pe12 DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_pinmux 2437
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/spi1_sck_pe13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_PATH "/soc/pin-controller@42020000/spi1_sck_pe13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_FULL_NAME "spi1_sck_pe13"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_ORD 126
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_ORD_STR_SORTABLE 00126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_SUPPORTS_ORDS \
	127, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pe13 DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_pinmux 2469
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_STRING_UNQUOTED very-high-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_IDX_0 "very-high-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_ENUM_VAL_very_high_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32h7-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32h7-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1)
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1)
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1)
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1)
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 127
#define DT_N_S_soc_S_spi_40013000_ORD_STR_SORTABLE 00127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	122, /* /soc/pin-controller@42020000/gpio@42021000 */ \
	123, /* /soc/pin-controller@42020000/spi1_miso_pe14 */ \
	124, /* /soc/pin-controller@42020000/spi1_mosi_pe15 */ \
	125, /* /soc/pin-controller@42020000/spi1_nss_pe12 */ \
	126, /* /soc/pin-controller@42020000/spi1_sck_pe13 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS \
	129, /* /soc/spi@40013000/ili9340@0 */ \
	130, /* /soc/spi@40013000/sdhc@1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32h7_spi    DT_N_S_soc_S_spi_40013000
#define DT_N_INST_0_st_stm32_spi_fifo DT_N_S_soc_S_spi_40013000
#define DT_N_INST_0_st_stm32_spi      DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1           DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_arduino_spi    DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 59
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32h7_spi 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0 "stm32h7-spi"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi_fifo 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_1 "stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_2 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_2 "stm32-spi"
#define DT_N_S_soc_S_spi_40013000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40013000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {59 /* 0x3b */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 59
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_pin 12
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_1_PH DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_1_VAL_pin 7
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_1_VAL_flags 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0) \
	fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 1)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 1)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_LEN 2
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "okay"
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32h7-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32h7-spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_TOKEN st_stm32h7_spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32H7_SPI
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1 "st,stm32-spi-fifo"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-spi-fifo
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_TOKEN st_stm32_spi_fifo
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_SPI_FIFO
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_2 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_2_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_2_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_2_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 2)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 2)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 3
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/gpio@42020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_PATH "/soc/pin-controller@42020000/gpio@42020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FULL_NAME "gpio@42020000"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_ORD 128
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_ORD_STR_SORTABLE 00128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_REQUIRES_ORDS \
	9, /* /soc/rcc@46020c00 */ \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_SUPPORTS_ORDS \
	129, /* /soc/spi@40013000/ili9340@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_REG_IDX_0_VAL_ADDRESS 1107427328 /* 0x42020000 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg {1107427328 /* 0x42020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg_IDX_0 1107427328
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_VAL_bus 140
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000/ili9340@0
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000_S_ili9340_0
 *
 * Binding (compatible = ilitek,ili9340):
 *   $ZEPHYR_BASE/dts/bindings/display/ilitek,ili9340.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_PATH "/soc/spi@40013000/ili9340@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_FULL_NAME "ili9340@0"

/* Node parent (/soc/spi@40013000) identifier: */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_PARENT DT_N_S_soc_S_spi_40013000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_ORD 129
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_ORD_STR_SORTABLE 00129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_REQUIRES_ORDS \
	127, /* /soc/spi@40013000 */ \
	128, /* /soc/pin-controller@42020000/gpio@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_EXISTS 1
#define DT_N_INST_0_ilitek_ili9340 DT_N_S_soc_S_spi_40013000_S_ili9340_0
#define DT_N_NODELABEL_ili9340     DT_N_S_soc_S_spi_40013000_S_ili9340_0

/* Bus info (controller: '/soc/spi@40013000', type: '['spi']') */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_BUS_spi 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_BUS DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_COMPAT_MATCHES_ilitek_ili9340 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_COMPAT_VENDOR_IDX_0 "ILI Technology Corporation (ILITEK)"
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_COMPAT_MODEL_IDX_0 "ili9340"
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_gamset {1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_gamset_IDX_0 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_gamset_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_gamset_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, gamset, 0)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_gamset_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, gamset, 0)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_gamset_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, gamset, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_gamset_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, gamset, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_gamset_LEN 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_gamset_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frmctr1 {0 /* 0x0 */, 24 /* 0x18 */}
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frmctr1_IDX_0 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frmctr1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frmctr1_IDX_1 24
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frmctr1_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frmctr1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, frmctr1, 0) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, frmctr1, 1)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frmctr1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, frmctr1, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, frmctr1, 1)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frmctr1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, frmctr1, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, frmctr1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frmctr1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, frmctr1, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, frmctr1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frmctr1_LEN 2
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frmctr1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl {10 /* 0xa */, 130 /* 0x82 */, 39 /* 0x27 */}
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_IDX_0 10
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_IDX_1 130
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_IDX_2 39
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 0) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 1) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 2)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 2)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, disctrl, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_LEN 3
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_disctrl_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl1 {35 /* 0x23 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl1_IDX_0 35
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl1_IDX_1 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl1_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl1, 0) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl1, 1)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl1, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl1, 1)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl1, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl1, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl1_LEN 2
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl2 {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl2_IDX_0 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl2_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl2_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl2, 0)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl2_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl2, 0)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl2_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl2, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl2_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pwctrl2, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl2_LEN 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pwctrl2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl1 {62 /* 0x3e */, 40 /* 0x28 */}
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl1_IDX_0 62
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl1_IDX_1 40
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl1_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl1, 0) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl1, 1)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl1, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl1, 1)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl1, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl1, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl1_LEN 2
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl2 {134 /* 0x86 */}
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl2_IDX_0 134
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl2_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl2_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl2, 0)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl2_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl2, 0)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl2_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl2, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl2_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, vmctrl2, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl2_LEN 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_vmctrl2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl {15 /* 0xf */, 49 /* 0x31 */, 43 /* 0x2b */, 12 /* 0xc */, 14 /* 0xe */, 8 /* 0x8 */, 78 /* 0x4e */, 241 /* 0xf1 */, 55 /* 0x37 */, 7 /* 0x7 */, 16 /* 0x10 */, 3 /* 0x3 */, 14 /* 0xe */, 9 /* 0x9 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_0 15
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_1 49
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_2 43
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_3 12
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_4 14
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_4_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_5 8
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_5_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_6 78
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_6_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_7 241
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_7_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_8 55
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_8_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_9 7
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_9_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_10 16
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_10_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_11 3
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_11_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_12 14
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_12_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_13 9
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_13_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_14 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_IDX_14_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 0) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 1) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 2) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 3) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 4) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 5) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 6) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 7) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 8) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 9) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 10) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 11) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 12) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 13) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 14)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 14)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 14, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, pgamctrl, 14, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_LEN 15
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pgamctrl_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl {0 /* 0x0 */, 14 /* 0xe */, 20 /* 0x14 */, 3 /* 0x3 */, 17 /* 0x11 */, 7 /* 0x7 */, 49 /* 0x31 */, 193 /* 0xc1 */, 72 /* 0x48 */, 8 /* 0x8 */, 15 /* 0xf */, 12 /* 0xc */, 49 /* 0x31 */, 54 /* 0x36 */, 15 /* 0xf */}
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_0 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_1 14
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_2 20
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_3 3
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_4 17
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_4_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_5 7
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_5_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_6 49
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_6_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_7 193
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_7_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_8 72
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_8_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_9 8
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_9_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_10 15
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_10_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_11 12
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_11_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_12 49
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_12_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_13 54
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_13_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_14 15
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_IDX_14_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 0) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 1) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 2) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 3) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 4) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 5) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 6) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 7) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 8) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 9) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 10) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 11) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 12) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 13) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 14)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 14)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 14, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, ngamctrl, 14, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_LEN 15
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_ngamctrl_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_IDX_0_VAL_pin 8
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, cmd_data_gpios, 0)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, cmd_data_gpios, 0)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, cmd_data_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, cmd_data_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_LEN 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_cmd_data_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pixel_format 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pixel_format_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pixel_format_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_pixel_format_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_rotation 90
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_rotation_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_rotation_ENUM_VAL_90_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_rotation_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_display_inversion 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_display_inversion_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_spi_max_frequency 15151515
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_duplex 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frame_format 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible {"ilitek,ili9340"}
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible_IDX_0 "ilitek,ili9340"
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible_IDX_0_STRING_UNQUOTED ilitek,ili9340
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible_IDX_0_STRING_TOKEN ilitek_ili9340
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ILITEK_ILI9340
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_height 240
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_height_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_width 320
#define DT_N_S_soc_S_spi_40013000_S_ili9340_0_P_width_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000/sdhc@1
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000_S_sdhc_1
 *
 * Binding (compatible = zephyr,sdhc-spi-slot):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/zephyr,sdhc-spi-slot.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_PATH "/soc/spi@40013000/sdhc@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_FULL_NAME "sdhc@1"

/* Node parent (/soc/spi@40013000) identifier: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_PARENT DT_N_S_soc_S_spi_40013000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_ORD 130
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_ORD_STR_SORTABLE 00130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_REQUIRES_ORDS \
	127, /* /soc/spi@40013000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_SUPPORTS_ORDS \
	131, /* /soc/spi@40013000/sdhc@1/mmc */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_EXISTS 1
#define DT_N_INST_0_zephyr_sdhc_spi_slot              DT_N_S_soc_S_spi_40013000_S_sdhc_1
#define DT_N_NODELABEL_adafruit_2_8_tft_touch_v2_sdhc DT_N_S_soc_S_spi_40013000_S_sdhc_1

/* Bus info (controller: '/soc/spi@40013000', type: '['spi']') */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_BUS_spi 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_BUS DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_COMPAT_MATCHES_zephyr_sdhc_spi_slot 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_COMPAT_MODEL_IDX_0 "sdhc-spi-slot"
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_power_delay_ms 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_power_delay_ms_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_spi_clock_mode_cpol 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_spi_clock_mode_cpol_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_spi_clock_mode_cpha 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_spi_clock_mode_cpha_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_reg {1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_reg_IDX_0 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_spi_max_frequency 24000000
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_duplex 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_frame_format 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status "okay"
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, status, 0)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, status, 0)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_LEN 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible {"zephyr,sdhc-spi-slot"}
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible_IDX_0 "zephyr,sdhc-spi-slot"
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible_IDX_0_STRING_UNQUOTED zephyr,sdhc-spi-slot
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible_IDX_0_STRING_TOKEN zephyr_sdhc_spi_slot
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_SDHC_SPI_SLOT
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000/sdhc@1/mmc
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc
 *
 * Binding (compatible = zephyr,sdmmc-disk):
 *   $ZEPHYR_BASE/dts/bindings/sd/zephyr,sdmmc-disk.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_PATH "/soc/spi@40013000/sdhc@1/mmc"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_FULL_NAME "mmc"

/* Node parent (/soc/spi@40013000/sdhc@1) identifier: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_PARENT DT_N_S_soc_S_spi_40013000_S_sdhc_1

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_ORD 131
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_ORD_STR_SORTABLE 00131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_REQUIRES_ORDS \
	130, /* /soc/spi@40013000/sdhc@1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_EXISTS 1
#define DT_N_INST_0_zephyr_sdmmc_disk DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc

/* Bus info (controller: '/soc/spi@40013000/sdhc@1', type: '['sd']') */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_BUS_sd 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_BUS DT_N_S_soc_S_spi_40013000_S_sdhc_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_REG_NUM 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_COMPAT_MATCHES_zephyr_sdmmc_disk 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_COMPAT_MODEL_IDX_0 "sdmmc-disk"
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status "okay"
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, status, 0)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, status, 0)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_LEN 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible {"zephyr,sdmmc-disk"}
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible_IDX_0 "zephyr,sdmmc-disk"
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible_IDX_0_STRING_UNQUOTED zephyr,sdmmc-disk
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible_IDX_0_STRING_TOKEN zephyr_sdmmc_disk
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_SDMMC_DISK
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_PATH "/soc/timers@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_FULL_NAME "timers@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_ORD 132
#define DT_N_S_soc_S_timers_40000000_ORD_STR_SORTABLE 00132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_SUPPORTS_ORDS \
	133, /* /soc/timers@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_EXISTS 1
#define DT_N_INST_3_st_stm32_timers DT_N_S_soc_S_timers_40000000
#define DT_N_NODELABEL_timers2      DT_N_S_soc_S_timers_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_REG_NUM 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_VAL_id 3712
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, resets, 0)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, resets, 0)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, status, 0)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, status, 0)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts {45 /* 0x2d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PATH "/soc/timers@40000000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD 133
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD_STR_SORTABLE 00133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REQUIRES_ORDS \
	132, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_EXISTS 1
#define DT_N_INST_3_st_stm32_pwm DT_N_S_soc_S_timers_40000000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_PATH "/soc/timers@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_FULL_NAME "timers@40000400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_ORD 134
#define DT_N_S_soc_S_timers_40000400_ORD_STR_SORTABLE 00134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_SUPPORTS_ORDS \
	136, /* /soc/timers@40000400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40000400
#define DT_N_NODELABEL_timers3      DT_N_S_soc_S_timers_40000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_REG_NUM 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_VAL_id 3713
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, resets, 0)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, resets, 0)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler 255
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status "okay"
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, status, 0)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, status, 0)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts {46 /* 0x2e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/tim3_ch2_pe4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_PATH "/soc/pin-controller@42020000/tim3_ch2_pe4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_FULL_NAME "tim3_ch2_pe4"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_ORD 135
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_ORD_STR_SORTABLE 00135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_SUPPORTS_ORDS \
	136, /* /soc/timers@40000400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_EXISTS 1
#define DT_N_NODELABEL_tim3_ch2_pe4 DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_pinmux 2178
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PATH "/soc/timers@40000400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD 136
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD_STR_SORTABLE 00136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REQUIRES_ORDS \
	134, /* /soc/timers@40000400 */ \
	135, /* /soc/pin-controller@42020000/tim3_ch2_pe4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40000400_S_pwm
#define DT_N_NODELABEL_pwm3      DT_N_S_soc_S_timers_40000400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_PATH "/soc/timers@40000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_FULL_NAME "timers@40000800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_timers_40000800_S_counter)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800_S_counter)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_ORD 137
#define DT_N_S_soc_S_timers_40000800_ORD_STR_SORTABLE 00137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_SUPPORTS_ORDS \
	138, /* /soc/timers@40000800/counter */ \
	140, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40000800
#define DT_N_NODELABEL_timers4      DT_N_S_soc_S_timers_40000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_REG_NUM 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_ADDRESS 1073743872 /* 0x40000800 */
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq 47
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_P_reg {1073743872 /* 0x40000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0 1073743872
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_VAL_id 3714
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, resets, 0)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, resets, 0)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_st_prescaler 1
#define DT_N_S_soc_S_timers_40000800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status "okay"
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, status, 0)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, status, 0)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts {47 /* 0x2f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0 47
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PATH "/soc/timers@40000800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_counter_ORD 138
#define DT_N_S_soc_S_timers_40000800_S_counter_ORD_STR_SORTABLE 00138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_counter_REQUIRES_ORDS \
	137, /* /soc/timers@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_counter_EXISTS 1
#define DT_N_INST_0_st_stm32_counter DT_N_S_soc_S_timers_40000800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@42020000/tim4_ch1_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_PATH "/soc/pin-controller@42020000/tim4_ch1_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_FULL_NAME "tim4_ch1_pb6"

/* Node parent (/soc/pin-controller@42020000) identifier: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_PARENT DT_N_S_soc_S_pin_controller_42020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_ORD 139
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_ORD_STR_SORTABLE 00139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_REQUIRES_ORDS \
	10, /* /soc/pin-controller@42020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_SUPPORTS_ORDS \
	140, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_EXISTS 1
#define DT_N_NODELABEL_tim4_ch1_pb6 DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_pinmux 706
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PATH "/soc/timers@40000800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD 140
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD_STR_SORTABLE 00140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REQUIRES_ORDS \
	137, /* /soc/timers@40000800 */ \
	139, /* /soc/pin-controller@42020000/tim4_ch1_pb6 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40000800_S_pwm
#define DT_N_NODELABEL_pwm4      DT_N_S_soc_S_timers_40000800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_PATH "/soc/timers@40000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_FULL_NAME "timers@40000c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) fn(DT_N_S_soc_S_timers_40000c00_S_counter)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00_S_counter)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_ORD 141
#define DT_N_S_soc_S_timers_40000c00_ORD_STR_SORTABLE 00141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_SUPPORTS_ORDS \
	142, /* /soc/timers@40000c00/counter */ \
	143, /* /soc/timers@40000c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_EXISTS 1
#define DT_N_INST_4_st_stm32_timers DT_N_S_soc_S_timers_40000c00
#define DT_N_NODELABEL_timers5      DT_N_S_soc_S_timers_40000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_ADDRESS 1073744896 /* 0x40000c00 */
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq 48
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_P_reg {1073744896 /* 0x40000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0 1073744896
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_VAL_id 3715
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, resets, 0)
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, resets, 0)
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000c00_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, status, 0)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, status, 0)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts {48 /* 0x30 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0 48
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PATH "/soc/timers@40000c00/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PARENT DT_N_S_soc_S_timers_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_ORD 142
#define DT_N_S_soc_S_timers_40000c00_S_counter_ORD_STR_SORTABLE 00142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_REQUIRES_ORDS \
	141, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_EXISTS 1
#define DT_N_INST_1_st_stm32_counter DT_N_S_soc_S_timers_40000c00_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000c00_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PATH "/soc/timers@40000c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PARENT DT_N_S_soc_S_timers_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_ORD 143
#define DT_N_S_soc_S_timers_40000c00_S_pwm_ORD_STR_SORTABLE 00143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REQUIRES_ORDS \
	141, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_EXISTS 1
#define DT_N_INST_4_st_stm32_pwm DT_N_S_soc_S_timers_40000c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_PATH "/soc/timers@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_FULL_NAME "timers@40001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_pwm)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_ORD 144
#define DT_N_S_soc_S_timers_40001000_ORD_STR_SORTABLE 00144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_SUPPORTS_ORDS \
	145, /* /soc/timers@40001000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_EXISTS 1
#define DT_N_INST_5_st_stm32_timers DT_N_S_soc_S_timers_40001000
#define DT_N_NODELABEL_timers6      DT_N_S_soc_S_timers_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_REG_NUM 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq 49
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_P_reg {1073745920 /* 0x40001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_VAL_id 3716
#define DT_N_S_soc_S_timers_40001000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, resets, 0)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, resets, 0)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, status, 0)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, status, 0)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts {49 /* 0x31 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0 49
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PATH "/soc/timers@40001000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40001000) identifier: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PARENT DT_N_S_soc_S_timers_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_ORD 145
#define DT_N_S_soc_S_timers_40001000_S_pwm_ORD_STR_SORTABLE 00145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_REQUIRES_ORDS \
	144, /* /soc/timers@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_EXISTS 1
#define DT_N_INST_5_st_stm32_pwm DT_N_S_soc_S_timers_40001000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40001000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_PATH "/soc/timers@40001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_FULL_NAME "timers@40001400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001400_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001400_S_pwm)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_pwm)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_ORD 146
#define DT_N_S_soc_S_timers_40001400_ORD_STR_SORTABLE 00146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_SUPPORTS_ORDS \
	147, /* /soc/timers@40001400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_EXISTS 1
#define DT_N_INST_6_st_stm32_timers DT_N_S_soc_S_timers_40001400
#define DT_N_NODELABEL_timers7      DT_N_S_soc_S_timers_40001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001400_REG_NUM 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_ADDRESS 1073746944 /* 0x40001400 */
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40001400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_P_reg {1073746944 /* 0x40001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0 1073746944
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus 156
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, clocks, 0)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, clocks, 0)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_VAL_id 3717
#define DT_N_S_soc_S_timers_40001400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, resets, 0)
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, resets, 0)
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, status, 0)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, status, 0)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_PATH "/soc/timers@40001400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40001400) identifier: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_PARENT DT_N_S_soc_S_timers_40001400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_ORD 147
#define DT_N_S_soc_S_timers_40001400_S_pwm_ORD_STR_SORTABLE 00147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_REQUIRES_ORDS \
	146, /* /soc/timers@40001400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_EXISTS 1
#define DT_N_INST_6_st_stm32_pwm DT_N_S_soc_S_timers_40001400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40001400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40001400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40001400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_PATH "/soc/timers@40012c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_FULL_NAME "timers@40012c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40012c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_ORD 148
#define DT_N_S_soc_S_timers_40012c00_ORD_STR_SORTABLE 00148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_SUPPORTS_ORDS \
	149, /* /soc/timers@40012c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_EXISTS 1
#define DT_N_INST_2_st_stm32_timers DT_N_S_soc_S_timers_40012c00
#define DT_N_NODELABEL_timers1      DT_N_S_soc_S_timers_40012c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_ADDRESS 1073818624 /* 0x40012c00 */
#define DT_N_S_soc_S_timers_40012c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40012c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq 42
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq 43
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq 44
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40012c00_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40012c00_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_P_reg {1073818624 /* 0x40012c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0 1073818624
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40012c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_timers_40012c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_VAL_id 3979
#define DT_N_S_soc_S_timers_40012c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, resets, 0)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, resets, 0)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40012c00_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40012c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, status, 0)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, status, 0)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_status_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40012c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */, 42 /* 0x2a */, 0 /* 0x0 */, 43 /* 0x2b */, 0 /* 0x0 */, 44 /* 0x2c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2 42
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_4 43
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_6 44
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_UNQUOTED brk
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_TOKEN brk
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_UNQUOTED up
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_TOKEN up
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN UP
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_STRING_UNQUOTED trgcom
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_STRING_TOKEN trgcom
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TRGCOM
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_STRING_UNQUOTED cc
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_STRING_TOKEN cc
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40012c00, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40012c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40012c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40012c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40012c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PATH "/soc/timers@40012c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40012c00) identifier: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PARENT DT_N_S_soc_S_timers_40012c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_ORD 149
#define DT_N_S_soc_S_timers_40012c00_S_pwm_ORD_STR_SORTABLE 00149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REQUIRES_ORDS \
	148, /* /soc/timers@40012c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_EXISTS 1
#define DT_N_INST_2_st_stm32_pwm DT_N_S_soc_S_timers_40012c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40012c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40012c00_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40013400
 *
 * Node identifier: DT_N_S_soc_S_timers_40013400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40013400_PATH "/soc/timers@40013400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40013400_FULL_NAME "timers@40013400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40013400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40013400_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40013400_S_pwm)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400_S_pwm)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40013400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40013400_ORD 150
#define DT_N_S_soc_S_timers_40013400_ORD_STR_SORTABLE 00150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40013400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40013400_SUPPORTS_ORDS \
	151, /* /soc/timers@40013400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40013400_EXISTS 1
#define DT_N_INST_7_st_stm32_timers DT_N_S_soc_S_timers_40013400
#define DT_N_NODELABEL_timers8      DT_N_S_soc_S_timers_40013400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40013400_REG_NUM 1
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_VAL_ADDRESS 1073820672 /* 0x40013400 */
#define DT_N_S_soc_S_timers_40013400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40013400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40013400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40013400_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq 52
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq 53
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq 54
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40013400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40013400_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40013400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40013400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40013400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40013400_P_reg {1073820672 /* 0x40013400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_0 1073820672
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40013400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_timers_40013400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, clocks, 0)
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, clocks, 0)
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40013400_P_resets_IDX_0_VAL_id 3981
#define DT_N_S_soc_S_timers_40013400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, resets, 0)
#define DT_N_S_soc_S_timers_40013400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, resets, 0)
#define DT_N_S_soc_S_timers_40013400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40013400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_status "disabled"
#define DT_N_S_soc_S_timers_40013400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40013400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40013400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40013400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40013400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40013400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40013400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, status, 0)
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, status, 0)
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40013400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40013400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts {51 /* 0x33 */, 0 /* 0x0 */, 52 /* 0x34 */, 0 /* 0x0 */, 53 /* 0x35 */, 0 /* 0x0 */, 54 /* 0x36 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_2 52
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_4 53
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_6 54
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40013400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0_STRING_UNQUOTED brk
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0_STRING_TOKEN brk
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1_STRING_UNQUOTED up
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1_STRING_TOKEN up
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN UP
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2_STRING_UNQUOTED trgcom
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2_STRING_TOKEN trgcom
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TRGCOM
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3_STRING_UNQUOTED cc
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3_STRING_TOKEN cc
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40013400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40013400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40013400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40013400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40013400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40013400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_PATH "/soc/timers@40013400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40013400) identifier: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_PARENT DT_N_S_soc_S_timers_40013400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_ORD 151
#define DT_N_S_soc_S_timers_40013400_S_pwm_ORD_STR_SORTABLE 00151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_REQUIRES_ORDS \
	150, /* /soc/timers@40013400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_EXISTS 1
#define DT_N_INST_7_st_stm32_pwm DT_N_S_soc_S_timers_40013400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40013400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40013400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40013400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40013400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_PATH "/soc/timers@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_FULL_NAME "timers@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm) fn(DT_N_S_soc_S_timers_40014000_S_counter)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000_S_counter)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_ORD 152
#define DT_N_S_soc_S_timers_40014000_ORD_STR_SORTABLE 00152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_SUPPORTS_ORDS \
	153, /* /soc/timers@40014000/counter */ \
	154, /* /soc/timers@40014000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_EXISTS 1
#define DT_N_INST_8_st_stm32_timers DT_N_S_soc_S_timers_40014000
#define DT_N_NODELABEL_timers15     DT_N_S_soc_S_timers_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_REG_NUM 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq 69
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_P_reg {1073823744 /* 0x40014000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_VAL_id 3984
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, resets, 0)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, resets, 0)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, status, 0)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, status, 0)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts {69 /* 0x45 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0 69
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PATH "/soc/timers@40014000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_counter_ORD 153
#define DT_N_S_soc_S_timers_40014000_S_counter_ORD_STR_SORTABLE 00153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REQUIRES_ORDS \
	152, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_counter_EXISTS 1
#define DT_N_INST_2_st_stm32_counter DT_N_S_soc_S_timers_40014000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PATH "/soc/timers@40014000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD 154
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD_STR_SORTABLE 00154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REQUIRES_ORDS \
	152, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_EXISTS 1
#define DT_N_INST_8_st_stm32_pwm DT_N_S_soc_S_timers_40014000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_PATH "/soc/timers@40014400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_FULL_NAME "timers@40014400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_ORD 155
#define DT_N_S_soc_S_timers_40014400_ORD_STR_SORTABLE 00155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_SUPPORTS_ORDS \
	156, /* /soc/timers@40014400/counter */ \
	157, /* /soc/timers@40014400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_EXISTS 1
#define DT_N_INST_9_st_stm32_timers DT_N_S_soc_S_timers_40014400
#define DT_N_NODELABEL_timers16     DT_N_S_soc_S_timers_40014400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_REG_NUM 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq 70
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_VAL_id 3985
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, resets, 0)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, resets, 0)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, status, 0)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, status, 0)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts {70 /* 0x46 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0 70
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PATH "/soc/timers@40014400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD 156
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD_STR_SORTABLE 00156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REQUIRES_ORDS \
	155, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_counter_EXISTS 1
#define DT_N_INST_3_st_stm32_counter DT_N_S_soc_S_timers_40014400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PATH "/soc/timers@40014400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD 157
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD_STR_SORTABLE 00157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REQUIRES_ORDS \
	155, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_EXISTS 1
#define DT_N_INST_9_st_stm32_pwm DT_N_S_soc_S_timers_40014400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_PATH "/soc/timers@40014800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_FULL_NAME "timers@40014800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_ORD 158
#define DT_N_S_soc_S_timers_40014800_ORD_STR_SORTABLE 00158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_REQUIRES_ORDS \
	4, /* /soc */ \
	5, /* /soc/interrupt-controller@e000e100 */ \
	9, /* /soc/rcc@46020c00 */ \
	65, /* /soc/rcc@46020c00/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_SUPPORTS_ORDS \
	159, /* /soc/timers@40014800/counter */ \
	160, /* /soc/timers@40014800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_EXISTS 1
#define DT_N_INST_10_st_stm32_timers DT_N_S_soc_S_timers_40014800
#define DT_N_NODELABEL_timers17      DT_N_S_soc_S_timers_40014800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_REG_NUM 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq 71
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_46020c00
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus 164
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_46020c00_S_reset_controller
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_VAL_id 3986
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, resets, 0)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, resets, 0)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, status, 0)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, status, 0)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts {71 /* 0x47 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0 71
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PATH "/soc/timers@40014800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD 159
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD_STR_SORTABLE 00159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REQUIRES_ORDS \
	158, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_counter_EXISTS 1
#define DT_N_INST_4_st_stm32_counter DT_N_S_soc_S_timers_40014800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PATH "/soc/timers@40014800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD 160
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD_STR_SORTABLE 00160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REQUIRES_ORDS \
	158, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_EXISTS 1
#define DT_N_INST_10_st_stm32_pwm DT_N_S_soc_S_timers_40014800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_four_channel_capture_support_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_rng_420c0800
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40022000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_40013800
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_40013800
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_display                 DT_N_S_soc_S_spi_40013000_S_ili9340_0
#define DT_CHOSEN_zephyr_display_EXISTS          1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000) fn(DT_N_S_soc_S_rcc_46020c00) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_46022000) fn(DT_N_S_soc_S_pin_controller_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_memory_40036400) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_serial_40005000) fn(DT_N_S_soc_S_serial_46002400) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_46002000) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f) fn(DT_N_S_soc_S_i2c_46002800) fn(DT_N_S_soc_S_i2c_40008400) fn(DT_N_S_soc_S_timers_46004400) fn(DT_N_S_soc_S_timers_40009400) fn(DT_N_S_soc_S_timers_46004800) fn(DT_N_S_soc_S_timers_46004c00) fn(DT_N_S_soc_S_rtc_46007800) fn(DT_N_S_soc_S_timers_40012c00) fn(DT_N_S_soc_S_timers_40012c00_S_pwm) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_timers_40000800_S_counter) fn(DT_N_S_soc_S_timers_40000c00) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) fn(DT_N_S_soc_S_timers_40000c00_S_counter) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40001000_S_pwm) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc_S_timers_40001400_S_pwm) fn(DT_N_S_soc_S_timers_40013400) fn(DT_N_S_soc_S_timers_40013400_S_pwm) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014000_S_pwm) fn(DT_N_S_soc_S_timers_40014000_S_counter) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter) fn(DT_N_S_soc_S_octospi_420d1400) fn(DT_N_S_soc_S_octospi_420d2400) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_aes_420c0000) fn(DT_N_S_soc_S_rng_420c0800) fn(DT_N_S_soc_S_sdmmc_420c8000) fn(DT_N_S_soc_S_sdmmc_420c8c00) fn(DT_N_S_soc_S_dac_46021800) fn(DT_N_S_soc_S_adc_42028000) fn(DT_N_S_soc_S_adc_46021000) fn(DT_N_S_soc_S_can_4000a400) fn(DT_N_S_soc_S_ucpd_4000dc00) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_memory_controller_420d0400) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram) fn(DT_N_S_soc_S_otgfs_42040000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_state0) fn(DT_N_S_cpus_S_power_states_S_state1) fn(DT_N_S_cpus_S_power_states_S_state2) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_hsi48) fn(DT_N_S_clocks_S_clk_msis) fn(DT_N_S_clocks_S_clk_msik) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_clocks_S_pll2) fn(DT_N_S_clocks_S_pll3) fn(DT_N_S_dietemp) fn(DT_N_S_vref_1) fn(DT_N_S_vref_4) fn(DT_N_S_vbat_1) fn(DT_N_S_vbat_4) fn(DT_N_S_otgfs_phy) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button) fn(DT_N_S_lvgl_pointer) fn(DT_N_S_stepper)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40022000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000) fn(DT_N_S_soc_S_rcc_46020c00) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_46022000) fn(DT_N_S_soc_S_pin_controller_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f) fn(DT_N_S_soc_S_timers_46004400) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_octospi_420d2400) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_aes_420c0000) fn(DT_N_S_soc_S_rng_420c0800) fn(DT_N_S_soc_S_dac_46021800) fn(DT_N_S_soc_S_adc_42028000) fn(DT_N_S_soc_S_adc_46021000) fn(DT_N_S_soc_S_dma_40020000) fn(DT_N_S_soc_S_otgfs_42040000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_state0) fn(DT_N_S_cpus_S_power_states_S_state1) fn(DT_N_S_cpus_S_power_states_S_state2) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hsi48) fn(DT_N_S_clocks_S_clk_msis) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_dietemp) fn(DT_N_S_vref_1) fn(DT_N_S_vbat_4) fn(DT_N_S_otgfs_phy) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button) fn(DT_N_S_lvgl_pointer) fn(DT_N_S_stepper)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_46020c00, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_46022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40036400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_46002400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_46002000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_46002800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40008400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_46004400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40009400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_46004800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_46004c00, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_46007800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40012c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40013400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d1400, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d2400, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_aes_420c0000, __VA_ARGS__) fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_420c8000, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_420c8c00, __VA_ARGS__) fn(DT_N_S_soc_S_dac_46021800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_46021000, __VA_ARGS__) fn(DT_N_S_soc_S_can_4000a400, __VA_ARGS__) fn(DT_N_S_soc_S_ucpd_4000dc00, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_controller_420d0400, __VA_ARGS__) fn(DT_N_S_soc_S_memory_controller_420d0400_S_sram, __VA_ARGS__) fn(DT_N_S_soc_S_otgfs_42040000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state2, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi48, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_msis, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_msik, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_clocks_S_pll2, __VA_ARGS__) fn(DT_N_S_clocks_S_pll3, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref_1, __VA_ARGS__) fn(DT_N_S_vref_4, __VA_ARGS__) fn(DT_N_S_vbat_1, __VA_ARGS__) fn(DT_N_S_vbat_4, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) fn(DT_N_S_lvgl_pointer, __VA_ARGS__) fn(DT_N_S_stepper, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_46020c00, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_46022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc1_in15_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_adc4_in19_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_dac1_out1_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_scl_ph4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_i2c2_sda_ph5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io0_pf0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io1_pf1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io2_pf2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io3_pf3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_clk_pf4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_dqs_pf12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io4_ph9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io5_ph10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io6_ph11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_io7_ph12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_octospim_p2_ncs_pi5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_miso_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_mosi_pe15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_nss_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_spi1_sck_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim3_ch2_pe4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_tim4_ch1_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_rx_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_rx_pd9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart1_tx_pa9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usart3_tx_pd8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__) fn(DT_N_S_soc_S_timers_46004400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d2400, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_aes_420c0000, __VA_ARGS__) fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__) fn(DT_N_S_soc_S_dac_46021800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_46021000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_otgfs_42040000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state2, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi48, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_msis, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref_1, __VA_ARGS__) fn(DT_N_S_vbat_4, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) fn(DT_N_S_lvgl_pointer, __VA_ARGS__) fn(DT_N_S_stepper, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_10000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_78000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_e0000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions_S_partition_f0000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_st_b_u585i_iot02a 1
#define DT_COMPAT_HAS_OKAY_st_stm32u585 1
#define DT_COMPAT_HAS_OKAY_st_stm32u5 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v8m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv8m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32l5_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32_nv_flash 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_st_stm32u5_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc_rctl 1
#define DT_COMPAT_HAS_OKAY_st_stm32g0_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_watchdog 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_st_stm32h7_spi 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi_fifo 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi 1
#define DT_COMPAT_HAS_OKAY_ilitek_ili9340 1
#define DT_COMPAT_HAS_OKAY_zephyr_sdhc_spi_slot 1
#define DT_COMPAT_HAS_OKAY_zephyr_sdmmc_disk 1
#define DT_COMPAT_HAS_OKAY_st_stm32_i2c_v2 1
#define DT_COMPAT_HAS_OKAY_focaltech_ft5336 1
#define DT_COMPAT_HAS_OKAY_st_hts221 1
#define DT_COMPAT_HAS_OKAY_st_stm32_lptim 1
#define DT_COMPAT_HAS_OKAY_st_stm32_timers 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pwm 1
#define DT_COMPAT_HAS_OKAY_st_stm32_ospi 1
#define DT_COMPAT_HAS_OKAY_st_stm32_ospi_nor 1
#define DT_COMPAT_HAS_OKAY_st_stm32_aes 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rng 1
#define DT_COMPAT_HAS_OKAY_st_stm32_dac 1
#define DT_COMPAT_HAS_OKAY_st_stm32_adc 1
#define DT_COMPAT_HAS_OKAY_st_stm32u5_dma 1
#define DT_COMPAT_HAS_OKAY_st_stm32_otgfs 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m33 1
#define DT_COMPAT_HAS_OKAY_arm_armv8m_mpu 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32u5_msi_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32_lse_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32u5_pll_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32_temp_cal 1
#define DT_COMPAT_HAS_OKAY_st_stm32_vref 1
#define DT_COMPAT_HAS_OKAY_st_stm32_vbat 1
#define DT_COMPAT_HAS_OKAY_usb_nop_xceiv 1
#define DT_COMPAT_HAS_OKAY_arduino_header_r3 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_zephyr_lvgl_pointer_input 1
#define DT_COMPAT_HAS_OKAY_maxhbr_stepper 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_st_b_u585i_iot02a_NUM_OKAY 1
#define DT_N_INST_st_stm32u585_NUM_OKAY 1
#define DT_N_INST_st_stm32u5_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v8m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv8m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32l5_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32_nv_flash_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 2
#define DT_N_INST_st_stm32u5_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_rcc_rctl_NUM_OKAY 1
#define DT_N_INST_st_stm32g0_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 9
#define DT_N_INST_st_stm32_watchdog_NUM_OKAY 1
#define DT_N_INST_st_stm32_usart_NUM_OKAY 2
#define DT_N_INST_st_stm32_uart_NUM_OKAY 2
#define DT_N_INST_st_stm32h7_spi_NUM_OKAY 1
#define DT_N_INST_st_stm32_spi_fifo_NUM_OKAY 1
#define DT_N_INST_st_stm32_spi_NUM_OKAY 1
#define DT_N_INST_ilitek_ili9340_NUM_OKAY 1
#define DT_N_INST_zephyr_sdhc_spi_slot_NUM_OKAY 1
#define DT_N_INST_zephyr_sdmmc_disk_NUM_OKAY 1
#define DT_N_INST_st_stm32_i2c_v2_NUM_OKAY 2
#define DT_N_INST_focaltech_ft5336_NUM_OKAY 1
#define DT_N_INST_st_hts221_NUM_OKAY 1
#define DT_N_INST_st_stm32_lptim_NUM_OKAY 1
#define DT_N_INST_st_stm32_timers_NUM_OKAY 2
#define DT_N_INST_st_stm32_pwm_NUM_OKAY 2
#define DT_N_INST_st_stm32_ospi_NUM_OKAY 1
#define DT_N_INST_st_stm32_ospi_nor_NUM_OKAY 1
#define DT_N_INST_st_stm32_aes_NUM_OKAY 1
#define DT_N_INST_st_stm32_rng_NUM_OKAY 1
#define DT_N_INST_st_stm32_dac_NUM_OKAY 1
#define DT_N_INST_st_stm32_adc_NUM_OKAY 2
#define DT_N_INST_st_stm32u5_dma_NUM_OKAY 1
#define DT_N_INST_st_stm32_otgfs_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m33_NUM_OKAY 1
#define DT_N_INST_arm_armv8m_mpu_NUM_OKAY 1
#define DT_N_INST_zephyr_power_state_NUM_OKAY 3
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32u5_msi_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32_lse_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32u5_pll_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32_temp_cal_NUM_OKAY 1
#define DT_N_INST_st_stm32_vref_NUM_OKAY 1
#define DT_N_INST_st_stm32_vbat_NUM_OKAY 1
#define DT_N_INST_usb_nop_xceiv_NUM_OKAY 1
#define DT_N_INST_arduino_header_r3_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_zephyr_lvgl_pointer_input_NUM_OKAY 1
#define DT_N_INST_maxhbr_stepper_NUM_OKAY 1
#define DT_FOREACH_OKAY_st_b_u585i_iot02a(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_st_b_u585i_iot02a(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_b_u585i_iot02a(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_b_u585i_iot02a(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32u585(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32u585(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32u585(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32u585(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32u5(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32u5(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32u5(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32u5(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v8m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v8m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v8m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v8m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv8m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv8m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv8m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv8m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32l5_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32l5_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32l5_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32l5_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_40022000_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32u5_rcc(fn) fn(DT_N_S_soc_S_rcc_46020c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32u5_rcc(fn, ...) fn(DT_N_S_soc_S_rcc_46020c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32u5_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32u5_rcc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rcc_rctl(fn) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rcc_rctl(fn, ...) fn(DT_N_S_soc_S_rcc_46020c00_S_reset_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc_rctl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rcc_rctl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32g0_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_46022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32g0_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_46022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32g0_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32g0_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_46022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_46022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_42020000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_42020000_S_gpio_42022000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40003000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usart(fn) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usart(fn, ...) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usart(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_uart(fn) fn(DT_N_S_soc_S_serial_40013800) fn(DT_N_S_soc_S_serial_40004800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_uart(fn, ...) fn(DT_N_S_soc_S_serial_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_uart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32h7_spi(fn) fn(DT_N_S_soc_S_spi_40013000)
#define DT_FOREACH_OKAY_VARGS_st_stm32h7_spi(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32h7_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32h7_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi_fifo(fn) fn(DT_N_S_soc_S_spi_40013000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi_fifo(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi_fifo(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi_fifo(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi(fn) fn(DT_N_S_soc_S_spi_40013000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi(fn, ...) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ilitek_ili9340(fn) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0)
#define DT_FOREACH_OKAY_VARGS_ilitek_ili9340(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_ili9340_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ilitek_ili9340(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ilitek_ili9340(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_sdhc_spi_slot(fn) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1)
#define DT_FOREACH_OKAY_VARGS_zephyr_sdhc_spi_slot(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_sdhc_spi_slot(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_sdhc_spi_slot(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_sdmmc_disk(fn) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc)
#define DT_FOREACH_OKAY_VARGS_zephyr_sdmmc_disk(fn, ...) fn(DT_N_S_soc_S_spi_40013000_S_sdhc_1_S_mmc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_sdmmc_disk(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_sdmmc_disk(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_i2c_v2(fn) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_i2c_v2(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_i2c_v2(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_i2c_v2(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_focaltech_ft5336(fn) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38)
#define DT_FOREACH_OKAY_VARGS_focaltech_ft5336(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_ft5336_38, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_focaltech_ft5336(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_focaltech_ft5336(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_hts221(fn) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f)
#define DT_FOREACH_OKAY_VARGS_st_hts221(fn, ...) fn(DT_N_S_soc_S_i2c_40005800_S_hts221_5f, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_hts221(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_hts221(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_lptim(fn) fn(DT_N_S_soc_S_timers_46004400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_lptim(fn, ...) fn(DT_N_S_soc_S_timers_46004400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_lptim(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_lptim(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_timers(fn) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_timers(fn, ...) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_timers(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_timers(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pwm(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000800_S_pwm)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pwm(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pwm(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pwm(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_ospi(fn) fn(DT_N_S_soc_S_octospi_420d2400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_ospi(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_ospi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_ospi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_ospi_nor(fn) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0)
#define DT_FOREACH_OKAY_VARGS_st_stm32_ospi_nor(fn, ...) fn(DT_N_S_soc_S_octospi_420d2400_S_ospi_nor_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_ospi_nor(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_ospi_nor(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_aes(fn) fn(DT_N_S_soc_S_aes_420c0000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_aes(fn, ...) fn(DT_N_S_soc_S_aes_420c0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_aes(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_aes(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rng(fn) fn(DT_N_S_soc_S_rng_420c0800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rng(fn, ...) fn(DT_N_S_soc_S_rng_420c0800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_dac(fn) fn(DT_N_S_soc_S_dac_46021800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_dac(fn, ...) fn(DT_N_S_soc_S_dac_46021800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_dac(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_dac(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_adc(fn) fn(DT_N_S_soc_S_adc_42028000) fn(DT_N_S_soc_S_adc_46021000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_adc(fn, ...) fn(DT_N_S_soc_S_adc_42028000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_46021000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_adc(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_adc(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32u5_dma(fn) fn(DT_N_S_soc_S_dma_40020000)
#define DT_FOREACH_OKAY_VARGS_st_stm32u5_dma(fn, ...) fn(DT_N_S_soc_S_dma_40020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32u5_dma(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32u5_dma(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_otgfs(fn) fn(DT_N_S_soc_S_otgfs_42040000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_otgfs(fn, ...) fn(DT_N_S_soc_S_otgfs_42040000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_otgfs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_otgfs(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m33(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m33(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m33(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m33(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv8m_mpu(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_FOREACH_OKAY_VARGS_arm_armv8m_mpu(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv8m_mpu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv8m_mpu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_cpus_S_power_states_S_state0) fn(DT_N_S_cpus_S_power_states_S_state1) fn(DT_N_S_cpus_S_power_states_S_state2)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_cpus_S_power_states_S_state0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_state2, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_clocks_S_clk_hsi48)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_clocks_S_clk_hsi48, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32u5_msi_clock(fn) fn(DT_N_S_clocks_S_clk_msis)
#define DT_FOREACH_OKAY_VARGS_st_stm32u5_msi_clock(fn, ...) fn(DT_N_S_clocks_S_clk_msis, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32u5_msi_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32u5_msi_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_lse_clock(fn) fn(DT_N_S_clocks_S_clk_lse)
#define DT_FOREACH_OKAY_VARGS_st_stm32_lse_clock(fn, ...) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_lse_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_lse_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32u5_pll_clock(fn) fn(DT_N_S_clocks_S_pll)
#define DT_FOREACH_OKAY_VARGS_st_stm32u5_pll_clock(fn, ...) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32u5_pll_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32u5_pll_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_temp_cal(fn) fn(DT_N_S_dietemp)
#define DT_FOREACH_OKAY_VARGS_st_stm32_temp_cal(fn, ...) fn(DT_N_S_dietemp, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_temp_cal(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_temp_cal(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_vref(fn) fn(DT_N_S_vref_1)
#define DT_FOREACH_OKAY_VARGS_st_stm32_vref(fn, ...) fn(DT_N_S_vref_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_vref(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_vref(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_vbat(fn) fn(DT_N_S_vbat_4)
#define DT_FOREACH_OKAY_VARGS_st_stm32_vbat(fn, ...) fn(DT_N_S_vbat_4, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_vbat(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_vbat(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_usb_nop_xceiv(fn) fn(DT_N_S_otgfs_phy)
#define DT_FOREACH_OKAY_VARGS_usb_nop_xceiv(fn, ...) fn(DT_N_S_otgfs_phy, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_usb_nop_xceiv(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_usb_nop_xceiv(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arduino_header_r3(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_arduino_header_r3(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arduino_header_r3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arduino_header_r3(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_lvgl_pointer_input(fn) fn(DT_N_S_lvgl_pointer)
#define DT_FOREACH_OKAY_VARGS_zephyr_lvgl_pointer_input(fn, ...) fn(DT_N_S_lvgl_pointer, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_lvgl_pointer_input(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_lvgl_pointer_input(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_maxhbr_stepper(fn) fn(DT_N_S_stepper)
#define DT_FOREACH_OKAY_VARGS_maxhbr_stepper(fn, ...) fn(DT_N_S_stepper, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_maxhbr_stepper(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_maxhbr_stepper(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_ilitek_ili9340_BUS_spi 1
#define DT_COMPAT_zephyr_sdhc_spi_slot_BUS_spi 1
#define DT_COMPAT_zephyr_sdmmc_disk_BUS_sd 1
#define DT_COMPAT_focaltech_ft5336_BUS_i2c 1
#define DT_COMPAT_st_hts221_BUS_i2c 1
#define DT_COMPAT_st_stm32_ospi_nor_BUS_ospi 1
