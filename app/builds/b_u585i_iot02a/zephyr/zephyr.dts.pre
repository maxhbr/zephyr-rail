# 0 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/misc/empty_file.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/arm/b_u585i_iot02a/b_u585i_iot02a.dts" 1






/dts-v1/;
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/arm/b_u585i_iot02a/b_u585i_iot02a-common.dtsi" 1






# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u585Xi.dtsi" 1 3 4





# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/common/mem.h" 1 3 4
# 7 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u585Xi.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u585.dtsi" 1 3 4






# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u575.dtsi" 1 3 4






# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 1 3 4
# 10 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/armv8-m.dtsi" 1 3 4


# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/common/skeleton.dtsi" 1 3 4
# 9 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/common/skeleton.dtsi" 3 4
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
# 4 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/armv8-m.dtsi" 2 3 4

/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  interrupt-parent = <&nvic>;
  ranges;

  nvic: interrupt-controller@e000e100 {
   #address-cells = <1>;
   compatible = "arm,v8m-nvic";
   reg = <0xe000e100 0xc00>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };

  systick: timer@e000e010 {
   compatible = "arm,armv8m-systick";
   reg = <0xe000e010 0x10>;
  };
 };
};
# 11 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/adc/adc.h" 1 3 4
# 12 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/pwm/pwm.h" 1 3 4
# 13 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/clock/stm32u5_clock.h" 1 3 4
# 14 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/gpio/gpio.h" 1 3 4
# 15 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/i2c/i2c.h" 1 3 4
# 16 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/flash_controller/ospi.h" 1 3 4
# 17 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/reset/stm32u5_reset.h" 1 3 4
# 10 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/reset/stm32u5_reset.h" 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/reset/stm32-common.h" 1 3 4
# 11 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/reset/stm32u5_reset.h" 2 3 4
# 18 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/dma/stm32_dma.h" 1 3 4
# 19 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/memory-controller/stm32-fmc-nor-psram.h" 1 3 4
# 20 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/adc/stm32u5_adc.h" 1 3 4
# 9 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/adc/stm32u5_adc.h" 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 1 3 4
# 10 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/adc/stm32u5_adc.h" 2 3 4
# 21 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/common/freq.h" 1 3 4
# 22 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 2 3 4

/ {
 chosen {
  zephyr,entropy = &rng;
  zephyr,flash-controller = &flash;
 };

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu0: cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-m33";
   reg = <0>;
   #address-cells = <1>;
   #size-cells = <1>;
   cpu-power-states = <&stop0 &stop1 &stop2>;

   mpu: mpu@e000ed90 {
    compatible = "arm,armv8m-mpu";
    reg = <0xe000ed90 0x40>;
    arm,num-mpu-regions = <8>;
   };
  };

  power-states {
   stop0: state0 {
    compatible = "zephyr,power-state";
    power-state-name = "suspend-to-idle";
    substate-id = <1>;
    min-residency-us = <100>;
   };
   stop1: state1 {
    compatible = "zephyr,power-state";
    power-state-name = "suspend-to-idle";
    substate-id = <2>;
    min-residency-us = <500>;
   };
   stop2: state2 {
    compatible = "zephyr,power-state";
    power-state-name = "suspend-to-idle";
    substate-id = <3>;
    min-residency-us = <900>;
   };
  };
 };

 sram0: memory@20000000 {
  compatible = "mmio-sram";
 };

 clocks {
  clk_hse: clk-hse {
   #clock-cells = <0>;
   compatible = "st,stm32-hse-clock";
   status = "disabled";
  };

  clk_hsi: clk-hsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((16) * 1000 * 1000)>;
   status = "disabled";
  };

  clk_hsi48: clk-hsi48 {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((48) * 1000 * 1000)>;
   status = "disabled";
  };

  clk_msis: clk-msis {
   #clock-cells = <0>;
   compatible = "st,stm32u5-msi-clock";
   msi-range = <4>;
   status = "disabled";
  };

  clk_msik: clk-msik {
   #clock-cells = <0>;
   compatible = "st,stm32u5-msi-clock";
   msi-range = <4>;
   status = "disabled";
  };

  clk_lse: clk-lse {
   #clock-cells = <0>;
   compatible = "st,stm32-lse-clock";
   clock-frequency = <32768>;
   driving-capability = <2>;
   status = "disabled";
  };

  clk_lsi: clk-lsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((32) * 1000)>;
   status = "disabled";
  };

  pll1: pll: pll {
   #clock-cells = <0>;
   compatible = "st,stm32u5-pll-clock";
   status = "disabled";
  };

  pll2: pll2 {
   #clock-cells = <0>;
   compatible = "st,stm32u5-pll-clock";
   status = "disabled";
  };

  pll3: pll3 {
   #clock-cells = <0>;
   compatible = "st,stm32u5-pll-clock";
   status = "disabled";
  };
 };

 soc {
  flash: flash-controller@40022000 {
   compatible = "st,stm32-flash-controller", "st,stm32l5-flash-controller";
   reg = <0x40022000 0x400>;
   interrupts = <6 0>;

   #address-cells = <1>;
   #size-cells = <1>;

   flash0: flash@8000000 {
    compatible = "st,stm32-nv-flash", "soc-nv-flash";

    write-block-size = <16>;
    erase-block-size = <8192>;

    max-erase-time = <5>;
   };
  };

  rcc: rcc@46020c00 {
   compatible = "st,stm32u5-rcc";
   clocks-controller;
   #clock-cells = <2>;
   reg = <0x46020c00 0x400>;

   rctl: reset-controller {
    compatible = "st,stm32-rcc-rctl";
    #reset-cells = <1>;
   };
  };

  exti: interrupt-controller@46022000 {
   compatible = "st,stm32g0-exti", "st,stm32-exti";
   interrupt-controller;
   #interrupt-cells = <1>;
   #address-cells = <1>;
   reg = <0x46022000 0x400>;
   num-lines = <16>;
   interrupts = <11 0>, <12 0>, <13 0>, <14 0>,
         <15 0>, <16 0>, <17 0>, <18 0>,
         <19 0>, <20 0>, <21 0>, <22 0>,
         <23 0>, <24 0>, <25 0>, <26 0>;
   interrupt-names = "line0", "line1", "line2", "line3",
       "line4", "line5", "line6", "line7",
       "line8", "line9", "line10", "line11",
       "line12", "line13", "line14", "line15";
   line-ranges = <0 1>, <1 1>, <2 1>, <3 1>,
          <4 1>, <5 1>, <6 1>, <7 1>,
          <8 1>, <9 1>, <10 1>, <11 1>,
          <12 1>, <13 1>, <14 1>, <15 1>;
  };

  pinctrl: pin-controller@42020000 {
   compatible = "st,stm32-pinctrl";
   #address-cells = <1>;
   #size-cells = <1>;
   reg = <0x42020000 0x2000>;

   gpioa: gpio@42020000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42020000 0x400>;
    clocks = <&rcc 0x08C 0x00000001>;
   };

   gpiob: gpio@42020400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42020400 0x400>;
    clocks = <&rcc 0x08C 0x00000002>;
   };

   gpioc: gpio@42020800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42020800 0x400>;
    clocks = <&rcc 0x08C 0x00000004>;
   };

   gpiod: gpio@42020c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42020c00 0x400>;
    clocks = <&rcc 0x08C 0x00000008>;
   };

   gpioe: gpio@42021000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42021000 0x400>;
    clocks = <&rcc 0x08C 0x00000010>;
   };

   gpiof: gpio@42021400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42021400 0x400>;
    clocks = <&rcc 0x08C 0x00000020>;
   };

   gpiog: gpio@42021800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42021800 0x400>;
    clocks = <&rcc 0x08C 0x00000040>;
   };

   gpioh: gpio@42021c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42021c00 0x400>;
    clocks = <&rcc 0x08C 0x00000080>;
   };

   gpioi: gpio@42022000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x42022000 0x400>;
    clocks = <&rcc 0x08C 0x00000100>;
   };
  };

  iwdg: watchdog@40003000 {
   compatible = "st,stm32-watchdog";
   reg = <0x40003000 0x400>;
   status = "disabled";
  };

  wwdg: wwdg1: watchdog@40002c00 {
   compatible = "st,stm32-window-watchdog";
   reg = <0x40002c00 0x1000>;
   clocks = <&rcc 0x09C 0x00000800>;
   interrupts = <0 7>;
   status = "disabled";
  };

  backup_sram: memory@40036400 {
   compatible = "zephyr,memory-region", "st,stm32-backup-sram";
   reg = <0x40036400 ((2) * 1024)>;

   clocks = <&rcc 0x088 0x10020000>;
   zephyr,memory-region = "BACKUP_SRAM";
   status = "disabled";
  };

  usart1: serial@40013800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40013800 0x400>;
   clocks = <&rcc 0x0A4 0x00004000>;
   resets = <&rctl (((0x7C) << 5U) | (14U))>;
   interrupts = <61 0>;
   status = "disabled";
  };

  usart2: serial@40004400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004400 0x400>;
   clocks = <&rcc 0x09C 0x00020000>;
   resets = <&rctl (((0x74) << 5U) | (17U))>;
   interrupts = <62 0>;
   status = "disabled";
  };

  usart3: serial@40004800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004800 0x400>;
   clocks = <&rcc 0x09C 0x00040000>;
   resets = <&rctl (((0x74) << 5U) | (18U))>;
   interrupts = <63 0>;
   status = "disabled";
  };

  uart4: serial@40004c00 {
   compatible = "st,stm32-uart";
   reg = <0x40004c00 0x400>;
   clocks = <&rcc 0x09C 0x00080000>;
   resets = <&rctl (((0x74) << 5U) | (19U))>;
   interrupts = <64 0>;
   status = "disabled";
  };

  uart5: serial@40005000 {
   compatible = "st,stm32-uart";
   reg = <0x40005000 0x400>;
   clocks = <&rcc 0x09C 0x00100000>;
   resets = <&rctl (((0x74) << 5U) | (20U))>;
   interrupts = <65 0>;
   status = "disabled";
  };

  lpuart1: serial@46002400 {
   compatible = "st,stm32-lpuart", "st,stm32-uart";
   reg = <0x46002400 0x400>;
   clocks = <&rcc 0x0A8 0x00000040>;
   resets = <&rctl (((0x80) << 5U) | (6U))>;
   interrupts = <66 0>;
   status = "disabled";
  };

  spi1: spi@40013000 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   interrupts = <59 5>;
   clocks = <&rcc 0x0A4 0x00001000>;
   status = "disabled";
  };

  spi2: spi@40003800 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   interrupts = <60 5>;
   clocks = <&rcc 0x09C 0x00004000>;
   status = "disabled";
  };

  spi3: spi@46002000 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x46002000 0x400>;
   interrupts = <99 5>;
   clocks = <&rcc 0x0A8 0x00000020>;
   status = "disabled";
  };

  i2c1: i2c@40005400 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005400 0x400>;
   clocks = <&rcc 0x09C 0x00200000>;
   interrupts = <55 0>, <56 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c2: i2c@40005800 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005800 0x400>;
   clocks = <&rcc 0x09C 0x00400000>;
   interrupts = <57 0>, <58 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c3: i2c@46002800 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x46002800 0x400>;
   clocks = <&rcc 0x0A8 0x00000080>;
   interrupts = <88 0>, <89 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c4: i2c@40008400 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40008400 0x400>;
   clocks = <&rcc 0x0A0 0x00000002>;
   interrupts = <101 0>, <100 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  lptim1: timers@46004400 {
   compatible = "st,stm32-lptim";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x46004400 0x400>;
   clocks = <&rcc 0x0A8 0x00000800>;
   interrupts = <67 1>;
   interrupt-names = "wakeup";
   st,static-prescaler;
   status = "disabled";
  };

  lptim2: timers@40009400 {
   compatible = "st,stm32-lptim";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40009400 0x400>;
   clocks = <&rcc 0x0A0 0x00000020>;
   interrupts = <68 0>;
   interrupt-names = "global";
   st,static-prescaler;
   status = "disabled";
  };

  lptim3: timers@46004800 {
   compatible = "st,stm32-lptim";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x46004800 0x400>;
   clocks = <&rcc 0x0A8 0x00001000>;
   interrupts = <98 0>;
   interrupt-names = "global";
   st,static-prescaler;
   status = "disabled";
  };

  lptim4: timers@46004c00 {
   compatible = "st,stm32-lptim";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x46004c00 0x400>;
   clocks = <&rcc 0x0A8 0x00002000>;
   interrupts = <110 0>;
   interrupt-names = "global";
   st,static-prescaler;
   status = "disabled";
  };

  rtc: rtc@46007800 {
   compatible = "st,stm32-rtc";
   reg = <0x46007800 0x400>;
   interrupts = <2 0>;
   clocks = <&rcc 0x0A8 0x00200000>;
   prescaler = <32768>;
   status = "disabled";
  };

  timers1: timers@40012c00 {
   compatible = "st,stm32-timers";
   reg = <0x40012c00 0x400>;
   clocks = <&rcc 0x0A4 0x00000800>;
   resets = <&rctl (((0x7C) << 5U) | (11U))>;
   interrupts = <41 0>, <42 0>, <43 0>, <44 0>;
   interrupt-names = "brk", "up", "trgcom", "cc";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers2: timers@40000000 {
   compatible = "st,stm32-timers";
   reg = <0x40000000 0x400>;
   clocks = <&rcc 0x09C 0x00000001>;
   resets = <&rctl (((0x74) << 5U) | (0U))>;
   interrupts = <45 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers3: timers@40000400 {
   compatible = "st,stm32-timers";
   reg = <0x40000400 0x400>;
   clocks = <&rcc 0x09C 0x00000002>;
   resets = <&rctl (((0x74) << 5U) | (1U))>;
   interrupts = <46 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers4: timers@40000800 {
   compatible = "st,stm32-timers";
   reg = <0x40000800 0x400>;
   clocks = <&rcc 0x09C 0x00000004>;
   resets = <&rctl (((0x74) << 5U) | (2U))>;
   interrupts = <47 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers5: timers@40000c00 {
   compatible = "st,stm32-timers";
   reg = <0x40000c00 0x400>;
   clocks = <&rcc 0x09C 0x00000008>;
   resets = <&rctl (((0x74) << 5U) | (3U))>;
   interrupts = <48 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers6: timers@40001000 {
   compatible = "st,stm32-timers";
   reg = <0x40001000 0x400>;
   clocks = <&rcc 0x09C 0x00000010>;
   resets = <&rctl (((0x74) << 5U) | (4U))>;
   interrupts = <49 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers7: timers@40001400 {
   compatible = "st,stm32-timers";
   reg = <0x40001400 0x400>;
   clocks = <&rcc 0x09C 0x00000020>;
   resets = <&rctl (((0x74) << 5U) | (5U))>;
   interrupts = <50 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers8: timers@40013400 {
   compatible = "st,stm32-timers";
   reg = <0x40013400 0x400>;
   clocks = <&rcc 0x0A4 0x00002000>;
   resets = <&rctl (((0x7C) << 5U) | (13U))>;
   interrupts = <51 0>, <52 0>, <53 0>, <54 0>;
   interrupt-names = "brk", "up", "trgcom", "cc";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers15: timers@40014000 {
   compatible = "st,stm32-timers";
   reg = <0x40014000 0x400>;
   clocks = <&rcc 0x0A4 0x00010000>;
   resets = <&rctl (((0x7C) << 5U) | (16U))>;
   interrupts = <69 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers16: timers@40014400 {
   compatible = "st,stm32-timers";
   reg = <0x40014400 0x400>;
   clocks = <&rcc 0x0A4 0x00020000>;
   resets = <&rctl (((0x7C) << 5U) | (17U))>;
   interrupts = <70 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers17: timers@40014800 {
   compatible = "st,stm32-timers";
   reg = <0x40014800 0x400>;
   clocks = <&rcc 0x0A4 0x00040000>;
   resets = <&rctl (((0x7C) << 5U) | (18U))>;
   interrupts = <71 0>;
   interrupt-names = "global";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  octospi1: octospi@420d1400 {
   compatible = "st,stm32-ospi";
   reg = <0x420d1400 0x400>;
   interrupts = <76 0>;
   clock-names = "ospix", "ospi-ker", "ospi-mgr";
   clocks = <&rcc 0x090 0x00000010>,
    <&rcc 0x011 ((((0xE4) & 0xFFU) << 0U) | (((20) & 0x1FU) << 8U) | (((3) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>,
    <&rcc 0x08C 0x00200000>;
   #address-cells = <1>;
   #size-cells = <0>;
   status = "disabled";
  };

  octospi2: octospi@420d2400 {
   compatible = "st,stm32-ospi";
   reg = <0x420d2400 0x400>;
   interrupts = <120 0>;
   clock-names = "ospix", "ospi-ker", "ospi-mgr";
   clocks = <&rcc 0x090 0x00000100>,
    <&rcc 0x011 ((((0xE4) & 0xFFU) << 0U) | (((20) & 0x1FU) << 8U) | (((3) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>,
    <&rcc 0x08C 0x00200000>;
   #address-cells = <1>;
   #size-cells = <0>;
   status = "disabled";
  };

  aes: aes@420c0000 {
   compatible = "st,stm32-aes";
   reg = <0x420c0000 0x400>;
   clocks = <&rcc 0x08C 0x00010000>;
   interrupts = <93 0>;
   status = "disabled";
  };

  rng: rng@420c0800 {
   compatible = "st,stm32-rng";
   reg = <0x420c0800 0x400>;
   clocks = <&rcc 0x08C 0x00040000>;
   interrupts = <94 0>;
   nist-config = <0xf60d00>;
   health-test-config = <0x9aae>;
   status = "disabled";
  };
# 740 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u5.dtsi" 3 4
  sdmmc1: sdmmc@420c8000 {
   compatible = "st,stm32-sdmmc";
   reg = <0x420c8000 0x400>;
   clocks = <&rcc 0x08C 0x08000000>,
     <&rcc 0x00E ((((0xE4) & 0xFFU) << 0U) | (((14) & 0x1FU) << 8U) | (((1) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
   resets = <&rctl (((0x64) << 5U) | (27U))>;
   interrupts = <78 0>;
   status = "disabled";
  };

  sdmmc2: sdmmc@420c8c00 {
   compatible = "st,stm32-sdmmc";
   reg = <0x420c8c00 0x400>;
   clocks = <&rcc 0x08C 0x10000000>,
     <&rcc 0x00E ((((0xE4) & 0xFFU) << 0U) | (((14) & 0x1FU) << 8U) | (((1) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
   resets = <&rctl (((0x64) << 5U) | (28U))>;
   interrupts = <79 0>;
   status = "disabled";
  };

  dac1: dac@46021800 {
   compatible = "st,stm32-dac";
   reg = <0x46021800 0x400>;
   clocks = <&rcc 0x094 0x00000040>;
   status = "disabled";
   #io-channel-cells = <1>;
  };

  adc1: adc@42028000 {
   compatible = "st,stm32-adc";
   reg = <0x42028000 0x400>;
   clocks = <&rcc 0x08C 0x00000400>;
   interrupts = <37 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((2) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x00) & ((1 << (3)) - 1)) << 16U) | (((14) & ((1 << (13)) - 1)) << 19U))
           ((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((2) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x01) & ((1 << (3)) - 1)) << 16U) | (((12) & ((1 << (13)) - 1)) << 19U))
           ((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((2) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x02) & ((1 << (3)) - 1)) << 16U) | (((10) & ((1 << (13)) - 1)) << 19U))
           ((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((2) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x03) & ((1 << (3)) - 1)) << 16U) | (((8) & ((1 << (13)) - 1)) << 19U))>;
   sampling-times = <5 6 12 20 36 68 391 814>;
   st,adc-clock-source = <2>;
   st,adc-sequencer = <1>;
  };

  adc4: adc@46021000 {
   compatible = "st,stm32-adc";
   reg = <0x46021000 0x400>;
   clocks = <&rcc 0x094 0x00000020>;
   interrupts = <113 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((2) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x00) & ((1 << (3)) - 1)) << 16U) | (((12) & ((1 << (13)) - 1)) << 19U))
           ((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((2) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x01) & ((1 << (3)) - 1)) << 16U) | (((10) & ((1 << (13)) - 1)) << 19U))
           ((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((2) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x02) & ((1 << (3)) - 1)) << 16U) | (((8) & ((1 << (13)) - 1)) << 19U))
           ((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((2) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x03) & ((1 << (3)) - 1)) << 16U) | (((6) & ((1 << (13)) - 1)) << 19U))>;
   sampling-times = <2 4 8 13 20 40 80 815>;
   num-sampling-time-common-channels = <2>;
   st,adc-clock-source = <2>;
   st,adc-sequencer = <0>;
  };

  fdcan1: can@4000a400 {
   compatible = "st,stm32-fdcan";
   reg = <0x4000a400 0x400>, <0x4000ac00 0x350>;
   reg-names = "m_can", "message_ram";
   interrupts = <39 0>, <40 0>;
   interrupt-names = "LINE_0", "LINE_1";
   clocks = <&rcc 0x0A0 0x00000200>;
   bosch,mram-cfg = <0x0 28 8 3 3 0 3 3>;
   sample-point = <875>;
   sample-point-data = <875>;
   status = "disabled";
  };

  ucpd1: ucpd@4000dc00 {
   compatible = "st,stm32-ucpd";
   reg = <0x4000dc00 0x400>;
   clocks = <&rcc 0x09C 0x00800000>;
   interrupts = <106 0>;
   status = "disabled";
  };

  gpdma1: dma@40020000 {
   compatible = "st,stm32u5-dma";
   #dma-cells = <3>;
   reg = <0x40020000 0x400>;
   interrupts = <29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0
     80 0 81 0 82 0 83 0 84 0 85 0 86 0 87 0>;
   clocks = <&rcc 0x088 0x1>;
   dma-channels = <16>;
   dma-requests = <114>;
   dma-offset = <0>;
   status = "disabled";
  };

  fmc: memory-controller@420d0400 {
   compatible = "st,stm32-fmc";
   reg = <0x420d0400 0x400>;
   clocks = <&rcc 0x090 0x00000001>;
   status = "disabled";

   sram {
    compatible = "st,stm32-fmc-nor-psram";
    #address-cells = <1>;
    #size-cells = <0>;
    status = "disabled";
   };
  };
 };

 die_temp: dietemp {
  compatible = "st,stm32-temp-cal";
  ts-cal1-addr = <0x0BFA0710>;
  ts-cal2-addr = <0x0BFA0742>;
  ts-cal1-temp = <30>;
  ts-cal2-temp = <130>;
  ts-cal-vrefanalog = <3000>;
  ts-cal-resolution = <14>;
  io-channels = <&adc1 19>;
  status = "disabled";
 };

 vref1: vref_1 {
  compatible = "st,stm32-vref";
  vrefint-cal-addr = <0x0BFA07A5>;
  vrefint-cal-mv = <3000>;
  io-channels = <&adc1 0>;
  status = "disabled";
 };

 vref4: vref_4 {
  compatible = "st,stm32-vref";
  vrefint-cal-addr = <0x0BFA07A5>;
  vrefint-cal-mv = <3000>;
  io-channels = <&adc4 0>;
  status = "disabled";
 };

 vbat1: vbat_1 {
  compatible = "st,stm32-vbat";
  ratio = <4>;
  io-channels = <&adc1 18>;
  status = "disabled";
 };

 vbat4: vbat_4 {
  compatible = "st,stm32-vbat";
  ratio = <4>;
  io-channels = <&adc4 14>;
  status = "disabled";
 };
};

&nvic {
 arm,num-irq-priority-bits = <4>;
};
# 8 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u575.dtsi" 2 3 4


/ {
 soc {
  compatible = "st,stm32u575", "st,stm32u5", "simple-bus";

  usbotg_fs: otgfs@42040000 {
   compatible = "st,stm32-otgfs";
   reg = <0x42040000 0x80000>;
   interrupts = <73 0>;
   interrupt-names = "otgfs";
   num-bidir-endpoints = <6>;
   ram-size = <1280>;
   maximum-speed = "full-speed";
   clocks = <&rcc 0x08C 0x00004000>,
     <&rcc 0x00E ((((0xE0) & 0xFFU) << 0U) | (((26) & 0x1FU) << 8U) | (((3) & 0x7U) << 13U) | (((0) & 0x7U) << 16U))>;
   phys = <&otgfs_phy>;
   status = "disabled";
  };
 };

 otgfs_phy: otgfs_phy {
  compatible = "usb-nop-xceiv";
  #phy-cells = <0>;
 };
};
# 8 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u585.dtsi" 2 3 4

/ {
 soc {
  compatible = "st,stm32u585", "st,stm32u5", "simple-bus";
 };
};
# 8 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/dts/arm/st/u5/stm32u585Xi.dtsi" 2 3 4

/ {
 sram0: memory@20000000 {

  reg = <0x20000000 ((768) * 1024)>;
 };

 soc {
  flash-controller@40022000 {
   flash0: flash@8000000 {
    reg = <0x08000000 ((2) * 1024 * 1024)>;
   };
  };
 };
};
# 8 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/arm/b_u585i_iot02a/b_u585i_iot02a-common.dtsi" 2
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/modules/hal/stm32/dts/st/u5/stm32u585aiixq-pinctrl.dtsi" 1 3 4






# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 1 3 4
# 10 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 3 4
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl-common.h" 1 3 4
# 11 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 2 3 4
# 8 "/home/mhuber/MINE/REPOS/zephyr-rail/modules/hal/stm32/dts/st/u5/stm32u585aiixq-pinctrl.dtsi" 2 3 4

/ {
 soc {
  pinctrl: pin-controller@42020000 {



   /omit-if-no-ref/ adc1_in5_pa0: adc1_in5_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in6_pa1: adc1_in6_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in7_pa2: adc1_in7_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in8_pa3: adc1_in8_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in9_pa4: adc1_in9_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in10_pa5: adc1_in10_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in11_pa6: adc1_in11_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in12_pa7: adc1_in12_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in15_pb0: adc1_in15_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in16_pb1: adc1_in16_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in17_pb2: adc1_in17_pb2 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in1_pc0: adc1_in1_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in2_pc1: adc1_in2_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in3_pc2: adc1_in3_pc2 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in4_pc3: adc1_in4_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in13_pc4: adc1_in13_pc4 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in14_pc5: adc1_in14_pc5 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in9_pa4: adc4_in9_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in10_pa5: adc4_in10_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in11_pa6: adc4_in11_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in20_pa7: adc4_in20_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in18_pb0: adc4_in18_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in19_pb1: adc4_in19_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in1_pc0: adc4_in1_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in2_pc1: adc4_in2_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in3_pc2: adc4_in3_pc2 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in4_pc3: adc4_in4_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in22_pc4: adc4_in22_pc4 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in23_pc5: adc4_in23_pc5 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in15_pd11: adc4_in15_pd11 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in16_pd12: adc4_in16_pd12 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in17_pd13: adc4_in17_pd13 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in5_pf14: adc4_in5_pf14 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in6_pf15: adc4_in6_pf15 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in7_pg0: adc4_in7_pg0 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc4_in8_pg1: adc4_in8_pg1 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ analog_pa0: analog_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa1: analog_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa2: analog_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa3: analog_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa4: analog_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa5: analog_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa6: analog_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa7: analog_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa8: analog_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa9: analog_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa10: analog_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa11: analog_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa12: analog_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa13: analog_pa13 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa14: analog_pa14 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa15: analog_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb0: analog_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb1: analog_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb2: analog_pb2 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb3: analog_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb4: analog_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb5: analog_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb6: analog_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb7: analog_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb8: analog_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb9: analog_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb10: analog_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb11: analog_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb12: analog_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb13: analog_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb14: analog_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb15: analog_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc0: analog_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc1: analog_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc2: analog_pc2 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc3: analog_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc4: analog_pc4 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc5: analog_pc5 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc6: analog_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc7: analog_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc8: analog_pc8 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc9: analog_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc10: analog_pc10 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc11: analog_pc11 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc12: analog_pc12 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc13: analog_pc13 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc14: analog_pc14 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc15: analog_pc15 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd0: analog_pd0 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd1: analog_pd1 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd2: analog_pd2 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd3: analog_pd3 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd4: analog_pd4 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd5: analog_pd5 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd6: analog_pd6 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd7: analog_pd7 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd8: analog_pd8 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd9: analog_pd9 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd10: analog_pd10 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd11: analog_pd11 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd12: analog_pd12 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd13: analog_pd13 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd14: analog_pd14 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd15: analog_pd15 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe0: analog_pe0 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe1: analog_pe1 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe2: analog_pe2 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe3: analog_pe3 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe4: analog_pe4 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe5: analog_pe5 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe6: analog_pe6 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe7: analog_pe7 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe8: analog_pe8 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe9: analog_pe9 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe10: analog_pe10 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe11: analog_pe11 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe12: analog_pe12 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe13: analog_pe13 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe14: analog_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe15: analog_pe15 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf0: analog_pf0 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf1: analog_pf1 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf2: analog_pf2 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf3: analog_pf3 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf4: analog_pf4 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf5: analog_pf5 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf6: analog_pf6 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf7: analog_pf7 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf8: analog_pf8 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf9: analog_pf9 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf10: analog_pf10 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf11: analog_pf11 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf12: analog_pf12 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf13: analog_pf13 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf14: analog_pf14 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf15: analog_pf15 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg0: analog_pg0 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg1: analog_pg1 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg2: analog_pg2 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg3: analog_pg3 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg4: analog_pg4 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg5: analog_pg5 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg6: analog_pg6 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg7: analog_pg7 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg8: analog_pg8 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg9: analog_pg9 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg10: analog_pg10 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg12: analog_pg12 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg15: analog_pg15 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph0: analog_ph0 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph1: analog_ph1 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph2: analog_ph2 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph3: analog_ph3 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph4: analog_ph4 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph5: analog_ph5 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph6: analog_ph6 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph7: analog_ph7 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph8: analog_ph8 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph9: analog_ph9 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph10: analog_ph10 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph11: analog_ph11 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph12: analog_ph12 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph13: analog_ph13 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph14: analog_ph14 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph15: analog_ph15 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi0: analog_pi0 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi1: analog_pi1 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi2: analog_pi2 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi3: analog_pi3 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi4: analog_pi4 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi5: analog_pi5 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi6: analog_pi6 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi7: analog_pi7 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ dac1_out1_pa4: dac1_out1_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ dac1_out2_pa5: dac1_out2_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ fdcan1_rx_pa11: fdcan1_rx_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_rx_pb8: fdcan1_rx_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_rx_pd0: fdcan1_rx_pd0 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_rx_pf7: fdcan1_rx_pf7 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_rx_ph14: fdcan1_rx_ph14 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ fdcan1_tx_pa12: fdcan1_tx_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_tx_pb9: fdcan1_tx_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_tx_pd1: fdcan1_tx_pd1 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_tx_pf8: fdcan1_tx_pf8 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_tx_ph13: fdcan1_tx_ph13 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ fmc_nl_pb7: fmc_nl_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nbl1_pb15: fmc_nbl1_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d2_pd0: fmc_d2_pd0 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d3_pd1: fmc_d3_pd1 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_clk_pd3: fmc_clk_pd3 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_noe_pd4: fmc_noe_pd4 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nwe_pd5: fmc_nwe_pd5 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nwait_pd6: fmc_nwait_pd6 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nce_pd7: fmc_nce_pd7 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne1_pd7: fmc_ne1_pd7 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d13_pd8: fmc_d13_pd8 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d14_pd9: fmc_d14_pd9 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d15_pd10: fmc_d15_pd10 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a16_pd11: fmc_a16_pd11 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a17_pd12: fmc_a17_pd12 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a18_pd13: fmc_a18_pd13 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d0_pd14: fmc_d0_pd14 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d1_pd15: fmc_d1_pd15 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nbl0_pe0: fmc_nbl0_pe0 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nbl1_pe1: fmc_nbl1_pe1 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a23_pe2: fmc_a23_pe2 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a19_pe3: fmc_a19_pe3 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a20_pe4: fmc_a20_pe4 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a21_pe5: fmc_a21_pe5 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a22_pe6: fmc_a22_pe6 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d4_pe7: fmc_d4_pe7 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d5_pe8: fmc_d5_pe8 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d6_pe9: fmc_d6_pe9 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d7_pe10: fmc_d7_pe10 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d8_pe11: fmc_d8_pe11 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d9_pe12: fmc_d9_pe12 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d10_pe13: fmc_d10_pe13 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d11_pe14: fmc_d11_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d12_pe15: fmc_d12_pe15 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a0_pf0: fmc_a0_pf0 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a1_pf1: fmc_a1_pf1 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a2_pf2: fmc_a2_pf2 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a3_pf3: fmc_a3_pf3 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a4_pf4: fmc_a4_pf4 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a5_pf5: fmc_a5_pf5 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a6_pf12: fmc_a6_pf12 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a7_pf13: fmc_a7_pf13 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a8_pf14: fmc_a8_pf14 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a9_pf15: fmc_a9_pf15 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a10_pg0: fmc_a10_pg0 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a11_pg1: fmc_a11_pg1 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a12_pg2: fmc_a12_pg2 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a13_pg3: fmc_a13_pg3 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a14_pg4: fmc_a14_pg4 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a15_pg5: fmc_a15_pg5 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_int_pg7: fmc_int_pg7 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nce_pg9: fmc_nce_pg9 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne2_pg9: fmc_ne2_pg9 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne3_pg10: fmc_ne3_pg10 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne4_pg12: fmc_ne4_pg12 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2c1_scl_pb6: i2c1_scl_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_scl_pb8: i2c1_scl_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_pb10: i2c2_scl_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_pb13: i2c2_scl_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_pf1: i2c2_scl_pf1 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_ph4: i2c2_scl_ph4 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_scl_pa7: i2c3_scl_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_scl_pc0: i2c3_scl_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_scl_pg7: i2c3_scl_pg7 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_scl_ph7: i2c3_scl_ph7 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pb6: i2c4_scl_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pb10: i2c4_scl_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pd12: i2c4_scl_pd12 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pf14: i2c4_scl_pf14 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_sda_pb3: i2c1_sda_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_sda_pb7: i2c1_sda_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_sda_pb9: i2c1_sda_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pb11: i2c2_sda_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pb14: i2c2_sda_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pf0: i2c2_sda_pf0 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_ph5: i2c2_sda_ph5 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_sda_pb4: i2c3_sda_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_sda_pc1: i2c3_sda_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_sda_pg8: i2c3_sda_pg8 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_sda_ph8: i2c3_sda_ph8 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pb7: i2c4_sda_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pb11: i2c4_sda_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pd13: i2c4_sda_pd13 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pf15: i2c4_sda_pf15 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ octospim_p2_ncs_pa0: octospim_p2_ncs_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_dqs_pa1: octospim_p1_dqs_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_ncs_pa2: octospim_p1_ncs_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_clk_pa3: octospim_p1_clk_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_ncs_pa4: octospim_p1_ncs_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io3_pa6: octospim_p1_io3_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io2_pa7: octospim_p1_io2_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_ncs_pa12: octospim_p2_ncs_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io1_pb0: octospim_p1_io1_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io0_pb1: octospim_p1_io0_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_dqs_pb2: octospim_p1_dqs_pb2 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_nclk_pb5: octospim_p1_nclk_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_clk_pb10: octospim_p1_clk_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_ncs_pb11: octospim_p1_ncs_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_nclk_pb12: octospim_p1_nclk_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io7_pc0: octospim_p1_io7_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io4_pc1: octospim_p1_io4_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io5_pc2: octospim_p1_io5_pc2 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io6_pc3: octospim_p1_io6_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io7_pc4: octospim_p1_io7_pc4 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_ncs_pc11: octospim_p1_ncs_pc11 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_ncs_pd3: octospim_p2_ncs_pd3 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io4_pd4: octospim_p1_io4_pd4 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io5_pd5: octospim_p1_io5_pd5 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io6_pd6: octospim_p1_io6_pd6 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io7_pd7: octospim_p1_io7_pd7 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_dqs_pe3: octospim_p1_dqs_pe3 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_nclk_pe9: octospim_p1_nclk_pe9 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_clk_pe10: octospim_p1_clk_pe10 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_ncs_pe11: octospim_p1_ncs_pe11 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io0_pe12: octospim_p1_io0_pe12 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io1_pe13: octospim_p1_io1_pe13 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io2_pe14: octospim_p1_io2_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io3_pe15: octospim_p1_io3_pe15 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io0_pf0: octospim_p2_io0_pf0 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io1_pf1: octospim_p2_io1_pf1 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io2_pf2: octospim_p2_io2_pf2 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io3_pf3: octospim_p2_io3_pf3 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_clk_pf4: octospim_p2_clk_pf4 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_nclk_pf5: octospim_p2_nclk_pf5 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io3_pf6: octospim_p1_io3_pf6 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_ncs_pf6: octospim_p2_ncs_pf6 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io2_pf7: octospim_p1_io2_pf7 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io0_pf8: octospim_p1_io0_pf8 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io1_pf9: octospim_p1_io1_pf9 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_clk_pf10: octospim_p1_clk_pf10 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_nclk_pf11: octospim_p1_nclk_pf11 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_dqs_pf12: octospim_p2_dqs_pf12 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io4_pg0: octospim_p2_io4_pg0 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io5_pg1: octospim_p2_io5_pg1 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_dqs_pg6: octospim_p1_dqs_pg6 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_dqs_pg7: octospim_p2_dqs_pg7 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io6_pg9: octospim_p2_io6_pg9 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io7_pg10: octospim_p2_io7_pg10 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_ncs_pg12: octospim_p2_ncs_pg12 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_dqs_pg15: octospim_p2_dqs_pg15 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io4_ph2: octospim_p1_io4_ph2 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_dqs_ph4: octospim_p2_dqs_ph4 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_clk_ph6: octospim_p2_clk_ph6 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_nclk_ph7: octospim_p2_nclk_ph7 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io3_ph8: octospim_p2_io3_ph8 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io4_ph9: octospim_p2_io4_ph9 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io5_ph10: octospim_p2_io5_ph10 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io6_ph11: octospim_p2_io6_ph11 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io7_ph12: octospim_p2_io7_ph12 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io6_ph15: octospim_p2_io6_ph15 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p1_io5_pi0: octospim_p1_io5_pi0 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io2_pi1: octospim_p2_io2_pi1 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io1_pi2: octospim_p2_io1_pi2 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_io0_pi3: octospim_p2_io0_pi3 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_ncs_pi5: octospim_p2_ncs_pi5 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_clk_pi6: octospim_p2_clk_pi6 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ octospim_p2_nclk_pi7: octospim_p2_nclk_pi7 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ sdmmc1_ckin_pb8: sdmmc1_ckin_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d4_pb8: sdmmc1_d4_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_cdir_pb9: sdmmc1_cdir_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d5_pb9: sdmmc1_d5_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d5_pc0: sdmmc1_d5_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d0dir_pc6: sdmmc1_d0dir_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d6_pc6: sdmmc1_d6_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d123dir_pc7: sdmmc1_d123dir_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d7_pc7: sdmmc1_d7_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d0_pc8: sdmmc1_d0_pc8 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d1_pc9: sdmmc1_d1_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d2_pc10: sdmmc1_d2_pc10 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d3_pc11: sdmmc1_d3_pc11 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_ck_pc12: sdmmc1_ck_pc12 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_cmd_pd2: sdmmc1_cmd_pd2 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_cmd_pa0: sdmmc2_cmd_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d2_pb3: sdmmc2_d2_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d3_pb4: sdmmc2_d3_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d4_pb8: sdmmc2_d4_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d5_pb9: sdmmc2_d5_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d0_pb14: sdmmc2_d0_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d1_pb15: sdmmc2_d1_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_ck_pc1: sdmmc2_ck_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d6_pc6: sdmmc2_d6_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d7_pc7: sdmmc2_d7_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_ck_pd6: sdmmc2_ck_pd6 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_cmd_pd7: sdmmc2_cmd_pd7 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ spi1_miso_pa6: spi1_miso_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_pa11: spi1_miso_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_pb4: spi1_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_pe14: spi1_miso_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_pg3: spi1_miso_pg3 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pb14: spi2_miso_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pc2: spi2_miso_pc2 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pd3: spi2_miso_pd3 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pi2: spi2_miso_pi2 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_miso_pb4: spi3_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_miso_pc11: spi3_miso_pc11 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_miso_pg10: spi3_miso_pg10 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_mosi_pa7: spi1_mosi_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_mosi_pa12: spi1_mosi_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_mosi_pb5: spi1_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_mosi_pe15: spi1_mosi_pe15 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_mosi_pg4: spi1_mosi_pg4 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pb15: spi2_mosi_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pc1: spi2_mosi_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pc3: spi2_mosi_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pd4: spi2_mosi_pd4 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pi3: spi2_mosi_pi3 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pb5: spi3_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pc12: spi3_mosi_pc12 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pd6: spi3_mosi_pd6 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_nss_pa4: spi1_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_pa15: spi1_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_pb0: spi1_nss_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_pe12: spi1_nss_pe12 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_pg5: spi1_nss_pg5 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb9: spi2_nss_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb12: spi2_nss_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pd0: spi2_nss_pd0 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pi0: spi2_nss_pi0 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi3_nss_pa4: spi3_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi3_nss_pa15: spi3_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi3_nss_pg12: spi3_nss_pg12 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ spi1_sck_pa1: spi1_sck_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi1_sck_pa5: spi1_sck_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi1_sck_pb3: spi1_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi1_sck_pe13: spi1_sck_pe13 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi1_sck_pg2: spi1_sck_pg2 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pa9: spi2_sck_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pb10: spi2_sck_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pb13: spi2_sck_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pd1: spi2_sck_pd1 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pd3: spi2_sck_pd3 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pi1: spi2_sck_pi1 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pb3: spi3_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pc10: spi3_sck_pc10 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pg9: spi3_sck_pg9 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ tim1_bkin_pa6: tim1_bkin_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin2_pa11: tim1_bkin2_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin_pb12: tim1_bkin_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin2_pe14: tim1_bkin2_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin_pe15: tim1_bkin_pe15 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_bkin_pa9: tim15_bkin_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_bkin_pb12: tim15_bkin_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_bkin_pb5: tim16_bkin_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_bkin_pa10: tim17_bkin_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_bkin_pb4: tim17_bkin_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin_pa6: tim8_bkin_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin2_pb6: tim8_bkin2_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin_pb7: tim8_bkin_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin2_pc9: tim8_bkin2_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin_pi4: tim8_bkin_pi4 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ tim1_ch1n_pa7: tim1_ch1n_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pa8: tim1_ch1_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pa9: tim1_ch2_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pa10: tim1_ch3_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pa11: tim1_ch4_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pb0: tim1_ch2n_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb1: tim1_ch3n_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pb13: tim1_ch1n_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pb14: tim1_ch2n_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb15: tim1_ch3n_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4n_pc5: tim1_ch4n_pc5 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pe8: tim1_ch1n_pe8 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pe9: tim1_ch1_pe9 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pe10: tim1_ch2n_pe10 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pe11: tim1_ch2_pe11 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pe12: tim1_ch3n_pe12 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pe13: tim1_ch3_pe13 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pe14: tim1_ch4_pe14 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4n_pe15: tim1_ch4n_pe15 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa0: tim2_ch1_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pa1: tim2_ch2_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pa2: tim2_ch3_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pa3: tim2_ch4_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa5: tim2_ch1_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa15: tim2_ch1_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pb3: tim2_ch2_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pb10: tim2_ch3_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pb11: tim2_ch4_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pa6: tim3_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pa7: tim3_ch2_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pb0: tim3_ch3_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pb1: tim3_ch4_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pb4: tim3_ch1_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pb5: tim3_ch2_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pc6: tim3_ch1_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pc7: tim3_ch2_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pc8: tim3_ch3_pc8 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pc9: tim3_ch4_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pe3: tim3_ch1_pe3 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pe4: tim3_ch2_pe4 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pe5: tim3_ch3_pe5 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pe6: tim3_ch4_pe6 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pb6: tim4_ch1_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pb7: tim4_ch2_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pb8: tim4_ch3_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pb9: tim4_ch4_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pd12: tim4_ch1_pd12 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pd13: tim4_ch2_pd13 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pd14: tim4_ch3_pd14 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pd15: tim4_ch4_pd15 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch1_pa0: tim5_ch1_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1n_pa1: tim15_ch1n_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch2_pa1: tim5_ch2_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1_pa2: tim15_ch1_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch3_pa2: tim5_ch3_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch2_pa3: tim15_ch2_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch4_pa3: tim5_ch4_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1n_pb13: tim15_ch1n_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1_pb14: tim15_ch1_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch2_pb15: tim15_ch2_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch1_pf6: tim5_ch1_pf6 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch2_pf7: tim5_ch2_pf7 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch3_pf8: tim5_ch3_pf8 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1_pf9: tim15_ch1_pf9 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch4_pf9: tim5_ch4_pf9 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch2_pf10: tim15_ch2_pf10 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1n_pg9: tim15_ch1n_pg9 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1_pg10: tim15_ch1_pg10 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch1_ph10: tim5_ch1_ph10 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch2_ph11: tim5_ch2_ph11 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch3_ph12: tim5_ch3_ph12 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch4_pi0: tim5_ch4_pi0 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1_pa6: tim16_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1n_pb6: tim16_ch1n_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1_pb8: tim16_ch1_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1_pe0: tim16_ch1_pe0 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1_pa7: tim17_ch1_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1n_pb7: tim17_ch1n_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1_pb9: tim17_ch1_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1_pe1: tim17_ch1_pe1 {
    pinmux = <((((('E') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1n_pa5: tim8_ch1n_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1n_pa7: tim8_ch1n_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_pb0: tim8_ch2n_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3n_pb1: tim8_ch3n_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch4n_pb2: tim8_ch4n_pb2 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_pb14: tim8_ch2n_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3n_pb15: tim8_ch3n_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1_pc6: tim8_ch1_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2_pc7: tim8_ch2_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3_pc8: tim8_ch3_pc8 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch4_pc9: tim8_ch4_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch4n_pd0: tim8_ch4n_pd0 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch4n_ph12: tim8_ch4n_ph12 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1n_ph13: tim8_ch1n_ph13 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_ph14: tim8_ch2n_ph14 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3n_ph15: tim8_ch3n_ph15 {
    pinmux = <((((('H') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch4_pi2: tim8_ch4_pi2 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1_pi5: tim8_ch1_pi5 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2_pi6: tim8_ch2_pi6 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3_pi7: tim8_ch3_pi7 {
    pinmux = <((((('I') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ lpuart1_cts_pa6: lpuart1_cts_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart1_cts_pa11: usart1_cts_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart1_cts_pb4: usart1_cts_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ lpuart1_cts_pb13: lpuart1_cts_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ lpuart1_cts_pg5: lpuart1_cts_pg5 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_cts_pa0: usart2_cts_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_cts_pd3: usart2_cts_pd3 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_cts_pa6: usart3_cts_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_cts_pb13: usart3_cts_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_cts_pd11: usart3_cts_pd11 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart4_cts_pb7: uart4_cts_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart5_cts_pb5: uart5_cts_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ usart1_de_pa12: usart1_de_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ lpuart1_de_pb1: lpuart1_de_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart1_de_pb3: usart1_de_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ lpuart1_de_pb12: lpuart1_de_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ lpuart1_de_pg6: lpuart1_de_pg6 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart1_de_pg12: usart1_de_pg12 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart2_de_pa1: usart2_de_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart2_de_pd4: usart2_de_pd4 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart3_de_pa15: usart3_de_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart3_de_pb1: usart3_de_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart3_de_pb14: usart3_de_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart3_de_pd2: usart3_de_pd2 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart3_de_pd12: usart3_de_pd12 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart4_de_pa15: uart4_de_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart5_de_pb4: uart5_de_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };



   /omit-if-no-ref/ usart1_rts_pa12: usart1_rts_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ lpuart1_rts_pb1: lpuart1_rts_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart1_rts_pb3: usart1_rts_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ lpuart1_rts_pb12: lpuart1_rts_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ lpuart1_rts_pg6: lpuart1_rts_pg6 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart1_rts_pg12: usart1_rts_pg12 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_rts_pa1: usart2_rts_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_rts_pd4: usart2_rts_pd4 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_rts_pa15: usart3_rts_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_rts_pb1: usart3_rts_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_rts_pb14: usart3_rts_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_rts_pd2: usart3_rts_pd2 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_rts_pd12: usart3_rts_pd12 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart4_rts_pa15: uart4_rts_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ uart5_rts_pb4: uart5_rts_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ lpuart1_rx_pa3: lpuart1_rx_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pa10: usart1_rx_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pb7: usart1_rx_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ lpuart1_rx_pb10: lpuart1_rx_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ lpuart1_rx_pc0: lpuart1_rx_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ lpuart1_rx_pg8: lpuart1_rx_pg8 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pg10: usart1_rx_pg10 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pa3: usart2_rx_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pa15: usart2_rx_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pd6: usart2_rx_pd6 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pa5: usart3_rx_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pb11: usart3_rx_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pc5: usart3_rx_pc5 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pc11: usart3_rx_pc11 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pd9: usart3_rx_pd9 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pa1: uart4_rx_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pc11: uart4_rx_pc11 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart5_rx_pd2: uart5_rx_pd2 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ lpuart1_tx_pa2: lpuart1_tx_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pa9: usart1_tx_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pb6: usart1_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ lpuart1_tx_pb11: lpuart1_tx_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ lpuart1_tx_pc1: lpuart1_tx_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ lpuart1_tx_pg7: lpuart1_tx_pg7 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pg9: usart1_tx_pg9 {
    pinmux = <((((('G') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pa2: usart2_tx_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pd5: usart2_tx_pd5 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pa7: usart3_tx_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pb10: usart3_tx_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pc4: usart3_tx_pc4 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pc10: usart3_tx_pc10 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pd8: usart3_tx_pd8 {
    pinmux = <((((('D') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pa0: uart4_tx_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pc10: uart4_tx_pc10 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart5_tx_pc12: uart5_tx_pc12 {
    pinmux = <((((('C') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ ucpd1_cc1_pa15: ucpd1_cc1_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ucpd1_cc2_pb15: ucpd1_cc2_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usb_otg_fs_sof_pa8: usb_otg_fs_sof_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_vbus_pa9: usb_otg_fs_vbus_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_id_pa10: usb_otg_fs_id_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_dm_pa11: usb_otg_fs_dm_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_dp_pa12: usb_otg_fs_dp_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_sof_pa14: usb_otg_fs_sof_pa14 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

  };
 };
};
# 9 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/arm/b_u585i_iot02a/b_u585i_iot02a-common.dtsi" 2
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/arm/b_u585i_iot02a/arduino_r3_connector.dtsi" 1






/ {
 arduino_header: connector {
  compatible = "arduino-header-r3";
  #gpio-cells = <2>;
  gpio-map-mask = <0xffffffff 0xffffffc0>;
  gpio-map-pass-thru = <0 0x3f>;
  gpio-map = <0 0 &gpioc 0 0>,
      <1 0 &gpioc 2 0>,
      <2 0 &gpioc 4 0>,
      <3 0 &gpioc 5 0>,
      <4 0 &gpioa 7 0>,
      <5 0 &gpiob 0 0>,
      <6 0 &gpiod 8 0>,
      <7 0 &gpiod 9 0>,
      <8 0 &gpiod 15 0>,
      <9 0 &gpiob 2 0>,
      <10 0 &gpioe 7 0>,
      <11 0 &gpioe 0 0>,
      <12 0 &gpiob 6 0>,
      <13 0 &gpiof 13 0>,
      <14 0 &gpioc 1 0>,
      <15 0 &gpioa 8 0>,
      <16 0 &gpioe 12 0>,
      <17 0 &gpioe 15 0>,
      <18 0 &gpioe 14 0>,
      <19 0 &gpioe 13 0>,
      <20 0 &gpiob 9 0>,
      <21 0 &gpiob 8 0>;
 };
};

arduino_spi: &spi1 {};
arduino_i2c: &i2c1 {};
arduino_serial: &usart3 {};
# 10 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/arm/b_u585i_iot02a/b_u585i_iot02a-common.dtsi" 2
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/input/input-event-codes.h" 1 3 4
# 11 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/arm/b_u585i_iot02a/b_u585i_iot02a-common.dtsi" 2

/ {
 leds {
  compatible = "gpio-leds";
  green_led_1: led_1 {
   gpios = <&gpioh 7 (1 << 0)>;
   label = "User LD7";
  };
  red_led_1: led_3 {
   gpios = <&gpioh 6 (1 << 0)>;
   label = "User LD6";
  };
 };

 gpio_keys {
  compatible = "gpio-keys";
  user_button: button {
   label = "User";
   gpios = <&gpioc 13 ((1 << 0) | (1 << 4))>;
   zephyr,code = <11>;
  };
 };


 aliases {
  watchdog0 = &iwdg;
  spi-flash0 = &mx25lm51245;
  die-temp0 = &die_temp;
  volt-sensor0 = &vref1;
  volt-sensor1 = &vbat4;
 };
};

&clk_hsi48 {
 status = "okay";
};

&clk_lse {
 status = "okay";
};

&clk_msis {
 status = "okay";
 msi-range = <4>;
 msi-pll-mode;
};

&pll1 {
 div-m = <1>;
 mul-n = <80>;
 div-q = <2>;
 div-r = <2>;
 clocks = <&clk_msis>;
 status = "okay";
};

&rcc {
 clocks = <&pll1>;
 clock-frequency = <((160) * 1000 * 1000)>;
 ahb-prescaler = <1>;
 apb1-prescaler = <1>;
 apb2-prescaler = <1>;
 apb3-prescaler = <1>;
};

&lptim1 {
 clocks = <&rcc 0x0A8 0x00000800>,
   <&rcc 0x00B ((((0xE8) & 0xFFU) << 0U) | (((10) & 0x1FU) << 8U) | (((3) & 0x7U) << 13U) | (((3) & 0x7U) << 16U))>;
 status = "okay";
};

&usart1 {
 pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
 pinctrl-names = "default";
 current-speed = <115200>;
 status = "okay";
};

&usart3 {
 pinctrl-0 = <&usart3_tx_pd8 &usart3_rx_pd9>;
 pinctrl-names = "default";
 current-speed = <115200>;
 status = "okay";
};

&spi1 {
 pinctrl-0 = <&spi1_nss_pe12 &spi1_sck_pe13
       &spi1_miso_pe14 &spi1_mosi_pe15>;
 pinctrl-names = "default";
 status = "okay";
};

&timers4 {
 status = "okay";
 st,prescaler = <1>;
 pwm4: pwm {
  status = "okay";
  pinctrl-0 = <&tim4_ch1_pb6>;
  pinctrl-names = "default";
 };
};

&timers3 {
 status = "okay";
 st,prescaler = <255>;
 pwm3: pwm {
  status = "okay";
  pinctrl-0 = <&tim3_ch2_pe4>;
  pinctrl-names = "default";
 };
};

&octospi2 {
 pinctrl-0 = <&octospim_p2_clk_pf4 &octospim_p2_ncs_pi5
       &octospim_p2_io0_pf0 &octospim_p2_io1_pf1
       &octospim_p2_io2_pf2 &octospim_p2_io3_pf3
       &octospim_p2_io4_ph9 &octospim_p2_io5_ph10
       &octospim_p2_io6_ph11 &octospim_p2_io7_ph12
       &octospim_p2_dqs_pf12>;
 pinctrl-names = "default";

 status = "okay";

 mx25lm51245: ospi-nor-flash@0 {
  compatible = "st,stm32-ospi-nor";
  reg = <0>;
  ospi-max-frequency = <((50) * 1000 * 1000)>;
  size = <((512) * 1024 * 1024)>;
  spi-bus-width = <8>;
  data-rate = <2>;
  four-byte-opcodes;
  status = "okay";

  partitions {
      compatible = "fixed-partitions";
      #address-cells = <1>;
      #size-cells = <1>;

      partition@0 {
          reg = <0x00000000 ((64) * 1024 * 1024)>;
      };
  };
 };
};

&i2c1 {
 pinctrl-0 = <&i2c1_scl_pb8 &i2c1_sda_pb9>;
 pinctrl-names = "default";
 status = "okay";
 clock-frequency = <400000>;
};

&i2c2 {
 pinctrl-0 = <&i2c2_scl_ph4 &i2c2_sda_ph5>;
 pinctrl-names = "default";
 status = "okay";
 clock-frequency = <400000>;

 hts221@5f {
  compatible = "st,hts221";
  reg = <0x5f>;
 };
};

&aes {
 status = "okay";
};

&rng {
 status = "okay";
};

zephyr_udc0: &usbotg_fs {
 pinctrl-0 = <&usb_otg_fs_dm_pa11 &usb_otg_fs_dp_pa12>;
 pinctrl-names = "default";
 status = "okay";
};

&adc1 {
 pinctrl-0 = <&adc1_in15_pb0>;
 pinctrl-names = "default";
 st,adc-clock-source = <2>;
 st,adc-prescaler = <4>;
 status = "okay";
};

&adc4 {
 pinctrl-0 = <&adc4_in19_pb1>;
 pinctrl-names = "default";
 st,adc-clock-source = <2>;
 st,adc-prescaler = <4>;
 status = "okay";
};

&die_temp {
 status = "okay";
};

&dac1 {
 pinctrl-0 = <&dac1_out1_pa4>;
 pinctrl-names = "default";
 status = "okay";
};

&iwdg {
 status = "okay";
};

&vref1 {
 status = "okay";
};

&vbat4 {
 status = "okay";
};
# 9 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/arm/b_u585i_iot02a/b_u585i_iot02a.dts" 2

/ {
 model = "STMicroelectronics B-U585I-IOT02A discovery kit";
 compatible = "st,b-u585i-iot02a";

 chosen {
  zephyr,console = &usart1;
  zephyr,shell-uart = &usart1;
  zephyr,sram = &sram0;
  zephyr,flash = &flash0;
  zephyr,code-partition = &slot0_partition;
 };

 aliases {
  led0 = &green_led_1;
  led1 = &red_led_1;
  sw0 = &user_button;
 };
};

&flash0 {
 partitions {
  compatible = "fixed-partitions";
  #address-cells = <1>;
  #size-cells = <1>;






  boot_partition: partition@0 {
   label = "mcuboot";
   reg = <0x00000000 ((64) * 1024)>;
  };
  slot0_partition: partition@10000 {
   label = "image-0";
   reg = <0x00010000 ((416) * 1024)>;
  };
  slot1_partition: partition@78000 {
   label = "image-1";
   reg = <0x00078000 ((416) * 1024)>;
  };
  scratch_partition: partition@e0000 {
   label = "image-scratch";
   reg = <0x000e0000 ((64) * 1024)>;
  };
  storage_partition: partition@f0000 {
   label = "storage";
   reg = <0x000f0000 ((64) * 1024)>;
  };

 };
};

&gpdma1 {
 status = "okay";
};
# 0 "<command-line>" 2
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/shields/adafruit_2_8_tft_touch_v2/adafruit_2_8_tft_touch_v2.overlay" 1






# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/shields/adafruit_2_8_tft_touch_v2/dts/adafruit_2_8_tft_touch_v2.dtsi" 1 3 4






# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/include/zephyr/dt-bindings/display/ili9xxx.h" 1 3 4
# 8 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/shields/adafruit_2_8_tft_touch_v2/dts/adafruit_2_8_tft_touch_v2.dtsi" 2 3 4

/ {
 chosen {
  zephyr,display = &ili9340;
 };

 lvgl_pointer {
  compatible = "zephyr,lvgl-pointer-input";
  input = <&ft5336_adafruit_2_8_tft_touch_v2>;
  swap-xy;
  invert-x;
  invert-y;
 };
};

&arduino_spi {
 status = "okay";
 cs-gpios = <&arduino_header 16 (1 << 0)>,
     <&arduino_header 10 (1 << 0)>;


 ili9340: ili9340@0 {
  compatible = "ilitek,ili9340";
  spi-max-frequency = <15151515>;
  reg = <0>;
  cmd-data-gpios = <&arduino_header 15 (1 << 0)>;
  width = <320>;
  height = <240>;
  pixel-format = <1U>;
  rotation = <90>;
  frmctr1 = [00 18];
  pwctrl1 = [23 00];
  vmctrl1 = [3e 28];
  vmctrl2 = [86];
  pgamctrl = [0f 31 2b 0c 0e 08 4e f1 37 07 10 03 0e 09 00];
  ngamctrl = [00 0e 14 03 11 07 31 c1 48 08 0f 0c 31 36 0f];
 };

 adafruit_2_8_tft_touch_v2_sdhc: sdhc@1 {
  compatible = "zephyr,sdhc-spi-slot";
  reg = <1>;
  status = "okay";
  spi-max-frequency = <24000000>;
  mmc {
   compatible = "zephyr,sdmmc-disk";
   status = "okay";
  };
 };
};

&arduino_i2c {
 ft5336_adafruit_2_8_tft_touch_v2: ft5336@38 {
  compatible = "focaltech,ft5336";
  reg = <0x38>;


 };
};
# 8 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/boards/shields/adafruit_2_8_tft_touch_v2/adafruit_2_8_tft_touch_v2.overlay" 2
# 0 "<command-line>" 2
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/app/boards/b_u585i_iot02a.overlay" 1




/ {
    stepper: stepper {
        compatible = "maxhbr,stepper";
        gpios = <&gpiog 7 (0 << 0)>,
                <&gpioe 4 (0 << 0)>;


    };
# 25 "/home/mhuber/MINE/REPOS/zephyr-rail/app/boards/b_u585i_iot02a.overlay"
};
# 0 "<command-line>" 2
# 1 "/home/mhuber/MINE/REPOS/zephyr-rail/zephyr/misc/empty_file.c"
